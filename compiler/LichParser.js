/* parser generated by jison 0.4.13 */
/*
  Returns a Parser object of the following structure:

  Parser: {
    yy: {}
  }

  Parser.prototype: {
    yy: {},
    trace: function(),
    symbols_: {associative list: name ==> number},
    terminals_: {associative list: number ==> name},
    productions_: [...],
    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),
    table: [...],
    defaultActions: {...},
    parseError: function(str, hash),
    parse: function(input),

    lexer: {
        EOF: 1,
        parseError: function(str, hash),
        setInput: function(input),
        input: function(),
        unput: function(str),
        more: function(),
        less: function(n),
        pastInput: function(),
        upcomingInput: function(),
        showPosition: function(),
        test_match: function(regex_match_array, rule_index),
        next: function(),
        lex: function(),
        begin: function(condition),
        popState: function(),
        _currentRules: function(),
        topState: function(),
        pushState: function(condition),

        options: {
            ranges: boolean           (optional: true ==> token location info will include a .range[] member)
            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)
            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)
        },

        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),
        rules: [...],
        conditions: {associative list: name ==> set},
    }
  }


  token location info (@$, _$, etc.): {
    first_line: n,
    last_line: n,
    first_column: n,
    last_column: n,
    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)
  }


  the parseError function receives a 'hash' object with these members for lexer and parser errors: {
    text:        (matched text)
    token:       (the produced terminal token, if any)
    line:        (yylineno)
  }
  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {
    loc:         (yylloc)
    expected:    (string describing the set of expected tokens)
    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)
  }
*/
var LichParser = (function(){
var parser = {trace: function trace() { },
yy: {},
symbols_: {"error":2,"start_":3,"module_":4,"EOF":5,"module":6,"modid":7,"where":8,"body":9,"(":10,"exports":11,")":12,"{":13,"topdecls":14,"}":15,"topdecls_nonempty":16,";":17,"topdecl":18,"decl":19,"data":20,"simpletype":21,"=":22,"constrs":23,"impdecl":24,"decls":25,"list_decl_comma_1":26,"decl_fixity":27,"var":28,"rhs":29,"apats":30,"pat":31,"varop":32,"::":33,"type":34,",":35,"vars":36,"exp":37,"infixl":38,"literal":39,"op_list_1_comma":40,"infixr":41,"infix":42,"tycon":43,"tyvars":44,"|":45,"constr":46,"con":47,"atypes":48,"atype":49,"exports_inner":50,"export":51,"qvar":52,"qtycon":53,"..":54,"list_cname_0_comma":55,"import":56,"imports":57,"hiding":58,"list_import_1_comma":59,"import_a":60,"infixexp":61,"infixexpLR":62,"lexp":63,"qop":64,"-":65,"if":66,"then":67,"else":68,"fexp":69,"\\":70,"->":71,"case":72,"of":73,"alts":74,"let":75,"in":76,"aexp":77,"alt":78,"list_cname_1_comma":79,"cname":80,"gcon":81,"tuple":82,"listexp":83,"list_exp_1_comma":84,"[":85,"]":86,"qconid":87,"conid":88,"qvarop":89,"qconop":90,"op":91,"conop":92,"consym":93,"`":94,"qvarsym":95,"qvarid":96,"gconsym":97,"varsym":98,"varid":99,"tyvar":100,"qcon":101,"list_1_comma":102,":":103,"qconsym":104,"gtycon":105,"apptype":106,"lpat":107,"apat":108,"_":109,"tuple_pat":110,"pat_list_1_comma":111,"integer":112,"$accept":0,"$end":1},
terminals_: {2:"error",5:"EOF",6:"module",8:"where",10:"(",12:")",13:"{",15:"}",17:";",20:"data",22:"=",33:"::",35:",",38:"infixl",41:"infixr",42:"infix",45:"|",54:"..",56:"import",58:"hiding",65:"-",66:"if",67:"then",68:"else",70:"\\",71:"->",72:"case",73:"of",75:"let",76:"in",85:"[",86:"]",87:"qconid",88:"conid",93:"consym",94:"`",95:"qvarsym",96:"qvarid",98:"varsym",99:"varid",103:":",104:"qconsym",109:"_",112:"integer"},
productions_: [0,[3,2],[4,4],[4,7],[4,1],[9,3],[9,0],[14,1],[16,3],[16,1],[18,1],[18,2],[18,4],[18,1],[25,2],[25,3],[25,3],[25,4],[26,3],[26,1],[19,1],[19,2],[19,3],[19,4],[19,7],[19,3],[19,5],[29,2],[29,4],[27,3],[27,3],[27,3],[21,1],[21,2],[23,3],[23,1],[46,1],[46,2],[48,2],[48,1],[11,1],[11,2],[50,3],[50,1],[51,1],[51,2],[51,1],[51,4],[51,4],[24,2],[24,5],[24,6],[57,1],[57,2],[57,1],[57,0],[59,3],[59,1],[60,1],[60,1],[60,4],[60,4],[37,3],[37,1],[61,2],[62,3],[62,2],[62,0],[63,6],[63,1],[63,4],[63,6],[63,4],[69,1],[69,2],[36,3],[36,1],[74,3],[74,1],[78,3],[55,1],[55,0],[79,3],[79,1],[80,1],[77,1],[77,1],[77,1],[77,3],[77,1],[77,1],[82,5],[83,3],[84,3],[84,1],[7,1],[7,1],[64,1],[64,1],[40,3],[40,1],[91,1],[91,1],[92,1],[92,3],[89,1],[89,1],[89,3],[90,1],[90,3],[32,1],[32,3],[44,2],[44,1],[100,1],[43,1],[53,1],[53,1],[47,1],[47,3],[101,1],[101,3],[101,1],[81,2],[81,2],[81,3],[81,1],[102,1],[102,2],[28,1],[28,3],[52,1],[52,3],[52,1],[97,1],[97,1],[49,1],[49,1],[49,3],[34,1],[34,3],[106,2],[106,1],[105,1],[31,1],[107,1],[107,2],[30,1],[30,2],[108,1],[108,1],[108,1],[108,1],[108,1],[108,3],[110,5],[111,3],[111,1],[39,1]],
performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {
/* this == yyval */

var $0 = $$.length - 1;
switch (yystate) {
case 1: return $$[$0-1]; 
break;
case 2:this.$ = {name: "module", modid: $$[$0-2], body: $$[$0], pos: this._$}; 
break;
case 3:this.$ = {name: "module", modid: $$[$0-5], exports: $$[$0-3], body: $$[$0], pos: this._$}; 
break;
case 4:this.$ = {name: "module", modid: new JSHC.ModName("Main"), body: $$[$0], pos:this._$}; 
break;
case 5: 
        var imps = [], decs = [], atdecs = false;
        for (var i = 0; i < $$[$0-1].length; i++) {
            if ($$[$0-1][i].name == "impdecl" && !atdecs) {
                imps.push($$[$0-1][i]);
            } else if ($$[$0-1][i].name == "impdecl" && atdecs) {
                throw new JSHC.ParseError("import declaration in statement block at line " + $$[$0-1][i].pos.first_line ,$$[$0-1][i].pos,"import declaration in statement block");
            } else {
                atdecs = true;
                decs.push($$[$0-1][i]);
            }
        }
        
        // add Prelude as an import if not explicitly imported
        var prelude_imported = false;
        for(i=0 ; i<imps.length ; i++){
	    if( imps[i].modid == "Prelude" ){
	        prelude_imported = true;
	        break;
            }
        }
        if( ! prelude_imported ){
            imps.push({name: "impdecl", modid: new JSHC.ModName("Prelude")});
        }

        this.$ = {name: "body", impdecls: imps, topdecls: decs, pos:this._$}; 
break;
case 6:this.$ = {name: "body", impdecls: [], topdecls: [], pos:this._$}; 
break;
case 7: this.$ = $$[$0]; 
break;
case 8: $$[$0-2].push($$[$0]); this.$ = $$[$0-2]; 
break;
case 9: this.$ = [$$[$0]]; 
break;
case 10:this.$ = {name: "topdecl-decl", decl: $$[$0], pos: this._$};
break;
case 11:this.$ = {name: "topdecl-data", typ: $$[$0], constrs: [], pos: this._$};
break;
case 12:this.$ = {name: "topdecl-data", typ: $$[$0-2], constrs: $$[$0], pos: this._$};
break;
case 13:this.$ = $$[$0];
break;
case 14: this.$ = []; 
break;
case 15: this.$ = $$[$0-1]; 
break;
case 16: this.$ = []; 
break;
case 17: this.$ = $$[$0-2]; 
break;
case 18: ($$[$0-2]).push($$[$0]); this.$ = $$[$0-2]; 
break;
case 19: this.$ = [$$[$0]]; 
break;
case 20:this.$ = $$[$0];
break;
case 21:this.$ = {name:"decl-fun", ident: $$[$0-1], args: [], rhs: $$[$0], pos: this._$};
break;
case 22:this.$ = {name:"decl-fun", ident: $$[$0-2], args: $$[$0-1], rhs: $$[$0], pos: this._$};
break;
case 23:this.$ = {name:"decl-fun", ident: $$[$0-2], args: [$$[$0-3],$$[$0-1]], rhs: $$[$0], pos: this._$, orig: "infix"};
break;
case 24:this.$ = {name:"decl-fun", ident: $$[$0-4], args: [$$[$0-5],$$[$0-3]].concat($$[$0-1]), rhs: $$[$0], pos: this._$, orig: "infix"};
break;
case 25:this.$ = {name:"type-signature",vars:[$$[$0-2]],sig:$$[$0],pos:this._$};
break;
case 26:this.$ = {name:"type-signature",vars:[$$[$0-4]].concat($$[$0-2]),sig:$$[$0],pos:this._$};
break;
case 27:this.$ = $$[$0];
break;
case 28:this.$ = {name: "fun-where", exp: $$[$0-2], decls: $$[$0], pos: this._$}; 
break;
case 29: this.$ = {name: "fixity", fix: "leftfix", num: $$[$0-1], ops: $$[$0], pos: this._$}; 
break;
case 30: this.$ = {name: "fixity", fix: "rightfix", num: $$[$0-1], ops: $$[$0], pos: this._$}; 
break;
case 31: this.$ = {name: "fixity",  fix: "nonfix",num: $$[$0-1], ops: $$[$0], pos: this._$}; 
break;
case 32:this.$ = {name: "simpletype", tycon: $$[$0], vars: [], pos: this._$};
break;
case 33:this.$ = {name: "simpletype", tycon: $$[$0-1], vars: $$[$0], pos: this._$};
break;
case 34:$$[$0-2].push($$[$0]); this.$ = $$[$0-2];
break;
case 35:this.$ = [$$[$0]];
break;
case 36:this.$ = {name: "constr", dacon: $$[$0], types: [], pos: this._$};
break;
case 37:this.$ = {name: "constr", dacon: $$[$0-1], types: $$[$0], pos: this._$};
break;
case 38:$$[$0-1].push($$[$0]); this.$ = $$[$0-1];
break;
case 39:this.$ = [$$[$0]];
break;
case 40:this.$ = $$[$0];
break;
case 41:this.$ = $$[$0-1];
break;
case 42:$$[$0-2].push($$[$0]); this.$ = $$[$0-2];
break;
case 43:this.$ = [$$[$0]];
break;
case 44:this.$ = {name: "export-qvar", exp: $$[$0], pos: this._$};
break;
case 45:this.$ = {name: "export-module", exp: $$[$0], pos: this._$};
break;
case 46:this.$ = {name: "export-type-unspec", exp: $$[$0], pos: this._$};
break;
case 47:this.$ = {name: "export-type-all", exp: $$[$0-3], pos: this._$};
break;
case 48:this.$ = {name: "export-type-vars", exp: $$[$0-3], vars: $$[$0-1], pos: this._$};
break;
case 49:this.$ = {name: "impdecl", modid: $$[$0], pos: this._$};
break;
case 50:this.$ = {name: "impdecl", modid: $$[$0-3], hiding: false, imports: $$[$0-1], pos: this._$};
break;
case 51:this.$ = {name: "impdecl", modid: $$[$0-4], hiding: true, imports: $$[$0-1], pos: this._$};
break;
case 52:this.$ = $$[$0];
break;
case 53:this.$ = $$[$0-1];
break;
case 54:this.$ = [];
break;
case 55:this.$ = [];
break;
case 56:$$[$0-2].push($$[$0]); this.$ = $$[$0-2];
break;
case 57:this.$ = [$$[$0]];
break;
case 58:this.$ = {name: "import-var", varname: $$[$0], pos: this._$};
break;
case 59:this.$ = {name: "import-tycon", tycon: $$[$0], all: false, pos: this._$};
break;
case 60:this.$ = {name: "import-tycon", tycon: $$[$0-3], all: true, pos: this._$};
break;
case 61:this.$ = {name: "import-tycon", tycon: $$[$0-3], all: false, list:$$[$0-1], pos: this._$};
break;
case 62:this.$ = {name:"type-signature",exp:$$[$0-2],sig:$$[$0],pos:this._$};
break;
case 63:this.$ = $$[$0];
break;
case 64:
          ($$[$0-1]).push($$[$0]);
          if( ($$[$0-1]).length == 1 && ($$[$0-1])[0].name=="infixexp" ){
                  this.$ = ($$[$0-1])[0];
          } else {
              this.$ = {name:"infixexp",exps:$$[$0-1],pos:this._$};
          }
      
break;
case 65:($$[$0-2]).push($$[$0-1],$$[$0]); this.$ = $$[$0-2];
break;
case 66:($$[$0-1]).push($$[$0]);    this.$ = $$[$0];
break;
case 67:this.$ = [];
break;
case 68:this.$ = {name:"ite",e1:$$[$0-4],e2:$$[$0-2],e3:$$[$0],pos:this._$}; 
break;
case 69: this.$ = ($$[$0].length === 1) ? ($$[$0][0]) : {name:"application", exps:$$[$0],pos:this._$}; 
break;
case 70:this.$ = {name:"lambda", args: $$[$0-2], rhs: $$[$0], pos: this._$}; 
break;
case 71:this.$ = {name:"case", exp: $$[$0-4], alts: $$[$0-1], pos: this._$}; 
break;
case 72:this.$ = {name:"let", decls: $$[$0-2], exp: $$[$0], pos: this._$}; 
break;
case 73:this.$ = [$$[$0]];
break;
case 74:($$[$0-1]).push($$[$0]); this.$ = $$[$0-1];
break;
case 75:$$[$0-2].push($$[$0]); this.$ = $$[$0-2];
break;
case 76:this.$ = [$$[$0]];
break;
case 77:$$[$0-2].push($$[$0]); this.$ = $$[$0-2];
break;
case 78:this.$ = [$$[$0]];
break;
case 79:this.$ = {name:"alt", pat: $$[$0-2], exp: $$[$0]};
break;
case 80:this.$ = $$[$0];
break;
case 81:this.$ = [];
break;
case 82:$$[$0-2].push($$[$0]); this.$ = $$[$0-2];
break;
case 83:this.$ = [$$[$0]];
break;
case 84:this.$ = $$[$0];
break;
case 85:this.$ = $$[$0];
break;
case 86:this.$ = $$[$0];
break;
case 87:this.$ = $$[$0];
break;
case 88:this.$ = $$[$0-1];
break;
case 89:this.$ = $$[$0];
break;
case 90:this.$ = $$[$0];
break;
case 91:$$[$0-1].unshift($$[$0-3]); this.$ = {name: "tuple", members: $$[$0-1], pos: this._$}; 
break;
case 92: this.$ = {name: "listexp", members: $$[$0-1], pos: this._$}; 
break;
case 93:$$[$0-2].push($$[$0]); this.$ = $$[$0-2]; 
break;
case 94:this.$ = [$$[$0]];
break;
case 95:this.$ = new JSHC.ModName($$[$0], this._$, yy.lexer.previous.qual);
break;
case 96:this.$ = new JSHC.ModName($$[$0], this._$);
break;
case 97:this.$ = {name: "qop", id: $$[$0], pos: this._$};
break;
case 98:this.$ = {name: "qop", id: $$[$0], pos: this._$};
break;
case 99: $$[$0-2].push($$[$0]); this.$ = $$[$0-2]; 
break;
case 100: this.$ = [$$[$0]]; 
break;
case 101: this.$ = $$[$0]; 
break;
case 102: this.$ = $$[$0]; 
break;
case 103: this.$ = new JSHC.DaCon($$[$0], this._$, true); 
break;
case 104: this.$ = new JSHC.DaCon($$[$0-1], this._$, false); 
break;
case 105:this.$ = new JSHC.VarName($$[$0], this._$, true, yy.lexer.previous.qual);
break;
case 106:this.$ = $$[$0];
break;
case 107:this.$ = new JSHC.VarName($$[$0-1], this._$, false, yy.lexer.previous.qual);
break;
case 108:this.$ = $$[$0];
break;
case 109:this.$ = new JSHC.DaCon($$[$0-1], this._$, false, yy.lexer.previous.qual);
break;
case 110:this.$ = new JSHC.VarName($$[$0], this._$, true);
break;
case 111:this.$ = new JSHC.VarName($$[$0-1], this._$, false)
break;
case 112:$$[$0-1].push($$[$0]); this.$ = $$[$0-1];
break;
case 113:this.$ = [$$[$0]];
break;
case 114:this.$ = new JSHC.TyVar($$[$0], this._$);
break;
case 115:this.$ = new JSHC.TyCon($$[$0], this._$);
break;
case 116:this.$ = new JSHC.TyCon($$[$0], this._$, yy.lexer.previous.qual);
break;
case 117:this.$ = $$[$0];
break;
case 118:this.$ = new JSHC.DaCon($$[$0], this._$, false);
break;
case 119:this.$ = new JSHC.DaCon($$[$0-1], this._$, true);
break;
case 120:this.$ = new JSHC.DaCon($$[$0], this._$, false, yy.lexer.previous.qual);
break;
case 121:this.$ = $$[$0-1];
break;
case 122:this.$ = $$[$0];
break;
case 123:this.$ = new JSHC.UnitDaCon(this._$);
break;
case 124:this.$ = new JSHC.NilDaCon(this._$);
break;
case 125:this.$ = new JSHC.TupleDaCon($$[$0-1] + 1, this._$);
break;
case 126:this.$ = $$[$0];
break;
case 127:this.$ = 1;
break;
case 128:this.$ = $$[$0-1] + 1;
break;
case 129:this.$ = new JSHC.VarName($$[$0], this._$, false);
break;
case 130:this.$ = new JSHC.VarName($$[$0-1], this._$, true);
break;
case 131:this.$ = new JSHC.VarName($$[$0], this._$, false, yy.lexer.previous.qual);
break;
case 132:this.$ = new JSHC.VarName($$[$0-1], this._$, true, yy.lexer.previous.qual);
break;
case 133:this.$ = $$[$0];
break;
case 134:this.$ = new JSHC.ConsDaCon(this._$);
break;
case 135:this.$ = new JSHC.DaCon($$[$0], this._$, true, yy.lexer.previous.qual);
break;
case 136:this.$ = $$[$0];
break;
case 137:this.$ = $$[$0];
break;
case 138:this.$ = $$[$0-1];
break;
case 139:this.$ = $$[$0];
break;
case 140:this.$ = new JSHC.FunType([$$[$0-2],$$[$0]],this._$);
break;
case 141:this.$ = new JSHC.AppType($$[$0-1],$$[$0],this._$);
break;
case 142:this.$ = $$[$0];
break;
case 143:this.$ = $$[$0];
break;
case 144:this.$ = $$[$0];
break;
case 145:this.$ = $$[$0];
break;
case 146:this.$ = {name: "conpat", con: $$[$0-1], pats: $$[$0]}; 
break;
case 147:this.$ = [$$[$0]];
break;
case 148:$$[$0-1].push($$[$0]); this.$ = $$[$0-1];
break;
case 149:this.$ = $$[$0]; 
break;
case 150:this.$ = $$[$0]; 
break;
case 151:this.$ = $$[$0]; 
break;
case 152:this.$ = {name:"wildcard", pos: this._$}; 
break;
case 153:this.$ = $$[$0]; 
break;
case 154:this.$ = $$[$0-1]; 
break;
case 155:$$[$0-1].unshift($$[$0-3]); this.$ = {name: "tuple_pat", members: $$[$0-1], pos: this._$}; 
break;
case 156:$$[$0-2].push($$[$0]); this.$ = $$[$0-2]; 
break;
case 157:this.$ = [$$[$0]]; 
break;
case 158:this.$ = {name: "integer-lit", value: Number($$[$0]), pos: this._$};
break;
}
},
table: [{3:1,4:2,5:[2,6],6:[1,3],9:4,13:[1,5]},{1:[3]},{5:[1,6]},{7:7,87:[1,8],88:[1,9]},{5:[2,4]},{10:[1,19],14:10,16:11,18:12,19:13,20:[1,14],24:15,27:16,28:17,31:18,38:[1,21],39:28,41:[1,22],42:[1,23],47:35,56:[1,20],81:27,85:[1,31],87:[1,34],88:[1,36],99:[1,24],101:32,107:25,108:26,109:[1,29],110:30,112:[1,33]},{1:[2,1]},{8:[1,37],10:[1,38]},{8:[2,95],10:[2,95],12:[2,95],15:[2,95],17:[2,95],35:[2,95],58:[2,95]},{8:[2,96],10:[2,96],12:[2,96],15:[2,96],17:[2,96],35:[2,96],58:[2,96]},{15:[1,39]},{15:[2,7],17:[1,40]},{15:[2,9],17:[2,9]},{15:[2,10],17:[2,10]},{21:41,43:42,88:[1,43]},{15:[2,13],17:[2,13]},{2:[2,20],15:[2,20],17:[2,20]},{10:[1,52],22:[1,48],28:50,29:44,30:45,33:[1,46],35:[1,47],39:28,47:35,81:51,85:[1,31],87:[1,34],88:[1,36],94:[2,149],98:[2,149],99:[1,24],101:32,108:49,109:[1,29],110:30,112:[1,33]},{32:53,94:[1,55],98:[1,54]},{10:[1,52],12:[1,58],28:50,31:56,35:[1,62],39:28,47:35,81:27,85:[1,31],87:[1,34],88:[1,36],93:[1,61],97:60,98:[1,57],99:[1,24],101:32,102:59,103:[1,63],104:[1,64],107:25,108:26,109:[1,29],110:30,112:[1,33]},{7:65,87:[1,8],88:[1,9]},{39:66,112:[1,33]},{39:67,112:[1,33]},{39:68,112:[1,33]},{2:[2,129],8:[2,129],10:[2,129],12:[2,129],15:[2,129],17:[2,129],22:[2,129],33:[2,129],35:[2,129],67:[2,129],68:[2,129],71:[2,129],73:[2,129],85:[2,129],86:[2,129],87:[2,129],88:[2,129],94:[2,129],95:[2,129],96:[2,129],98:[2,129],99:[2,129],103:[2,129],104:[2,129],109:[2,129],112:[2,129]},{12:[2,144],22:[2,144],35:[2,144],71:[2,144],94:[2,144],98:[2,144]},{12:[2,145],22:[2,145],35:[2,145],71:[2,145],94:[2,145],98:[2,145]},{10:[1,52],12:[2,150],22:[2,150],28:50,30:69,35:[2,150],39:28,47:35,71:[2,150],81:51,85:[1,31],87:[1,34],88:[1,36],94:[2,150],98:[2,150],99:[1,24],101:32,108:49,109:[1,29],110:30,112:[1,33]},{10:[2,151],12:[2,151],22:[2,151],35:[2,151],71:[2,151],85:[2,151],87:[2,151],88:[2,151],94:[2,151],98:[2,151],99:[2,151],109:[2,151],112:[2,151]},{10:[2,152],12:[2,152],22:[2,152],35:[2,152],71:[2,152],85:[2,152],87:[2,152],88:[2,152],94:[2,152],98:[2,152],99:[2,152],109:[2,152],112:[2,152]},{10:[2,153],12:[2,153],22:[2,153],35:[2,153],71:[2,153],85:[2,153],87:[2,153],88:[2,153],94:[2,153],98:[2,153],99:[2,153],109:[2,153],112:[2,153]},{86:[1,70]},{2:[2,126],8:[2,126],10:[2,126],12:[2,126],15:[2,126],17:[2,126],22:[2,126],33:[2,126],35:[2,126],67:[2,126],68:[2,126],71:[2,126],73:[2,126],85:[2,126],86:[2,126],87:[2,126],88:[2,126],94:[2,126],95:[2,126],96:[2,126],98:[2,126],99:[2,126],103:[2,126],104:[2,126],109:[2,126],112:[2,126]},{2:[2,158],8:[2,158],10:[2,158],12:[2,158],15:[2,158],17:[2,158],22:[2,158],33:[2,158],35:[2,158],67:[2,158],68:[2,158],71:[2,158],73:[2,158],85:[2,158],86:[2,158],87:[2,158],88:[2,158],93:[2,158],94:[2,158],95:[2,158],96:[2,158],98:[2,158],99:[2,158],103:[2,158],104:[2,158],109:[2,158],112:[2,158]},{2:[2,120],8:[2,120],10:[2,120],12:[2,120],15:[2,120],17:[2,120],22:[2,120],33:[2,120],35:[2,120],67:[2,120],68:[2,120],71:[2,120],73:[2,120],85:[2,120],86:[2,120],87:[2,120],88:[2,120],94:[2,120],95:[2,120],96:[2,120],98:[2,120],99:[2,120],103:[2,120],104:[2,120],109:[2,120],112:[2,120]},{2:[2,122],8:[2,122],10:[2,122],12:[2,122],15:[2,122],17:[2,122],22:[2,122],33:[2,122],35:[2,122],67:[2,122],68:[2,122],71:[2,122],73:[2,122],85:[2,122],86:[2,122],87:[2,122],88:[2,122],94:[2,122],95:[2,122],96:[2,122],98:[2,122],99:[2,122],103:[2,122],104:[2,122],109:[2,122],112:[2,122]},{2:[2,118],8:[2,118],10:[2,118],12:[2,118],15:[2,118],17:[2,118],22:[2,118],33:[2,118],35:[2,118],45:[2,118],67:[2,118],68:[2,118],71:[2,118],73:[2,118],85:[2,118],86:[2,118],87:[2,118],88:[2,118],94:[2,118],95:[2,118],96:[2,118],98:[2,118],99:[2,118],103:[2,118],104:[2,118],109:[2,118],112:[2,118]},{5:[2,6],9:71,13:[1,5]},{6:[1,76],10:[1,79],11:72,28:80,43:82,50:73,51:74,52:75,53:77,87:[1,81],88:[1,43],96:[1,78],99:[1,24]},{5:[2,5]},{10:[1,19],18:83,19:13,20:[1,14],24:15,27:16,28:17,31:18,38:[1,21],39:28,41:[1,22],42:[1,23],47:35,56:[1,20],81:27,85:[1,31],87:[1,34],88:[1,36],99:[1,24],101:32,107:25,108:26,109:[1,29],110:30,112:[1,33]},{15:[2,11],17:[2,11],22:[1,84]},{15:[2,32],17:[2,32],22:[2,32],44:85,99:[1,87],100:86},{2:[2,115],8:[2,115],10:[2,115],12:[2,115],15:[2,115],17:[2,115],22:[2,115],33:[2,115],35:[2,115],45:[2,115],67:[2,115],68:[2,115],71:[2,115],73:[2,115],86:[2,115],87:[2,115],88:[2,115],94:[2,115],95:[2,115],98:[2,115],99:[2,115],103:[2,115],104:[2,115]},{2:[2,21],15:[2,21],17:[2,21]},{10:[1,52],22:[1,48],28:50,29:88,39:28,47:35,81:51,85:[1,31],87:[1,34],88:[1,36],99:[1,24],101:32,108:89,109:[1,29],110:30,112:[1,33]},{10:[1,95],34:90,43:82,49:92,53:96,87:[1,81],88:[1,43],99:[1,87],100:94,105:93,106:91},{10:[1,99],28:98,36:97,99:[1,24]},{10:[2,67],37:100,61:101,62:102,65:[2,67],66:[2,67],70:[2,67],72:[2,67],75:[2,67],85:[2,67],87:[2,67],88:[2,67],96:[2,67],99:[2,67],112:[2,67]},{10:[2,147],12:[2,147],22:[2,147],35:[2,147],71:[2,147],85:[2,147],87:[2,147],88:[2,147],94:[2,147],98:[2,147],99:[2,147],109:[2,147],112:[2,147]},{10:[2,149],12:[2,149],22:[2,149],35:[2,149],71:[2,149],85:[2,149],87:[2,149],88:[2,149],94:[2,149],98:[2,149],99:[2,149],109:[2,149],112:[2,149]},{10:[2,150],12:[2,150],22:[2,150],35:[2,150],71:[2,150],85:[2,150],87:[2,150],88:[2,150],94:[2,150],98:[2,150],99:[2,150],109:[2,150],112:[2,150]},{10:[1,52],12:[1,58],28:50,31:103,35:[1,62],39:28,47:35,81:27,85:[1,31],87:[1,34],88:[1,36],93:[1,61],97:60,98:[1,57],99:[1,24],101:32,102:59,103:[1,63],104:[1,64],107:25,108:26,109:[1,29],110:30,112:[1,33]},{10:[1,52],28:50,31:104,39:28,47:35,81:27,85:[1,31],87:[1,34],88:[1,36],99:[1,24],101:32,107:25,108:26,109:[1,29],110:30,112:[1,33]},{2:[2,110],10:[2,110],15:[2,110],17:[2,110],35:[2,110],65:[2,110],66:[2,110],70:[2,110],72:[2,110],75:[2,110],85:[2,110],87:[2,110],88:[2,110],96:[2,110],99:[2,110],109:[2,110],112:[2,110]},{99:[1,105]},{12:[1,107],32:106,35:[1,108],94:[1,55],98:[1,54]},{12:[1,109]},{2:[2,123],8:[2,123],10:[2,123],12:[2,123],15:[2,123],17:[2,123],22:[2,123],33:[2,123],35:[2,123],67:[2,123],68:[2,123],71:[2,123],73:[2,123],85:[2,123],86:[2,123],87:[2,123],88:[2,123],94:[2,123],95:[2,123],96:[2,123],98:[2,123],99:[2,123],103:[2,123],104:[2,123],109:[2,123],112:[2,123]},{12:[1,110],35:[1,111]},{12:[1,112]},{12:[1,113]},{12:[2,127],35:[2,127]},{10:[2,134],12:[2,134],65:[2,134],66:[2,134],70:[2,134],72:[2,134],75:[2,134],85:[2,134],87:[2,134],88:[2,134],96:[2,134],99:[2,134],112:[2,134]},{10:[2,135],12:[2,135],65:[2,135],66:[2,135],70:[2,135],72:[2,135],75:[2,135],85:[2,135],87:[2,135],88:[2,135],96:[2,135],99:[2,135],112:[2,135]},{10:[1,114],15:[2,49],17:[2,49],58:[1,115]},{32:118,40:116,91:117,92:119,93:[1,121],94:[1,120],98:[1,54]},{32:118,40:122,91:117,92:119,93:[1,121],94:[1,120],98:[1,54]},{32:118,40:123,91:117,92:119,93:[1,121],94:[1,120],98:[1,54]},{10:[1,52],12:[2,146],22:[2,146],28:50,35:[2,146],39:28,47:35,71:[2,146],81:51,85:[1,31],87:[1,34],88:[1,36],94:[2,146],98:[2,146],99:[1,24],101:32,108:89,109:[1,29],110:30,112:[1,33]},{2:[2,124],8:[2,124],10:[2,124],12:[2,124],15:[2,124],17:[2,124],22:[2,124],33:[2,124],35:[2,124],67:[2,124],68:[2,124],71:[2,124],73:[2,124],85:[2,124],86:[2,124],87:[2,124],88:[2,124],94:[2,124],95:[2,124],96:[2,124],98:[2,124],99:[2,124],103:[2,124],104:[2,124],109:[2,124],112:[2,124]},{5:[2,2]},{12:[1,124]},{12:[2,40],35:[1,125]},{12:[2,43],35:[2,43]},{12:[2,44],35:[2,44]},{7:126,87:[1,8],88:[1,9]},{10:[1,127],12:[2,46],35:[2,46]},{2:[2,131],8:[2,131],10:[2,131],12:[2,131],15:[2,131],17:[2,131],33:[2,131],35:[2,131],67:[2,131],68:[2,131],73:[2,131],85:[2,131],86:[2,131],87:[2,131],88:[2,131],94:[2,131],95:[2,131],96:[2,131],98:[2,131],99:[2,131],103:[2,131],104:[2,131],112:[2,131]},{95:[1,128],98:[1,57]},{2:[2,133],8:[2,133],10:[2,133],12:[2,133],15:[2,133],17:[2,133],33:[2,133],35:[2,133],67:[2,133],68:[2,133],73:[2,133],85:[2,133],86:[2,133],87:[2,133],88:[2,133],94:[2,133],95:[2,133],96:[2,133],98:[2,133],99:[2,133],103:[2,133],104:[2,133],112:[2,133]},{2:[2,116],8:[2,116],10:[2,116],12:[2,116],15:[2,116],17:[2,116],33:[2,116],35:[2,116],45:[2,116],67:[2,116],68:[2,116],71:[2,116],73:[2,116],86:[2,116],87:[2,116],88:[2,116],94:[2,116],95:[2,116],98:[2,116],99:[2,116],103:[2,116],104:[2,116]},{2:[2,117],8:[2,117],10:[2,117],12:[2,117],15:[2,117],17:[2,117],33:[2,117],35:[2,117],45:[2,117],67:[2,117],68:[2,117],71:[2,117],73:[2,117],86:[2,117],87:[2,117],88:[2,117],94:[2,117],95:[2,117],98:[2,117],99:[2,117],103:[2,117],104:[2,117]},{15:[2,8],17:[2,8]},{10:[1,132],23:129,46:130,47:131,88:[1,36]},{15:[2,33],17:[2,33],22:[2,33],99:[1,87],100:133},{15:[2,113],17:[2,113],22:[2,113],99:[2,113]},{2:[2,114],8:[2,114],10:[2,114],12:[2,114],15:[2,114],17:[2,114],22:[2,114],33:[2,114],35:[2,114],45:[2,114],67:[2,114],68:[2,114],71:[2,114],73:[2,114],86:[2,114],87:[2,114],88:[2,114],94:[2,114],95:[2,114],98:[2,114],99:[2,114],103:[2,114],104:[2,114]},{2:[2,22],15:[2,22],17:[2,22]},{10:[2,148],12:[2,148],22:[2,148],35:[2,148],71:[2,148],85:[2,148],87:[2,148],88:[2,148],94:[2,148],98:[2,148],99:[2,148],109:[2,148],112:[2,148]},{2:[2,25],15:[2,25],17:[2,25]},{2:[2,139],8:[2,139],10:[1,95],12:[2,139],15:[2,139],17:[2,139],33:[2,139],35:[2,139],43:82,49:135,53:96,67:[2,139],68:[2,139],71:[1,134],73:[2,139],86:[2,139],87:[1,81],88:[1,43],94:[2,139],95:[2,139],98:[2,139],99:[1,87],100:94,103:[2,139],104:[2,139],105:93},{2:[2,142],8:[2,142],10:[2,142],12:[2,142],15:[2,142],17:[2,142],33:[2,142],35:[2,142],67:[2,142],68:[2,142],71:[2,142],73:[2,142],86:[2,142],87:[2,142],88:[2,142],94:[2,142],95:[2,142],98:[2,142],99:[2,142],103:[2,142],104:[2,142]},{2:[2,136],8:[2,136],10:[2,136],12:[2,136],15:[2,136],17:[2,136],33:[2,136],35:[2,136],45:[2,136],67:[2,136],68:[2,136],71:[2,136],73:[2,136],86:[2,136],87:[2,136],88:[2,136],94:[2,136],95:[2,136],98:[2,136],99:[2,136],103:[2,136],104:[2,136]},{2:[2,137],8:[2,137],10:[2,137],12:[2,137],15:[2,137],17:[2,137],33:[2,137],35:[2,137],45:[2,137],67:[2,137],68:[2,137],71:[2,137],73:[2,137],86:[2,137],87:[2,137],88:[2,137],94:[2,137],95:[2,137],98:[2,137],99:[2,137],103:[2,137],104:[2,137]},{10:[1,95],34:136,43:82,49:92,53:96,87:[1,81],88:[1,43],99:[1,87],100:94,105:93,106:91},{2:[2,143],8:[2,143],10:[2,143],12:[2,143],15:[2,143],17:[2,143],33:[2,143],35:[2,143],45:[2,143],67:[2,143],68:[2,143],71:[2,143],73:[2,143],86:[2,143],87:[2,143],88:[2,143],94:[2,143],95:[2,143],98:[2,143],99:[2,143],103:[2,143],104:[2,143]},{33:[1,137],35:[1,138]},{33:[2,76],35:[2,76]},{98:[1,57]},{2:[2,27],8:[1,139],15:[2,27],17:[2,27]},{2:[2,63],8:[2,63],12:[2,63],15:[2,63],17:[2,63],33:[1,140],35:[2,63],67:[2,63],68:[2,63],73:[2,63],86:[2,63],94:[2,63],95:[2,63],98:[2,63],103:[2,63],104:[2,63]},{10:[1,152],28:80,39:151,47:35,52:149,63:141,65:[1,142],66:[1,143],69:144,70:[1,145],72:[1,146],75:[1,147],77:148,81:150,82:153,83:154,85:[1,155],87:[1,34],88:[1,36],96:[1,78],99:[1,24],101:32,112:[1,33]},{12:[1,107],35:[1,108]},{22:[1,48],29:156},{94:[1,157]},{10:[1,52],28:50,31:158,39:28,47:35,81:27,85:[1,31],87:[1,34],88:[1,36],99:[1,24],101:32,107:25,108:26,109:[1,29],110:30,112:[1,33]},{10:[2,154],12:[2,154],22:[2,154],35:[2,154],71:[2,154],85:[2,154],87:[2,154],88:[2,154],94:[2,154],98:[2,154],99:[2,154],109:[2,154],112:[2,154]},{10:[1,52],28:50,31:160,39:28,47:35,81:27,85:[1,31],87:[1,34],88:[1,36],99:[1,24],101:32,107:25,108:26,109:[1,29],110:30,111:159,112:[1,33]},{2:[2,130],8:[2,130],10:[2,130],12:[2,130],15:[2,130],17:[2,130],22:[2,130],33:[2,130],35:[2,130],67:[2,130],68:[2,130],71:[2,130],73:[2,130],85:[2,130],86:[2,130],87:[2,130],88:[2,130],94:[2,130],95:[2,130],96:[2,130],98:[2,130],99:[2,130],103:[2,130],104:[2,130],109:[2,130],112:[2,130]},{2:[2,125],8:[2,125],10:[2,125],12:[2,125],15:[2,125],17:[2,125],22:[2,125],33:[2,125],35:[2,125],67:[2,125],68:[2,125],71:[2,125],73:[2,125],85:[2,125],86:[2,125],87:[2,125],88:[2,125],94:[2,125],95:[2,125],96:[2,125],98:[2,125],99:[2,125],103:[2,125],104:[2,125],109:[2,125],112:[2,125]},{12:[2,128],35:[2,128]},{2:[2,121],8:[2,121],10:[2,121],12:[2,121],15:[2,121],17:[2,121],22:[2,121],33:[2,121],35:[2,121],67:[2,121],68:[2,121],71:[2,121],73:[2,121],85:[2,121],86:[2,121],87:[2,121],88:[2,121],94:[2,121],95:[2,121],96:[2,121],98:[2,121],99:[2,121],103:[2,121],104:[2,121],109:[2,121],112:[2,121]},{2:[2,119],8:[2,119],10:[2,119],12:[2,119],15:[2,119],17:[2,119],22:[2,119],33:[2,119],35:[2,119],45:[2,119],67:[2,119],68:[2,119],71:[2,119],73:[2,119],85:[2,119],86:[2,119],87:[2,119],88:[2,119],94:[2,119],95:[2,119],96:[2,119],98:[2,119],99:[2,119],103:[2,119],104:[2,119],109:[2,119],112:[2,119]},{10:[1,99],12:[2,55],28:165,35:[1,163],43:166,57:161,59:162,60:164,88:[1,43],99:[1,24]},{10:[1,167]},{2:[2,29],15:[2,29],17:[2,29],35:[1,168]},{2:[2,100],15:[2,100],17:[2,100],35:[2,100]},{2:[2,101],15:[2,101],17:[2,101],35:[2,101]},{2:[2,102],15:[2,102],17:[2,102],35:[2,102]},{88:[1,169],99:[1,105]},{2:[2,103],15:[2,103],17:[2,103],35:[2,103]},{2:[2,30],15:[2,30],17:[2,30],35:[1,168]},{2:[2,31],15:[2,31],17:[2,31],35:[1,168]},{8:[1,170]},{6:[1,76],10:[1,79],12:[2,41],28:80,43:82,51:171,52:75,53:77,87:[1,81],88:[1,43],96:[1,78],99:[1,24]},{12:[2,45],35:[2,45]},{10:[1,132],12:[2,81],47:176,54:[1,172],55:173,79:174,80:175,88:[1,36]},{12:[1,177]},{15:[2,12],17:[2,12],45:[1,178]},{15:[2,35],17:[2,35],45:[2,35]},{10:[1,95],15:[2,36],17:[2,36],43:82,45:[2,36],48:179,49:180,53:96,87:[1,81],88:[1,43],99:[1,87],100:94,105:93},{93:[1,61]},{15:[2,112],17:[2,112],22:[2,112],99:[2,112]},{10:[1,95],34:181,43:82,49:92,53:96,87:[1,81],88:[1,43],99:[1,87],100:94,105:93,106:91},{2:[2,141],8:[2,141],10:[2,141],12:[2,141],15:[2,141],17:[2,141],33:[2,141],35:[2,141],67:[2,141],68:[2,141],71:[2,141],73:[2,141],86:[2,141],87:[2,141],88:[2,141],94:[2,141],95:[2,141],98:[2,141],99:[2,141],103:[2,141],104:[2,141]},{12:[1,182]},{10:[1,95],34:183,43:82,49:92,53:96,87:[1,81],88:[1,43],99:[1,87],100:94,105:93,106:91},{10:[1,99],28:184,99:[1,24]},{13:[1,186],25:185},{10:[1,95],34:187,43:82,49:92,53:96,87:[1,81],88:[1,43],99:[1,87],100:94,105:93,106:91},{2:[2,64],8:[2,64],12:[2,64],15:[2,64],17:[2,64],32:192,33:[2,64],35:[2,64],64:188,67:[2,64],68:[2,64],73:[2,64],86:[2,64],89:189,90:190,94:[1,193],95:[1,191],97:194,98:[1,54],103:[1,63],104:[1,64]},{10:[2,66],65:[2,66],66:[2,66],70:[2,66],72:[2,66],75:[2,66],85:[2,66],87:[2,66],88:[2,66],96:[2,66],99:[2,66],112:[2,66]},{10:[2,67],37:195,61:101,62:102,65:[2,67],66:[2,67],70:[2,67],72:[2,67],75:[2,67],85:[2,67],87:[2,67],88:[2,67],96:[2,67],99:[2,67],112:[2,67]},{2:[2,69],8:[2,69],10:[1,152],12:[2,69],15:[2,69],17:[2,69],28:80,33:[2,69],35:[2,69],39:151,47:35,52:149,67:[2,69],68:[2,69],73:[2,69],77:196,81:150,82:153,83:154,85:[1,155],86:[2,69],87:[1,34],88:[1,36],94:[2,69],95:[2,69],96:[1,78],98:[2,69],99:[1,24],101:32,103:[2,69],104:[2,69],112:[1,33]},{10:[1,52],28:50,30:197,39:28,47:35,81:51,85:[1,31],87:[1,34],88:[1,36],99:[1,24],101:32,108:49,109:[1,29],110:30,112:[1,33]},{10:[2,67],37:198,61:101,62:102,65:[2,67],66:[2,67],70:[2,67],72:[2,67],75:[2,67],85:[2,67],87:[2,67],88:[2,67],96:[2,67],99:[2,67],112:[2,67]},{13:[1,186],25:199},{2:[2,73],8:[2,73],10:[2,73],12:[2,73],15:[2,73],17:[2,73],33:[2,73],35:[2,73],67:[2,73],68:[2,73],73:[2,73],85:[2,73],86:[2,73],87:[2,73],88:[2,73],94:[2,73],95:[2,73],96:[2,73],98:[2,73],99:[2,73],103:[2,73],104:[2,73],112:[2,73]},{2:[2,85],8:[2,85],10:[2,85],12:[2,85],15:[2,85],17:[2,85],33:[2,85],35:[2,85],67:[2,85],68:[2,85],73:[2,85],85:[2,85],86:[2,85],87:[2,85],88:[2,85],94:[2,85],95:[2,85],96:[2,85],98:[2,85],99:[2,85],103:[2,85],104:[2,85],112:[2,85]},{2:[2,86],8:[2,86],10:[2,86],12:[2,86],15:[2,86],17:[2,86],33:[2,86],35:[2,86],67:[2,86],68:[2,86],73:[2,86],85:[2,86],86:[2,86],87:[2,86],88:[2,86],94:[2,86],95:[2,86],96:[2,86],98:[2,86],99:[2,86],103:[2,86],104:[2,86],112:[2,86]},{2:[2,87],8:[2,87],10:[2,87],12:[2,87],15:[2,87],17:[2,87],33:[2,87],35:[2,87],67:[2,87],68:[2,87],73:[2,87],85:[2,87],86:[2,87],87:[2,87],88:[2,87],94:[2,87],95:[2,87],96:[2,87],98:[2,87],99:[2,87],103:[2,87],104:[2,87],112:[2,87]},{10:[2,67],12:[1,58],35:[1,62],37:200,61:101,62:102,65:[2,67],66:[2,67],70:[2,67],72:[2,67],75:[2,67],85:[2,67],87:[2,67],88:[2,67],93:[1,61],95:[1,128],96:[2,67],97:60,98:[1,57],99:[2,67],102:59,103:[1,63],104:[1,64],112:[2,67]},{2:[2,89],8:[2,89],10:[2,89],12:[2,89],15:[2,89],17:[2,89],33:[2,89],35:[2,89],67:[2,89],68:[2,89],73:[2,89],85:[2,89],86:[2,89],87:[2,89],88:[2,89],94:[2,89],95:[2,89],96:[2,89],98:[2,89],99:[2,89],103:[2,89],104:[2,89],112:[2,89]},{2:[2,90],8:[2,90],10:[2,90],12:[2,90],15:[2,90],17:[2,90],33:[2,90],35:[2,90],67:[2,90],68:[2,90],73:[2,90],85:[2,90],86:[2,90],87:[2,90],88:[2,90],94:[2,90],95:[2,90],96:[2,90],98:[2,90],99:[2,90],103:[2,90],104:[2,90],112:[2,90]},{10:[2,67],37:202,61:101,62:102,65:[2,67],66:[2,67],70:[2,67],72:[2,67],75:[2,67],84:201,85:[2,67],86:[1,70],87:[2,67],88:[2,67],96:[2,67],99:[2,67],112:[2,67]},{2:[2,23],15:[2,23],17:[2,23]},{2:[2,111],10:[2,111],15:[2,111],17:[2,111],35:[2,111],65:[2,111],66:[2,111],70:[2,111],72:[2,111],75:[2,111],85:[2,111],87:[2,111],88:[2,111],96:[2,111],99:[2,111],109:[2,111],112:[2,111]},{12:[1,203]},{12:[1,204],35:[1,205]},{12:[2,157],35:[2,157]},{12:[1,206]},{12:[2,52],35:[1,207]},{12:[2,54]},{12:[2,57],35:[2,57]},{12:[2,58],35:[2,58]},{10:[1,208],12:[2,59],35:[2,59]},{10:[1,99],12:[2,55],28:165,35:[1,163],43:166,57:209,59:162,60:164,88:[1,43],99:[1,24]},{32:118,91:210,92:119,93:[1,121],94:[1,120],98:[1,54]},{94:[1,211]},{5:[2,6],9:212,13:[1,5]},{12:[2,42],35:[2,42]},{12:[1,213]},{12:[1,214]},{12:[2,80],35:[1,215]},{12:[2,83],35:[2,83]},{12:[2,84],35:[2,84]},{2:[2,132],8:[2,132],10:[2,132],12:[2,132],15:[2,132],17:[2,132],33:[2,132],35:[2,132],67:[2,132],68:[2,132],73:[2,132],85:[2,132],86:[2,132],87:[2,132],88:[2,132],94:[2,132],95:[2,132],96:[2,132],98:[2,132],99:[2,132],103:[2,132],104:[2,132],112:[2,132]},{10:[1,132],46:216,47:131,88:[1,36]},{10:[1,95],15:[2,37],17:[2,37],43:82,45:[2,37],49:217,53:96,87:[1,81],88:[1,43],99:[1,87],100:94,105:93},{10:[2,39],15:[2,39],17:[2,39],45:[2,39],87:[2,39],88:[2,39],99:[2,39]},{2:[2,140],8:[2,140],12:[2,140],15:[2,140],17:[2,140],33:[2,140],35:[2,140],67:[2,140],68:[2,140],73:[2,140],86:[2,140],94:[2,140],95:[2,140],98:[2,140],103:[2,140],104:[2,140]},{2:[2,138],8:[2,138],10:[2,138],12:[2,138],15:[2,138],17:[2,138],33:[2,138],35:[2,138],45:[2,138],67:[2,138],68:[2,138],71:[2,138],73:[2,138],86:[2,138],87:[2,138],88:[2,138],94:[2,138],95:[2,138],98:[2,138],99:[2,138],103:[2,138],104:[2,138]},{2:[2,26],15:[2,26],17:[2,26]},{33:[2,75],35:[2,75]},{2:[2,28],15:[2,28],17:[2,28]},{2:[1,220],10:[1,19],15:[1,218],19:221,26:219,27:16,28:17,31:18,38:[1,21],39:28,41:[1,22],42:[1,23],47:35,81:27,85:[1,31],87:[1,34],88:[1,36],99:[1,24],101:32,107:25,108:26,109:[1,29],110:30,112:[1,33]},{2:[2,62],8:[2,62],12:[2,62],15:[2,62],17:[2,62],33:[2,62],35:[2,62],67:[2,62],68:[2,62],73:[2,62],86:[2,62],94:[2,62],95:[2,62],98:[2,62],103:[2,62],104:[2,62]},{10:[2,65],65:[2,65],66:[2,65],70:[2,65],72:[2,65],75:[2,65],85:[2,65],87:[2,65],88:[2,65],96:[2,65],99:[2,65],112:[2,65]},{10:[2,97],65:[2,97],66:[2,97],70:[2,97],72:[2,97],75:[2,97],85:[2,97],87:[2,97],88:[2,97],96:[2,97],99:[2,97],112:[2,97]},{10:[2,98],65:[2,98],66:[2,98],70:[2,98],72:[2,98],75:[2,98],85:[2,98],87:[2,98],88:[2,98],96:[2,98],99:[2,98],112:[2,98]},{10:[2,105],65:[2,105],66:[2,105],70:[2,105],72:[2,105],75:[2,105],85:[2,105],87:[2,105],88:[2,105],96:[2,105],99:[2,105],112:[2,105]},{10:[2,106],65:[2,106],66:[2,106],70:[2,106],72:[2,106],75:[2,106],85:[2,106],87:[2,106],88:[2,106],96:[2,106],99:[2,106],112:[2,106]},{87:[1,223],96:[1,222],99:[1,105]},{10:[2,108],65:[2,108],66:[2,108],70:[2,108],72:[2,108],75:[2,108],85:[2,108],87:[2,108],88:[2,108],96:[2,108],99:[2,108],112:[2,108]},{67:[1,224]},{2:[2,74],8:[2,74],10:[2,74],12:[2,74],15:[2,74],17:[2,74],33:[2,74],35:[2,74],67:[2,74],68:[2,74],73:[2,74],85:[2,74],86:[2,74],87:[2,74],88:[2,74],94:[2,74],95:[2,74],96:[2,74],98:[2,74],99:[2,74],103:[2,74],104:[2,74],112:[2,74]},{10:[1,52],28:50,39:28,47:35,71:[1,225],81:51,85:[1,31],87:[1,34],88:[1,36],99:[1,24],101:32,108:89,109:[1,29],110:30,112:[1,33]},{73:[1,226]},{76:[1,227]},{12:[1,228],35:[1,229]},{35:[1,231],86:[1,230]},{12:[2,94],35:[2,94],86:[2,94]},{10:[1,52],28:50,30:232,39:28,47:35,81:51,85:[1,31],87:[1,34],88:[1,36],99:[1,24],101:32,108:49,109:[1,29],110:30,112:[1,33]},{10:[2,155],12:[2,155],22:[2,155],35:[2,155],71:[2,155],85:[2,155],87:[2,155],88:[2,155],94:[2,155],98:[2,155],99:[2,155],109:[2,155],112:[2,155]},{10:[1,52],28:50,31:233,39:28,47:35,81:27,85:[1,31],87:[1,34],88:[1,36],99:[1,24],101:32,107:25,108:26,109:[1,29],110:30,112:[1,33]},{15:[2,50],17:[2,50]},{10:[1,99],12:[2,53],28:165,43:166,60:234,88:[1,43],99:[1,24]},{10:[1,132],12:[2,81],47:176,54:[1,235],55:236,79:174,80:175,88:[1,36]},{12:[1,237]},{2:[2,99],15:[2,99],17:[2,99],35:[2,99]},{2:[2,104],15:[2,104],17:[2,104],35:[2,104]},{5:[2,3]},{12:[2,47],35:[2,47]},{12:[2,48],35:[2,48]},{10:[1,132],47:176,80:238,88:[1,36]},{15:[2,34],17:[2,34],45:[2,34]},{10:[2,38],15:[2,38],17:[2,38],45:[2,38],87:[2,38],88:[2,38],99:[2,38]},{2:[2,14],15:[2,14],17:[2,14],76:[2,14]},{2:[1,240],15:[1,239],17:[1,241]},{15:[1,242]},{2:[2,19],15:[2,19],17:[2,19]},{94:[1,243]},{94:[1,244]},{10:[2,67],37:245,61:101,62:102,65:[2,67],66:[2,67],70:[2,67],72:[2,67],75:[2,67],85:[2,67],87:[2,67],88:[2,67],96:[2,67],99:[2,67],112:[2,67]},{10:[2,67],37:246,61:101,62:102,65:[2,67],66:[2,67],70:[2,67],72:[2,67],75:[2,67],85:[2,67],87:[2,67],88:[2,67],96:[2,67],99:[2,67],112:[2,67]},{13:[1,247]},{10:[2,67],37:248,61:101,62:102,65:[2,67],66:[2,67],70:[2,67],72:[2,67],75:[2,67],85:[2,67],87:[2,67],88:[2,67],96:[2,67],99:[2,67],112:[2,67]},{2:[2,88],8:[2,88],10:[2,88],12:[2,88],15:[2,88],17:[2,88],33:[2,88],35:[2,88],67:[2,88],68:[2,88],73:[2,88],85:[2,88],86:[2,88],87:[2,88],88:[2,88],94:[2,88],95:[2,88],96:[2,88],98:[2,88],99:[2,88],103:[2,88],104:[2,88],112:[2,88]},{10:[2,67],37:202,61:101,62:102,65:[2,67],66:[2,67],70:[2,67],72:[2,67],75:[2,67],84:249,85:[2,67],87:[2,67],88:[2,67],96:[2,67],99:[2,67],112:[2,67]},{2:[2,92],8:[2,92],10:[2,92],12:[2,92],15:[2,92],17:[2,92],33:[2,92],35:[2,92],67:[2,92],68:[2,92],73:[2,92],85:[2,92],86:[2,92],87:[2,92],88:[2,92],94:[2,92],95:[2,92],96:[2,92],98:[2,92],99:[2,92],103:[2,92],104:[2,92],112:[2,92]},{10:[2,67],37:250,61:101,62:102,65:[2,67],66:[2,67],70:[2,67],72:[2,67],75:[2,67],85:[2,67],87:[2,67],88:[2,67],96:[2,67],99:[2,67],112:[2,67]},{10:[1,52],22:[1,48],28:50,29:251,39:28,47:35,81:51,85:[1,31],87:[1,34],88:[1,36],99:[1,24],101:32,108:89,109:[1,29],110:30,112:[1,33]},{12:[2,156],35:[2,156]},{12:[2,56],35:[2,56]},{12:[1,252]},{12:[1,253]},{15:[2,51],17:[2,51]},{12:[2,82],35:[2,82]},{2:[2,15],15:[2,15],17:[2,15],76:[2,15]},{15:[1,254]},{10:[1,19],19:255,27:16,28:17,31:18,38:[1,21],39:28,41:[1,22],42:[1,23],47:35,81:27,85:[1,31],87:[1,34],88:[1,36],99:[1,24],101:32,107:25,108:26,109:[1,29],110:30,112:[1,33]},{2:[2,16],15:[2,16],17:[2,16],76:[2,16]},{10:[2,107],65:[2,107],66:[2,107],70:[2,107],72:[2,107],75:[2,107],85:[2,107],87:[2,107],88:[2,107],96:[2,107],99:[2,107],112:[2,107]},{10:[2,109],65:[2,109],66:[2,109],70:[2,109],72:[2,109],75:[2,109],85:[2,109],87:[2,109],88:[2,109],96:[2,109],99:[2,109],112:[2,109]},{68:[1,256]},{2:[2,70],8:[2,70],12:[2,70],15:[2,70],17:[2,70],33:[2,70],35:[2,70],67:[2,70],68:[2,70],73:[2,70],86:[2,70],94:[2,70],95:[2,70],98:[2,70],103:[2,70],104:[2,70]},{10:[1,52],28:50,31:259,39:28,47:35,74:257,78:258,81:27,85:[1,31],87:[1,34],88:[1,36],99:[1,24],101:32,107:25,108:26,109:[1,29],110:30,112:[1,33]},{2:[2,72],8:[2,72],12:[2,72],15:[2,72],17:[2,72],33:[2,72],35:[2,72],67:[2,72],68:[2,72],73:[2,72],86:[2,72],94:[2,72],95:[2,72],98:[2,72],103:[2,72],104:[2,72]},{12:[1,260],35:[1,231]},{12:[2,93],35:[2,93],86:[2,93]},{2:[2,24],15:[2,24],17:[2,24]},{12:[2,60],35:[2,60]},{12:[2,61],35:[2,61]},{2:[2,17],15:[2,17],17:[2,17],76:[2,17]},{2:[2,18],15:[2,18],17:[2,18]},{10:[2,67],37:261,61:101,62:102,65:[2,67],66:[2,67],70:[2,67],72:[2,67],75:[2,67],85:[2,67],87:[2,67],88:[2,67],96:[2,67],99:[2,67],112:[2,67]},{15:[1,262],17:[1,263]},{15:[2,78],17:[2,78]},{71:[1,264]},{2:[2,91],8:[2,91],10:[2,91],12:[2,91],15:[2,91],17:[2,91],33:[2,91],35:[2,91],67:[2,91],68:[2,91],73:[2,91],85:[2,91],86:[2,91],87:[2,91],88:[2,91],94:[2,91],95:[2,91],96:[2,91],98:[2,91],99:[2,91],103:[2,91],104:[2,91],112:[2,91]},{2:[2,68],8:[2,68],12:[2,68],15:[2,68],17:[2,68],33:[2,68],35:[2,68],67:[2,68],68:[2,68],73:[2,68],86:[2,68],94:[2,68],95:[2,68],98:[2,68],103:[2,68],104:[2,68]},{2:[2,71],8:[2,71],12:[2,71],15:[2,71],17:[2,71],33:[2,71],35:[2,71],67:[2,71],68:[2,71],73:[2,71],86:[2,71],94:[2,71],95:[2,71],98:[2,71],103:[2,71],104:[2,71]},{10:[1,52],28:50,31:259,39:28,47:35,78:265,81:27,85:[1,31],87:[1,34],88:[1,36],99:[1,24],101:32,107:25,108:26,109:[1,29],110:30,112:[1,33]},{10:[2,67],37:266,61:101,62:102,65:[2,67],66:[2,67],70:[2,67],72:[2,67],75:[2,67],85:[2,67],87:[2,67],88:[2,67],96:[2,67],99:[2,67],112:[2,67]},{15:[2,77],17:[2,77]},{15:[2,79],17:[2,79]}],
defaultActions: {4:[2,4],6:[2,1],39:[2,5],71:[2,2],163:[2,54],212:[2,3]},
parseError: function parseError(str, hash) {
    if (hash.recoverable) {
        this.trace(str);
    } else {
        throw new Error(str);
    }
},
parse: function parse(input) {
    var self = this,
        stack = [0],
        vstack = [null], // semantic value stack
        lstack = [], // location stack
        table = this.table,
        yytext = '',
        yylineno = 0,
        yyleng = 0,
        recovering = 0,
        TERROR = 2,
        EOF = 1;

    var args = lstack.slice.call(arguments, 1);

    //this.reductionCount = this.shiftCount = 0;

    this.lexer.setInput(input);
    this.lexer.yy = this.yy;
    this.yy.lexer = this.lexer;
    this.yy.parser = this;
    if (typeof this.lexer.yylloc == 'undefined') {
        this.lexer.yylloc = {};
    }
    var yyloc = this.lexer.yylloc;
    lstack.push(yyloc);

    var ranges = this.lexer.options && this.lexer.options.ranges;

    if (typeof this.yy.parseError === 'function') {
        this.parseError = this.yy.parseError;
    } else {
        this.parseError = Object.getPrototypeOf(this).parseError;
    }

    function popStack (n) {
        stack.length = stack.length - 2 * n;
        vstack.length = vstack.length - n;
        lstack.length = lstack.length - n;
    }

    function lex() {
        var token;
        token = self.lexer.lex() || EOF; // $end = 1
        // if token isn't its numeric value, convert
        if (typeof token !== 'number') {
            token = self.symbols_[token] || token;
        }
        return token;
    }

    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;
    while (true) {
        // retreive state number from top of stack
        state = stack[stack.length - 1];

        // use default actions if available
        if (this.defaultActions[state]) {
            action = this.defaultActions[state];
        } else {
            if (symbol === null || typeof symbol == 'undefined') {
                symbol = lex();
            }
            // read action for current state and first input
            action = table[state] && table[state][symbol];
        }

_handle_error:
        // handle parse error
        if (typeof action === 'undefined' || !action.length || !action[0]) {
            var error_rule_depth;
            var errStr = '';

            // Return the rule stack depth where the nearest error rule can be found.
            // Return FALSE when no error recovery rule was found.
            function locateNearestErrorRecoveryRule(state) {
                var stack_probe = stack.length - 1;
                var depth = 0;

                // try to recover from error
                for(;;) {
                    // check for error recovery rule in this state
                    if ((TERROR.toString()) in table[state]) {
                        return depth;
                    }
                    if (state === 0 || stack_probe < 2) {
                        return false; // No suitable error recovery rule available.
                    }
                    stack_probe -= 2; // popStack(1): [symbol, action]
                    state = stack[stack_probe];
                    ++depth;
                }
            }

            if (!recovering) {
                // first see if there's any chance at hitting an error recovery rule:
                error_rule_depth = locateNearestErrorRecoveryRule(state);

                // Report error
                expected = [];
                for (p in table[state]) {
                    if (this.terminals_[p] && p > TERROR) {
                        expected.push("'"+this.terminals_[p]+"'");
                    }
                }
                if (this.lexer.showPosition) {
                    errStr = 'Parse error on line '+(yylineno+1)+":\n"+this.lexer.showPosition()+"\nExpecting "+expected.join(', ') + ", got '" + (this.terminals_[symbol] || symbol)+ "'";
                } else {
                    errStr = 'Parse error on line '+(yylineno+1)+": Unexpected " +
                                  (symbol == EOF ? "end of input" :
                                              ("'"+(this.terminals_[symbol] || symbol)+"'"));
                }
                this.parseError(errStr, {
                    text: this.lexer.match,
                    token: this.terminals_[symbol] || symbol,
                    line: this.lexer.yylineno,
                    loc: yyloc,
                    expected: expected,
                    recoverable: (error_rule_depth !== false)
                });
            } else if (preErrorSymbol !== EOF) {
                error_rule_depth = locateNearestErrorRecoveryRule(state);
            }

            // just recovered from another error
            if (recovering == 3) {
                if (symbol === EOF || preErrorSymbol === EOF) {
                    throw new Error(errStr || 'Parsing halted while starting to recover from another error.');
                }

                // discard current lookahead and grab another
                yyleng = this.lexer.yyleng;
                yytext = this.lexer.yytext;
                yylineno = this.lexer.yylineno;
                yyloc = this.lexer.yylloc;
                symbol = lex();
            }

            // try to recover from error
            if (error_rule_depth === false) {
                throw new Error(errStr || 'Parsing halted. No suitable error recovery rule available.');
            }
            popStack(error_rule_depth);

            preErrorSymbol = (symbol == TERROR ? null : symbol); // save the lookahead token
            symbol = TERROR;         // insert generic error symbol as new lookahead
            state = stack[stack.length-1];
            action = table[state] && table[state][TERROR];
            recovering = 3; // allow 3 real symbols to be shifted before reporting a new error
        }

        // this shouldn't happen, unless resolve defaults are off
        if (action[0] instanceof Array && action.length > 1) {
            throw new Error('Parse Error: multiple actions possible at state: '+state+', token: '+symbol);
        }

        switch (action[0]) {
            case 1: // shift
                //this.shiftCount++;

                stack.push(symbol);
                vstack.push(this.lexer.yytext);
                lstack.push(this.lexer.yylloc);
                stack.push(action[1]); // push state
                symbol = null;
                if (!preErrorSymbol) { // normal execution/no error
                    yyleng = this.lexer.yyleng;
                    yytext = this.lexer.yytext;
                    yylineno = this.lexer.yylineno;
                    yyloc = this.lexer.yylloc;
                    if (recovering > 0) {
                        recovering--;
                    }
                } else {
                    // error just occurred, resume old lookahead f/ before error
                    symbol = preErrorSymbol;
                    preErrorSymbol = null;
                }
                break;

            case 2:
                // reduce
                //this.reductionCount++;

                len = this.productions_[action[1]][1];

                // perform semantic action
                yyval.$ = vstack[vstack.length-len]; // default to $$ = $1
                // default location, uses first token for firsts, last for lasts
                yyval._$ = {
                    first_line: lstack[lstack.length-(len||1)].first_line,
                    last_line: lstack[lstack.length-1].last_line,
                    first_column: lstack[lstack.length-(len||1)].first_column,
                    last_column: lstack[lstack.length-1].last_column
                };
                if (ranges) {
                  yyval._$.range = [lstack[lstack.length-(len||1)].range[0], lstack[lstack.length-1].range[1]];
                }
                r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, this.yy, action[1], vstack, lstack].concat(args));

                if (typeof r !== 'undefined') {
                    return r;
                }

                // pop off stack
                if (len) {
                    stack = stack.slice(0,-1*len*2);
                    vstack = vstack.slice(0, -1*len);
                    lstack = lstack.slice(0, -1*len);
                }

                stack.push(this.productions_[action[1]][0]);    // push nonterminal (reduce)
                vstack.push(yyval.$);
                lstack.push(yyval._$);
                // goto new state = table[STATE][NONTERMINAL]
                newState = table[stack[stack.length-2]][stack[stack.length-1]];
                stack.push(newState);
                break;

            case 3:
                // accept
                return true;
        }

    }

    return true;
}};

function Parser () {
  this.yy = {};
}
Parser.prototype = parser;parser.Parser = Parser;
return new Parser;
})();


if (typeof require !== 'undefined' && typeof exports !== 'undefined') {
exports.parser = LichParser;
exports.Parser = LichParser.Parser;
exports.parse = function () { return LichParser.parse.apply(LichParser, arguments); };
exports.main = function commonjsMain(args) {
    if (!args[1]) {
        console.log('Usage: '+args[0]+' FILE');
        process.exit(1);
    }
    var source = require('fs').readFileSync(require('path').normalize(args[1]), "utf8");
    return exports.parser.parse(source);
};
if (typeof module !== 'undefined' && require.main === module) {
  exports.main(process.argv.slice(1));
}
}