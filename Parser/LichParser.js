/* parser generated by jison 0.4.13 */
/*
  Returns a Parser object of the following structure:

  Parser: {
    yy: {}
  }

  Parser.prototype: {
    yy: {},
    trace: function(),
    symbols_: {associative list: name ==> number},
    terminals_: {associative list: number ==> name},
    productions_: [...],
    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),
    table: [...],
    defaultActions: {...},
    parseError: function(str, hash),
    parse: function(input),

    lexer: {
        EOF: 1,
        parseError: function(str, hash),
        setInput: function(input),
        input: function(),
        unput: function(str),
        more: function(),
        less: function(n),
        pastInput: function(),
        upcomingInput: function(),
        showPosition: function(),
        test_match: function(regex_match_array, rule_index),
        next: function(),
        lex: function(),
        begin: function(condition),
        popState: function(),
        _currentRules: function(),
        topState: function(),
        pushState: function(condition),

        options: {
            ranges: boolean           (optional: true ==> token location info will include a .range[] member)
            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)
            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)
        },

        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),
        rules: [...],
        conditions: {associative list: name ==> set},
    }
  }


  token location info (@$, _$, etc.): {
    first_line: n,
    last_line: n,
    first_column: n,
    last_column: n,
    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)
  }


  the parseError function receives a 'hash' object with these members for lexer and parser errors: {
    text:        (matched text)
    token:       (the produced terminal token, if any)
    line:        (yylineno)
  }
  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {
    loc:         (yylloc)
    expected:    (string describing the set of expected tokens)
    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)
  }
*/
var LichParser = (function(){
var parser = {trace: function trace() { },
yy: {},
symbols_: {"error":2,"start_":3,"{":4,"exp":5,"}":6,"EOF":7,"module_":8,"module":9,"modid":10,"where":11,"body":12,"(":13,"exports":14,")":15,"topdecls":16,"topdecls_nonempty":17,";":18,"topdecl":19,"decl":20,"impdecl":21,"decls":22,"list_decl_comma_1":23,"decl_fixity":24,"var":25,"rhs":26,"apats":27,"pat":28,"varop":29,"=":30,"infixl":31,"literal":32,"op_list_1_comma":33,"infixr":34,"infix":35,"exports_inner":36,",":37,"export":38,"qvar":39,"qtycon":40,"..":41,"list_cname_0_comma":42,"import":43,"imports":44,"hiding":45,"list_import_1_comma":46,"import_a":47,"tycon":48,"exps":49,"lexp":50,"if":51,"then":52,"else":53,"fexp":54,"\\":55,"->":56,"case":57,"of":58,"alts":59,"let":60,"in":61,"qop":62,"aexp":63,"vars":64,"alt":65,"list_cname_1_comma":66,"cname":67,"con":68,"gcon":69,"-":70,"tuple":71,"listexp":72,"list_exp_1_comma":73,"[":74,"]":75,"qconid":76,"conid":77,"qvarop":78,"qconop":79,"op":80,"conop":81,"consym":82,"`":83,"qvarsym":84,"qvarid":85,"gconsym":86,"varsym":87,"varid":88,"tyvars":89,"tyvar":90,"qcon":91,"list_1_comma":92,":":93,"qconsym":94,"lpat":95,"apat":96,"_":97,"tuple_pat":98,"pat_list_1_comma":99,"integer":100,"string":101,"char":102,"float":103,"trueBool":104,"falseBool":105,"$accept":0,"$end":1},
terminals_: {2:"error",4:"{",6:"}",7:"EOF",9:"module",11:"where",13:"(",15:")",18:";",30:"=",31:"infixl",34:"infixr",35:"infix",37:",",40:"qtycon",41:"..",43:"import",45:"hiding",48:"tycon",51:"if",52:"then",53:"else",55:"\\",56:"->",57:"case",58:"of",60:"let",61:"in",70:"-",74:"[",75:"]",76:"qconid",77:"conid",82:"consym",83:"`",84:"qvarsym",85:"qvarid",87:"varsym",88:"varid",90:"tyvar",93:":",94:"qconsym",97:"_",100:"integer",101:"string",102:"char",103:"float",104:"trueBool",105:"falseBool"},
productions_: [0,[3,4],[8,4],[8,7],[8,1],[12,3],[12,0],[16,1],[17,3],[17,1],[19,1],[19,1],[22,2],[22,3],[22,3],[22,4],[23,3],[23,1],[20,1],[20,2],[20,3],[20,4],[20,7],[26,2],[26,4],[24,3],[24,3],[24,3],[14,1],[14,2],[36,3],[36,1],[38,1],[38,2],[38,1],[38,4],[38,4],[21,2],[21,5],[21,6],[44,1],[44,2],[44,1],[44,0],[46,3],[46,1],[47,1],[47,1],[47,4],[47,4],[49,3],[49,1],[5,1],[50,6],[50,1],[50,4],[50,6],[50,4],[50,2],[50,3],[54,1],[54,2],[64,3],[64,1],[59,3],[59,1],[65,3],[42,1],[42,0],[66,3],[66,1],[67,1],[63,1],[63,1],[63,1],[63,3],[63,4],[63,1],[63,1],[71,5],[72,3],[73,3],[73,1],[10,1],[10,1],[62,1],[62,1],[33,3],[33,1],[80,1],[80,1],[81,1],[81,3],[78,1],[78,1],[78,3],[79,1],[79,3],[29,1],[29,3],[89,2],[89,1],[68,1],[68,3],[91,1],[91,3],[91,1],[69,2],[69,2],[69,3],[69,1],[92,1],[92,2],[25,1],[25,3],[39,1],[39,3],[39,1],[86,1],[86,1],[28,1],[95,1],[95,2],[27,1],[27,2],[96,1],[96,1],[96,1],[96,1],[96,1],[96,3],[98,5],[99,3],[99,1],[32,1],[32,1],[32,1],[32,1],[32,1],[32,1]],
performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {
/* this == yyval */

var $0 = $$.length - 1;
switch (yystate) {
case 1: return $$[$0-2]; 
break;
case 2:this.$ = {astType: "module", modid: $$[$0-2], body: $$[$0], pos: this._$}; 
break;
case 3:this.$ = {astType: "module", modid: $$[$0-5], exports: $$[$0-3], body: $$[$0], pos: this._$}; 
break;
case 4:this.$ = {astType: "module", modid: new Lich.ModName("Main"), body: $$[$0], pos:this._$}; 
break;
case 5: 
        var imps = [], decs = [], atdecs = false;
        for (var i = 0; i < $$[$0-1].length; i++) {
            if ($$[$0-1][i].name == "impdecl" && !atdecs) {
                imps.push($$[$0-1][i]);
            } else if ($$[$0-1][i].name == "impdecl" && atdecs) {
                throw new Error("Parse error: import declaration in statement block at line " + $$[$0-1][i].pos.first_line);
            } else {
                atdecs = true;
                decs.push($$[$0-1][i]);
            }
        }
        
        // add Prelude as an import if not explicitly imported
        var prelude_imported = false;
        for(i=0 ; i<imps.length ; i++){
      if( imps[i].modid == "Prelude" ){
          prelude_imported = true;
          break;
            }
        }
        if( ! prelude_imported ){
            imps.push({astType: "impdecl", modid: new Lich.ModName("Prelude")});
        }

        this.$ = {astType: "body", impdecls: imps, topdecls: decs, pos:this._$}; 
break;
case 6:this.$ = {astType: "body", impdecls: [], topdecls: [], pos:this._$}; 
break;
case 7: this.$ = $$[$0]; 
break;
case 8: $$[$0-2].push($$[$0]); this.$ = $$[$0-2]; 
break;
case 9: this.$ = [$$[$0]]; 
break;
case 10:this.$ = {astType: "topdecl-decl", decl: $$[$0], pos: this._$};
break;
case 11:this.$ = $$[$0];
break;
case 12: this.$ = []; 
break;
case 13: this.$ = $$[$0-1]; 
break;
case 14: this.$ = []; 
break;
case 15: this.$ = $$[$0-2]; 
break;
case 16: ($$[$0-2]).push($$[$0]); this.$ = $$[$0-2]; 
break;
case 17: this.$ = [$$[$0]]; 
break;
case 18:this.$ = $$[$0];
break;
case 19:this.$ = {astType:"decl-fun", ident: $$[$0-1], args: [], rhs: $$[$0], pos: this._$};
break;
case 20:this.$ = {astType:"decl-fun", ident: $$[$0-2], args: $$[$0-1], rhs: $$[$0], pos: this._$};
break;
case 21:this.$ = {astType:"decl-fun", ident: $$[$0-2], args: [$$[$0-3],$$[$0-1]], rhs: $$[$0], pos: this._$, orig: "infix"};
break;
case 22:this.$ = {astType:"decl-fun", ident: $$[$0-4], args: [$$[$0-5],$$[$0-3]].concat($$[$0-1]), rhs: $$[$0], pos: this._$, orig: "infix"};
break;
case 23:this.$ = $$[$0];
break;
case 24:this.$ = {astType: "fun-where", exp: $$[$0-2], decls: $$[$0], pos: this._$}; 
break;
case 25: this.$ = {astType: "fixity", fix: "leftfix", num: $$[$0-1], ops: $$[$0], pos: this._$}; 
break;
case 26: this.$ = {astType: "fixity", fix: "rightfix", num: $$[$0-1], ops: $$[$0], pos: this._$}; 
break;
case 27: this.$ = {astType: "fixity",  fix: "nonfix",num: $$[$0-1], ops: $$[$0], pos: this._$}; 
break;
case 28:this.$ = $$[$0];
break;
case 29:this.$ = $$[$0-1];
break;
case 30:$$[$0-2].push($$[$0]); this.$ = $$[$0-2];
break;
case 31:this.$ = [$$[$0]];
break;
case 32:this.$ = {astType: "export-qvar", exp: $$[$0], pos: this._$};
break;
case 33:this.$ = {astType: "export-module", exp: $$[$0], pos: this._$};
break;
case 34:this.$ = {astType: "export-type-unspec", exp: $$[$0], pos: this._$};
break;
case 35:this.$ = {astType: "export-type-all", exp: $$[$0-3], pos: this._$};
break;
case 36:this.$ = {astType: "export-type-vars", exp: $$[$0-3], vars: $$[$0-1], pos: this._$};
break;
case 37:this.$ = {astType: "impdecl", modid: $$[$0], pos: this._$};
break;
case 38:this.$ = {astType: "impdecl", modid: $$[$0-3], hiding: false, imports: $$[$0-1], pos: this._$};
break;
case 39:this.$ = {astType: "impdecl", modid: $$[$0-4], hiding: true, imports: $$[$0-1], pos: this._$};
break;
case 40:this.$ = $$[$0];
break;
case 41:this.$ = $$[$0-1];
break;
case 42:this.$ = [];
break;
case 43:this.$ = [];
break;
case 44:$$[$0-2].push($$[$0]); this.$ = $$[$0-2];
break;
case 45:this.$ = [$$[$0]];
break;
case 46:this.$ = {astType: "import-var", varastType: $$[$0], pos: this._$};
break;
case 47:this.$ = {astType: "import-tycon", tycon: $$[$0], all: false, pos: this._$};
break;
case 48:this.$ = {astType: "import-tycon", tycon: $$[$0-3], all: true, pos: this._$};
break;
case 49:this.$ = {astType: "import-tycon", tycon: $$[$0-3], all: false, list:$$[$0-1], pos: this._$};
break;
case 50: ($$[$0-2]).push($$[$0]); this.$ = $$[$0-2]; 
break;
case 51: this.$ = [$$[$0]]; 
break;
case 52:this.$ = $$[$0]
break;
case 53:this.$ = {astType:"ite",e1:$$[$0-4],e2:$$[$0-2],e3:$$[$0],pos:this._$}; 
break;
case 54: this.$ = ($$[$0].length === 1) ? ($$[$0][0]) : {astType:"application", exps:$$[$0],pos:this._$}; 
break;
case 55:this.$ = {astType:"lambda", args: $$[$0-2], rhs: $$[$0], pos: this._$}; 
break;
case 56:this.$ = {astType:"case", exp: $$[$0-4], alts: $$[$0-1], pos: this._$}; 
break;
case 57:this.$ = {astType:"let", decls: $$[$0-2], exp: $$[$0], pos: this._$}; 
break;
case 58:this.$ = {astType:"let-one", decl: $$[$0], pos: this._$}; 
break;
case 59:this.$ = {astType:"binop-exp",op:$$[$0-1],lhs:$$[$0-2],rhs:$$[$0],pos:this._$};
break;
case 60:this.$ = [$$[$0]];
break;
case 61:($$[$0-1]).push($$[$0]); this.$ = $$[$0-1];
break;
case 62:$$[$0-2].push($$[$0]); this.$ = $$[$0-2];
break;
case 63:this.$ = [$$[$0]];
break;
case 64:$$[$0-2].push($$[$0]); this.$ = $$[$0-2];
break;
case 65:this.$ = [$$[$0]];
break;
case 66:this.$ = {astType:"alt", pat: $$[$0-2], exp: $$[$0]};
break;
case 67:this.$ = $$[$0];
break;
case 68:this.$ = [];
break;
case 69:$$[$0-2].push($$[$0]); this.$ = $$[$0-2];
break;
case 70:this.$ = [$$[$0]];
break;
case 71:this.$ = $$[$0];
break;
case 72:this.$ = $$[$0];
break;
case 73:this.$ = $$[$0];
break;
case 74:this.$ = $$[$0];
break;
case 75:this.$ = $$[$0-1];
break;
case 76:this.$ = {astType:"negate",rhs:$$[$0-1]};
break;
case 77:this.$ = $$[$0];
break;
case 78:this.$ = $$[$0];
break;
case 79:$$[$0-1].unshift($$[$0-3]); this.$ = {astType: "tuple", members: $$[$0-1], pos: this._$}; 
break;
case 80: this.$ = {astType: "listexp", members: $$[$0-1], pos: this._$}; 
break;
case 81:$$[$0-2].push($$[$0]); this.$ = $$[$0-2]; 
break;
case 82:this.$ = [$$[$0]];
break;
case 83:this.$ = new Lich.ModName($$[$0], this._$, yy.lexer.previous.qual);
break;
case 84:this.$ = new Lich.ModName($$[$0], this._$);
break;
case 85:this.$ = {astType: "qop", id: $$[$0], pos: this._$};
break;
case 86:this.$ = {astType: "qop", id: $$[$0], pos: this._$};
break;
case 87: $$[$0-2].push($$[$0]); this.$ = $$[$0-2]; 
break;
case 88: this.$ = [$$[$0]]; 
break;
case 89: this.$ = $$[$0]; 
break;
case 90: this.$ = $$[$0]; 
break;
case 91: this.$ = new Lich.DaCon($$[$0], this._$, true); 
break;
case 92: this.$ = new Lich.DaCon($$[$0-1], this._$, false); 
break;
case 93:this.$ = new Lich.VarName($$[$0], this._$, true, yy.lexer.previous.qual);
break;
case 94:this.$ = $$[$0];
break;
case 95:this.$ = new Lich.VarName($$[$0-1], this._$, false, yy.lexer.previous.qual);
break;
case 96:this.$ = $$[$0];
break;
case 97:this.$ = new Lich.DaCon($$[$0-1], this._$, false, yy.lexer.previous.qual);
break;
case 98:this.$ = new Lich.VarName($$[$0], this._$, true);
break;
case 99:this.$ = new Lich.VarName($$[$0-1], this._$, false)
break;
case 100:$$[$0-1].push($$[$0]); this.$ = $$[$0-1];
break;
case 101:this.$ = [$$[$0]];
break;
case 102:this.$ = new Lich.DaCon($$[$0], this._$, false);
break;
case 103:this.$ = new Lich.DaCon($$[$0-1], this._$, true);
break;
case 104:this.$ = new Lich.DaCon($$[$0], this._$, false, yy.lexer.previous.qual);
break;
case 105:this.$ = $$[$0-1];
break;
case 106:this.$ = $$[$0];
break;
case 107:this.$ = new Lich.UnitDaCon(this._$);
break;
case 108:this.$ = new Lich.NilDaCon(this._$);
break;
case 109:this.$ = new Lich.TupleDaCon($$[$0-1] + 1, this._$);
break;
case 110:this.$ = $$[$0];
break;
case 111:this.$ = 1;
break;
case 112:this.$ = $$[$0-1] + 1;
break;
case 113:this.$ = new Lich.VarName($$[$0], this._$, false);
break;
case 114:this.$ = new Lich.VarName($$[$0-1], this._$, true);
break;
case 115:this.$ = new Lich.VarName($$[$0], this._$, false, yy.lexer.previous.qual);
break;
case 116:this.$ = new Lich.VarName($$[$0-1], this._$, true, yy.lexer.previous.qual);
break;
case 117:this.$ = $$[$0];
break;
case 118:this.$ = new Lich.ConsDaCon(this._$);
break;
case 119:this.$ = new Lich.DaCon($$[$0], this._$, true, yy.lexer.previous.qual);
break;
case 120:this.$ = $$[$0];
break;
case 121:this.$ = $$[$0];
break;
case 122:this.$ = {astType: "conpat", con: $$[$0-1], pats: $$[$0]}; 
break;
case 123:this.$ = [$$[$0]];
break;
case 124:$$[$0-1].push($$[$0]); this.$ = $$[$0-1];
break;
case 125:this.$ = $$[$0]; 
break;
case 126:this.$ = $$[$0]; 
break;
case 127:this.$ = $$[$0]; 
break;
case 128:this.$ = {astType:"wildcard", pos: this._$}; 
break;
case 129:this.$ = $$[$0]; 
break;
case 130:this.$ = $$[$0-1]; 
break;
case 131:$$[$0-1].unshift($$[$0-3]); this.$ = {astType: "tuple_pat", members: $$[$0-1], pos: this._$}; 
break;
case 132:$$[$0-2].push($$[$0]); this.$ = $$[$0-2]; 
break;
case 133:this.$ = [$$[$0]]; 
break;
case 134:this.$ = {astType: "integer-lit", value: Number($$[$0]), pos: this._$};
break;
case 135:this.$ = {astType: "string-lit", value: $$[$0], pos: this._$};
break;
case 136:this.$ = {astType: "char-lit", value: $$[$0], pos: this._$};
break;
case 137:this.$ = {astType: "float-lit", value: Number($$[$0]), pos: this._$};
break;
case 138:this.$ = {astType: "boolean-lit", value: $$[$0], pos: this._$};
break;
case 139:this.$ = {astType: "boolean-lit", value: $$[$0], pos: this._$};
break;
}
},
table: [{3:1,4:[1,2]},{1:[3]},{5:3,13:[1,14],25:18,32:13,39:11,50:4,51:[1,5],54:6,55:[1,7],57:[1,8],60:[1,9],63:10,68:29,69:12,71:15,72:16,74:[1,19],76:[1,28],77:[1,30],85:[1,17],88:[1,27],91:20,100:[1,21],101:[1,22],102:[1,23],103:[1,24],104:[1,25],105:[1,26]},{6:[1,31],29:36,62:32,78:33,79:34,83:[1,37],84:[1,35],86:38,87:[1,39],93:[1,40],94:[1,41]},{2:[2,52],6:[2,52],11:[2,52],15:[2,52],18:[2,52],37:[2,52],52:[2,52],53:[2,52],58:[2,52],75:[2,52],83:[2,52],84:[2,52],87:[2,52],93:[2,52],94:[2,52]},{5:42,13:[1,14],25:18,32:13,39:11,50:4,51:[1,5],54:6,55:[1,7],57:[1,8],60:[1,9],63:10,68:29,69:12,71:15,72:16,74:[1,19],76:[1,28],77:[1,30],85:[1,17],88:[1,27],91:20,100:[1,21],101:[1,22],102:[1,23],103:[1,24],104:[1,25],105:[1,26]},{2:[2,54],6:[2,54],11:[2,54],13:[1,14],15:[2,54],18:[2,54],25:18,32:13,37:[2,54],39:11,52:[2,54],53:[2,54],58:[2,54],63:43,68:29,69:12,71:15,72:16,74:[1,19],75:[2,54],76:[1,28],77:[1,30],83:[2,54],84:[2,54],85:[1,17],87:[2,54],88:[1,27],91:20,93:[2,54],94:[2,54],100:[1,21],101:[1,22],102:[1,23],103:[1,24],104:[1,25],105:[1,26]},{13:[1,51],25:46,27:44,32:48,68:29,69:47,74:[1,52],76:[1,28],77:[1,30],88:[1,27],91:20,96:45,97:[1,49],98:50,100:[1,21],101:[1,22],102:[1,23],103:[1,24],104:[1,25],105:[1,26]},{5:53,13:[1,14],25:18,32:13,39:11,50:4,51:[1,5],54:6,55:[1,7],57:[1,8],60:[1,9],63:10,68:29,69:12,71:15,72:16,74:[1,19],76:[1,28],77:[1,30],85:[1,17],88:[1,27],91:20,100:[1,21],101:[1,22],102:[1,23],103:[1,24],104:[1,25],105:[1,26]},{4:[1,56],13:[1,60],20:55,22:54,24:57,25:58,28:59,31:[1,61],32:48,34:[1,62],35:[1,63],68:29,69:66,74:[1,52],76:[1,28],77:[1,30],88:[1,27],91:20,95:64,96:65,97:[1,49],98:50,100:[1,21],101:[1,22],102:[1,23],103:[1,24],104:[1,25],105:[1,26]},{2:[2,60],6:[2,60],11:[2,60],13:[2,60],15:[2,60],18:[2,60],37:[2,60],52:[2,60],53:[2,60],58:[2,60],74:[2,60],75:[2,60],76:[2,60],77:[2,60],83:[2,60],84:[2,60],85:[2,60],87:[2,60],88:[2,60],93:[2,60],94:[2,60],100:[2,60],101:[2,60],102:[2,60],103:[2,60],104:[2,60],105:[2,60]},{2:[2,72],6:[2,72],11:[2,72],13:[2,72],15:[2,72],18:[2,72],37:[2,72],52:[2,72],53:[2,72],58:[2,72],74:[2,72],75:[2,72],76:[2,72],77:[2,72],83:[2,72],84:[2,72],85:[2,72],87:[2,72],88:[2,72],93:[2,72],94:[2,72],100:[2,72],101:[2,72],102:[2,72],103:[2,72],104:[2,72],105:[2,72]},{2:[2,73],6:[2,73],11:[2,73],13:[2,73],15:[2,73],18:[2,73],37:[2,73],52:[2,73],53:[2,73],58:[2,73],74:[2,73],75:[2,73],76:[2,73],77:[2,73],83:[2,73],84:[2,73],85:[2,73],87:[2,73],88:[2,73],93:[2,73],94:[2,73],100:[2,73],101:[2,73],102:[2,73],103:[2,73],104:[2,73],105:[2,73]},{2:[2,74],6:[2,74],11:[2,74],13:[2,74],15:[2,74],18:[2,74],37:[2,74],52:[2,74],53:[2,74],58:[2,74],74:[2,74],75:[2,74],76:[2,74],77:[2,74],83:[2,74],84:[2,74],85:[2,74],87:[2,74],88:[2,74],93:[2,74],94:[2,74],100:[2,74],101:[2,74],102:[2,74],103:[2,74],104:[2,74],105:[2,74]},{5:67,13:[1,14],15:[1,70],25:18,32:13,37:[1,75],39:11,50:4,51:[1,5],54:6,55:[1,7],57:[1,8],60:[1,9],63:10,68:29,69:12,70:[1,68],71:15,72:16,74:[1,19],76:[1,28],77:[1,30],82:[1,74],84:[1,69],85:[1,17],86:73,87:[1,72],88:[1,27],91:20,92:71,93:[1,40],94:[1,41],100:[1,21],101:[1,22],102:[1,23],103:[1,24],104:[1,25],105:[1,26]},{2:[2,77],6:[2,77],11:[2,77],13:[2,77],15:[2,77],18:[2,77],37:[2,77],52:[2,77],53:[2,77],58:[2,77],74:[2,77],75:[2,77],76:[2,77],77:[2,77],83:[2,77],84:[2,77],85:[2,77],87:[2,77],88:[2,77],93:[2,77],94:[2,77],100:[2,77],101:[2,77],102:[2,77],103:[2,77],104:[2,77],105:[2,77]},{2:[2,78],6:[2,78],11:[2,78],13:[2,78],15:[2,78],18:[2,78],37:[2,78],52:[2,78],53:[2,78],58:[2,78],74:[2,78],75:[2,78],76:[2,78],77:[2,78],83:[2,78],84:[2,78],85:[2,78],87:[2,78],88:[2,78],93:[2,78],94:[2,78],100:[2,78],101:[2,78],102:[2,78],103:[2,78],104:[2,78],105:[2,78]},{2:[2,115],6:[2,115],11:[2,115],13:[2,115],15:[2,115],18:[2,115],37:[2,115],52:[2,115],53:[2,115],58:[2,115],74:[2,115],75:[2,115],76:[2,115],77:[2,115],83:[2,115],84:[2,115],85:[2,115],87:[2,115],88:[2,115],93:[2,115],94:[2,115],100:[2,115],101:[2,115],102:[2,115],103:[2,115],104:[2,115],105:[2,115]},{2:[2,117],6:[2,117],11:[2,117],13:[2,117],15:[2,117],18:[2,117],37:[2,117],52:[2,117],53:[2,117],58:[2,117],74:[2,117],75:[2,117],76:[2,117],77:[2,117],83:[2,117],84:[2,117],85:[2,117],87:[2,117],88:[2,117],93:[2,117],94:[2,117],100:[2,117],101:[2,117],102:[2,117],103:[2,117],104:[2,117],105:[2,117]},{5:78,13:[1,14],25:18,32:13,39:11,50:4,51:[1,5],54:6,55:[1,7],57:[1,8],60:[1,9],63:10,68:29,69:12,71:15,72:16,73:77,74:[1,19],75:[1,76],76:[1,28],77:[1,30],85:[1,17],88:[1,27],91:20,100:[1,21],101:[1,22],102:[1,23],103:[1,24],104:[1,25],105:[1,26]},{2:[2,110],6:[2,110],11:[2,110],13:[2,110],15:[2,110],18:[2,110],30:[2,110],37:[2,110],52:[2,110],53:[2,110],56:[2,110],58:[2,110],74:[2,110],75:[2,110],76:[2,110],77:[2,110],83:[2,110],84:[2,110],85:[2,110],87:[2,110],88:[2,110],93:[2,110],94:[2,110],97:[2,110],100:[2,110],101:[2,110],102:[2,110],103:[2,110],104:[2,110],105:[2,110]},{2:[2,134],6:[2,134],11:[2,134],13:[2,134],15:[2,134],18:[2,134],30:[2,134],37:[2,134],52:[2,134],53:[2,134],56:[2,134],58:[2,134],74:[2,134],75:[2,134],76:[2,134],77:[2,134],82:[2,134],83:[2,134],84:[2,134],85:[2,134],87:[2,134],88:[2,134],93:[2,134],94:[2,134],97:[2,134],100:[2,134],101:[2,134],102:[2,134],103:[2,134],104:[2,134],105:[2,134]},{2:[2,135],6:[2,135],11:[2,135],13:[2,135],15:[2,135],18:[2,135],30:[2,135],37:[2,135],52:[2,135],53:[2,135],56:[2,135],58:[2,135],74:[2,135],75:[2,135],76:[2,135],77:[2,135],82:[2,135],83:[2,135],84:[2,135],85:[2,135],87:[2,135],88:[2,135],93:[2,135],94:[2,135],97:[2,135],100:[2,135],101:[2,135],102:[2,135],103:[2,135],104:[2,135],105:[2,135]},{2:[2,136],6:[2,136],11:[2,136],13:[2,136],15:[2,136],18:[2,136],30:[2,136],37:[2,136],52:[2,136],53:[2,136],56:[2,136],58:[2,136],74:[2,136],75:[2,136],76:[2,136],77:[2,136],82:[2,136],83:[2,136],84:[2,136],85:[2,136],87:[2,136],88:[2,136],93:[2,136],94:[2,136],97:[2,136],100:[2,136],101:[2,136],102:[2,136],103:[2,136],104:[2,136],105:[2,136]},{2:[2,137],6:[2,137],11:[2,137],13:[2,137],15:[2,137],18:[2,137],30:[2,137],37:[2,137],52:[2,137],53:[2,137],56:[2,137],58:[2,137],74:[2,137],75:[2,137],76:[2,137],77:[2,137],82:[2,137],83:[2,137],84:[2,137],85:[2,137],87:[2,137],88:[2,137],93:[2,137],94:[2,137],97:[2,137],100:[2,137],101:[2,137],102:[2,137],103:[2,137],104:[2,137],105:[2,137]},{2:[2,138],6:[2,138],11:[2,138],13:[2,138],15:[2,138],18:[2,138],30:[2,138],37:[2,138],52:[2,138],53:[2,138],56:[2,138],58:[2,138],74:[2,138],75:[2,138],76:[2,138],77:[2,138],82:[2,138],83:[2,138],84:[2,138],85:[2,138],87:[2,138],88:[2,138],93:[2,138],94:[2,138],97:[2,138],100:[2,138],101:[2,138],102:[2,138],103:[2,138],104:[2,138],105:[2,138]},{2:[2,139],6:[2,139],11:[2,139],13:[2,139],15:[2,139],18:[2,139],30:[2,139],37:[2,139],52:[2,139],53:[2,139],56:[2,139],58:[2,139],74:[2,139],75:[2,139],76:[2,139],77:[2,139],82:[2,139],83:[2,139],84:[2,139],85:[2,139],87:[2,139],88:[2,139],93:[2,139],94:[2,139],97:[2,139],100:[2,139],101:[2,139],102:[2,139],103:[2,139],104:[2,139],105:[2,139]},{2:[2,113],6:[2,113],11:[2,113],13:[2,113],15:[2,113],18:[2,113],30:[2,113],37:[2,113],52:[2,113],53:[2,113],56:[2,113],58:[2,113],74:[2,113],75:[2,113],76:[2,113],77:[2,113],83:[2,113],84:[2,113],85:[2,113],87:[2,113],88:[2,113],93:[2,113],94:[2,113],97:[2,113],100:[2,113],101:[2,113],102:[2,113],103:[2,113],104:[2,113],105:[2,113]},{2:[2,104],6:[2,104],11:[2,104],13:[2,104],15:[2,104],18:[2,104],30:[2,104],37:[2,104],52:[2,104],53:[2,104],56:[2,104],58:[2,104],74:[2,104],75:[2,104],76:[2,104],77:[2,104],83:[2,104],84:[2,104],85:[2,104],87:[2,104],88:[2,104],93:[2,104],94:[2,104],97:[2,104],100:[2,104],101:[2,104],102:[2,104],103:[2,104],104:[2,104],105:[2,104]},{2:[2,106],6:[2,106],11:[2,106],13:[2,106],15:[2,106],18:[2,106],30:[2,106],37:[2,106],52:[2,106],53:[2,106],56:[2,106],58:[2,106],74:[2,106],75:[2,106],76:[2,106],77:[2,106],83:[2,106],84:[2,106],85:[2,106],87:[2,106],88:[2,106],93:[2,106],94:[2,106],97:[2,106],100:[2,106],101:[2,106],102:[2,106],103:[2,106],104:[2,106],105:[2,106]},{2:[2,102],6:[2,102],11:[2,102],13:[2,102],15:[2,102],18:[2,102],30:[2,102],37:[2,102],52:[2,102],53:[2,102],56:[2,102],58:[2,102],74:[2,102],75:[2,102],76:[2,102],77:[2,102],83:[2,102],84:[2,102],85:[2,102],87:[2,102],88:[2,102],93:[2,102],94:[2,102],97:[2,102],100:[2,102],101:[2,102],102:[2,102],103:[2,102],104:[2,102],105:[2,102]},{7:[1,79]},{5:81,13:[1,14],25:18,32:13,39:11,50:80,51:[1,5],54:6,55:[1,7],57:[1,8],60:[1,9],63:10,68:29,69:12,71:15,72:16,74:[1,19],76:[1,28],77:[1,30],85:[1,17],88:[1,27],91:20,100:[1,21],101:[1,22],102:[1,23],103:[1,24],104:[1,25],105:[1,26]},{13:[2,85],51:[2,85],55:[2,85],57:[2,85],60:[2,85],74:[2,85],76:[2,85],77:[2,85],85:[2,85],88:[2,85],100:[2,85],101:[2,85],102:[2,85],103:[2,85],104:[2,85],105:[2,85]},{13:[2,86],51:[2,86],55:[2,86],57:[2,86],60:[2,86],74:[2,86],76:[2,86],77:[2,86],85:[2,86],88:[2,86],100:[2,86],101:[2,86],102:[2,86],103:[2,86],104:[2,86],105:[2,86]},{13:[2,93],51:[2,93],55:[2,93],57:[2,93],60:[2,93],74:[2,93],76:[2,93],77:[2,93],85:[2,93],88:[2,93],100:[2,93],101:[2,93],102:[2,93],103:[2,93],104:[2,93],105:[2,93]},{13:[2,94],51:[2,94],55:[2,94],57:[2,94],60:[2,94],74:[2,94],76:[2,94],77:[2,94],85:[2,94],88:[2,94],100:[2,94],101:[2,94],102:[2,94],103:[2,94],104:[2,94],105:[2,94]},{76:[1,83],85:[1,82],88:[1,84]},{13:[2,96],51:[2,96],55:[2,96],57:[2,96],60:[2,96],74:[2,96],76:[2,96],77:[2,96],85:[2,96],88:[2,96],100:[2,96],101:[2,96],102:[2,96],103:[2,96],104:[2,96],105:[2,96]},{2:[2,98],6:[2,98],11:[2,98],13:[2,98],15:[2,98],18:[2,98],37:[2,98],51:[2,98],52:[2,98],53:[2,98],55:[2,98],57:[2,98],58:[2,98],60:[2,98],74:[2,98],75:[2,98],76:[2,98],77:[2,98],83:[2,98],84:[2,98],85:[2,98],87:[2,98],88:[2,98],93:[2,98],94:[2,98],97:[2,98],100:[2,98],101:[2,98],102:[2,98],103:[2,98],104:[2,98],105:[2,98]},{13:[2,118],15:[2,118],51:[2,118],55:[2,118],57:[2,118],60:[2,118],74:[2,118],76:[2,118],77:[2,118],85:[2,118],88:[2,118],100:[2,118],101:[2,118],102:[2,118],103:[2,118],104:[2,118],105:[2,118]},{13:[2,119],15:[2,119],51:[2,119],55:[2,119],57:[2,119],60:[2,119],74:[2,119],76:[2,119],77:[2,119],85:[2,119],88:[2,119],100:[2,119],101:[2,119],102:[2,119],103:[2,119],104:[2,119],105:[2,119]},{29:36,52:[1,85],62:32,78:33,79:34,83:[1,37],84:[1,35],86:38,87:[1,39],93:[1,40],94:[1,41]},{2:[2,61],6:[2,61],11:[2,61],13:[2,61],15:[2,61],18:[2,61],37:[2,61],52:[2,61],53:[2,61],58:[2,61],74:[2,61],75:[2,61],76:[2,61],77:[2,61],83:[2,61],84:[2,61],85:[2,61],87:[2,61],88:[2,61],93:[2,61],94:[2,61],100:[2,61],101:[2,61],102:[2,61],103:[2,61],104:[2,61],105:[2,61]},{13:[1,51],25:46,32:48,56:[1,86],68:29,69:47,74:[1,52],76:[1,28],77:[1,30],88:[1,27],91:20,96:87,97:[1,49],98:50,100:[1,21],101:[1,22],102:[1,23],103:[1,24],104:[1,25],105:[1,26]},{13:[2,123],15:[2,123],30:[2,123],37:[2,123],56:[2,123],74:[2,123],76:[2,123],77:[2,123],83:[2,123],87:[2,123],88:[2,123],97:[2,123],100:[2,123],101:[2,123],102:[2,123],103:[2,123],104:[2,123],105:[2,123]},{13:[2,125],15:[2,125],30:[2,125],37:[2,125],56:[2,125],74:[2,125],76:[2,125],77:[2,125],83:[2,125],87:[2,125],88:[2,125],97:[2,125],100:[2,125],101:[2,125],102:[2,125],103:[2,125],104:[2,125],105:[2,125]},{13:[2,126],15:[2,126],30:[2,126],37:[2,126],56:[2,126],74:[2,126],76:[2,126],77:[2,126],83:[2,126],87:[2,126],88:[2,126],97:[2,126],100:[2,126],101:[2,126],102:[2,126],103:[2,126],104:[2,126],105:[2,126]},{13:[2,127],15:[2,127],30:[2,127],37:[2,127],56:[2,127],74:[2,127],76:[2,127],77:[2,127],83:[2,127],87:[2,127],88:[2,127],97:[2,127],100:[2,127],101:[2,127],102:[2,127],103:[2,127],104:[2,127],105:[2,127]},{13:[2,128],15:[2,128],30:[2,128],37:[2,128],56:[2,128],74:[2,128],76:[2,128],77:[2,128],83:[2,128],87:[2,128],88:[2,128],97:[2,128],100:[2,128],101:[2,128],102:[2,128],103:[2,128],104:[2,128],105:[2,128]},{13:[2,129],15:[2,129],30:[2,129],37:[2,129],56:[2,129],74:[2,129],76:[2,129],77:[2,129],83:[2,129],87:[2,129],88:[2,129],97:[2,129],100:[2,129],101:[2,129],102:[2,129],103:[2,129],104:[2,129],105:[2,129]},{13:[1,51],15:[1,70],25:46,28:88,32:48,37:[1,75],68:29,69:66,74:[1,52],76:[1,28],77:[1,30],82:[1,74],86:73,87:[1,72],88:[1,27],91:20,92:71,93:[1,40],94:[1,41],95:64,96:65,97:[1,49],98:50,100:[1,21],101:[1,22],102:[1,23],103:[1,24],104:[1,25],105:[1,26]},{75:[1,76]},{29:36,58:[1,89],62:32,78:33,79:34,83:[1,37],84:[1,35],86:38,87:[1,39],93:[1,40],94:[1,41]},{61:[1,90]},{2:[2,58],6:[2,58],11:[2,58],15:[2,58],18:[2,58],37:[2,58],52:[2,58],53:[2,58],58:[2,58],75:[2,58],83:[2,58],84:[2,58],87:[2,58],93:[2,58],94:[2,58]},{2:[1,93],6:[1,91],13:[1,60],20:94,23:92,24:57,25:58,28:59,31:[1,61],32:48,34:[1,62],35:[1,63],68:29,69:66,74:[1,52],76:[1,28],77:[1,30],88:[1,27],91:20,95:64,96:65,97:[1,49],98:50,100:[1,21],101:[1,22],102:[1,23],103:[1,24],104:[1,25],105:[1,26]},{2:[2,18],6:[2,18],11:[2,18],15:[2,18],18:[2,18],37:[2,18],52:[2,18],53:[2,18],58:[2,18],75:[2,18],83:[2,18],84:[2,18],87:[2,18],93:[2,18],94:[2,18]},{13:[1,51],25:46,26:95,27:96,30:[1,97],32:48,68:29,69:47,74:[1,52],76:[1,28],77:[1,30],83:[2,125],87:[2,125],88:[1,27],91:20,96:45,97:[1,49],98:50,100:[1,21],101:[1,22],102:[1,23],103:[1,24],104:[1,25],105:[1,26]},{29:98,83:[1,99],87:[1,39]},{13:[1,51],15:[1,70],25:46,28:100,32:48,37:[1,75],68:29,69:66,74:[1,52],76:[1,28],77:[1,30],82:[1,74],86:73,87:[1,72],88:[1,27],91:20,92:71,93:[1,40],94:[1,41],95:64,96:65,97:[1,49],98:50,100:[1,21],101:[1,22],102:[1,23],103:[1,24],104:[1,25],105:[1,26]},{32:101,100:[1,21],101:[1,22],102:[1,23],103:[1,24],104:[1,25],105:[1,26]},{32:102,100:[1,21],101:[1,22],102:[1,23],103:[1,24],104:[1,25],105:[1,26]},{32:103,100:[1,21],101:[1,22],102:[1,23],103:[1,24],104:[1,25],105:[1,26]},{15:[2,120],30:[2,120],37:[2,120],56:[2,120],83:[2,120],87:[2,120]},{15:[2,121],30:[2,121],37:[2,121],56:[2,121],83:[2,121],87:[2,121]},{13:[1,51],15:[2,126],25:46,27:104,30:[2,126],32:48,37:[2,126],56:[2,126],68:29,69:47,74:[1,52],76:[1,28],77:[1,30],83:[2,126],87:[2,126],88:[1,27],91:20,96:45,97:[1,49],98:50,100:[1,21],101:[1,22],102:[1,23],103:[1,24],104:[1,25],105:[1,26]},{15:[1,105],29:36,37:[1,106],62:32,78:33,79:34,83:[1,37],84:[1,35],86:38,87:[1,39],93:[1,40],94:[1,41]},{5:107,13:[1,14],25:18,32:13,39:11,50:4,51:[1,5],54:6,55:[1,7],57:[1,8],60:[1,9],63:10,68:29,69:12,71:15,72:16,74:[1,19],76:[1,28],77:[1,30],85:[1,17],88:[1,27],91:20,100:[1,21],101:[1,22],102:[1,23],103:[1,24],104:[1,25],105:[1,26]},{15:[1,108]},{2:[2,107],6:[2,107],11:[2,107],13:[2,107],15:[2,107],18:[2,107],30:[2,107],37:[2,107],52:[2,107],53:[2,107],56:[2,107],58:[2,107],74:[2,107],75:[2,107],76:[2,107],77:[2,107],83:[2,107],84:[2,107],85:[2,107],87:[2,107],88:[2,107],93:[2,107],94:[2,107],97:[2,107],100:[2,107],101:[2,107],102:[2,107],103:[2,107],104:[2,107],105:[2,107]},{15:[1,109],37:[1,110]},{15:[1,111]},{15:[1,112]},{15:[1,113]},{15:[2,111],37:[2,111]},{2:[2,108],6:[2,108],11:[2,108],13:[2,108],15:[2,108],18:[2,108],30:[2,108],37:[2,108],52:[2,108],53:[2,108],56:[2,108],58:[2,108],74:[2,108],75:[2,108],76:[2,108],77:[2,108],83:[2,108],84:[2,108],85:[2,108],87:[2,108],88:[2,108],93:[2,108],94:[2,108],97:[2,108],100:[2,108],101:[2,108],102:[2,108],103:[2,108],104:[2,108],105:[2,108]},{37:[1,115],75:[1,114]},{15:[2,82],29:36,37:[2,82],62:32,75:[2,82],78:33,79:34,83:[1,37],84:[1,35],86:38,87:[1,39],93:[1,40],94:[1,41]},{1:[2,1]},{2:[2,59],6:[2,59],11:[2,59],15:[2,59],18:[2,59],37:[2,59],52:[2,59],53:[2,59],58:[2,59],75:[2,59],83:[2,59],84:[2,59],87:[2,59],93:[2,59],94:[2,59]},{29:36,62:32,78:33,79:34,83:[1,37],84:[1,35],86:38,87:[1,39],93:[1,40],94:[1,41]},{83:[1,116]},{83:[1,117]},{83:[1,118]},{5:119,13:[1,14],25:18,32:13,39:11,50:4,51:[1,5],54:6,55:[1,7],57:[1,8],60:[1,9],63:10,68:29,69:12,71:15,72:16,74:[1,19],76:[1,28],77:[1,30],85:[1,17],88:[1,27],91:20,100:[1,21],101:[1,22],102:[1,23],103:[1,24],104:[1,25],105:[1,26]},{5:120,13:[1,14],25:18,32:13,39:11,50:4,51:[1,5],54:6,55:[1,7],57:[1,8],60:[1,9],63:10,68:29,69:12,71:15,72:16,74:[1,19],76:[1,28],77:[1,30],85:[1,17],88:[1,27],91:20,100:[1,21],101:[1,22],102:[1,23],103:[1,24],104:[1,25],105:[1,26]},{13:[2,124],15:[2,124],30:[2,124],37:[2,124],56:[2,124],74:[2,124],76:[2,124],77:[2,124],83:[2,124],87:[2,124],88:[2,124],97:[2,124],100:[2,124],101:[2,124],102:[2,124],103:[2,124],104:[2,124],105:[2,124]},{15:[1,121],37:[1,122]},{4:[1,123]},{5:124,13:[1,14],25:18,32:13,39:11,50:4,51:[1,5],54:6,55:[1,7],57:[1,8],60:[1,9],63:10,68:29,69:12,71:15,72:16,74:[1,19],76:[1,28],77:[1,30],85:[1,17],88:[1,27],91:20,100:[1,21],101:[1,22],102:[1,23],103:[1,24],104:[1,25],105:[1,26]},{2:[2,12],6:[2,12],11:[2,12],15:[2,12],18:[2,12],37:[2,12],52:[2,12],53:[2,12],58:[2,12],61:[2,12],75:[2,12],83:[2,12],84:[2,12],87:[2,12],93:[2,12],94:[2,12]},{2:[1,126],6:[1,125],18:[1,127]},{6:[1,128]},{2:[2,17],6:[2,17],18:[2,17]},{2:[2,19],6:[2,19],11:[2,19],15:[2,19],18:[2,19],37:[2,19],52:[2,19],53:[2,19],58:[2,19],75:[2,19],83:[2,19],84:[2,19],87:[2,19],93:[2,19],94:[2,19]},{13:[1,51],25:46,26:129,30:[1,97],32:48,68:29,69:47,74:[1,52],76:[1,28],77:[1,30],88:[1,27],91:20,96:87,97:[1,49],98:50,100:[1,21],101:[1,22],102:[1,23],103:[1,24],104:[1,25],105:[1,26]},{5:130,13:[1,14],25:18,32:13,39:11,50:4,51:[1,5],54:6,55:[1,7],57:[1,8],60:[1,9],63:10,68:29,69:12,71:15,72:16,74:[1,19],76:[1,28],77:[1,30],85:[1,17],88:[1,27],91:20,100:[1,21],101:[1,22],102:[1,23],103:[1,24],104:[1,25],105:[1,26]},{13:[1,51],25:46,28:131,32:48,68:29,69:66,74:[1,52],76:[1,28],77:[1,30],88:[1,27],91:20,95:64,96:65,97:[1,49],98:50,100:[1,21],101:[1,22],102:[1,23],103:[1,24],104:[1,25],105:[1,26]},{88:[1,84]},{15:[1,121],29:132,37:[1,122],83:[1,99],87:[1,39]},{29:135,33:133,80:134,81:136,82:[1,138],83:[1,137],87:[1,39]},{29:135,33:139,80:134,81:136,82:[1,138],83:[1,137],87:[1,39]},{29:135,33:140,80:134,81:136,82:[1,138],83:[1,137],87:[1,39]},{13:[1,51],15:[2,122],25:46,30:[2,122],32:48,37:[2,122],56:[2,122],68:29,69:47,74:[1,52],76:[1,28],77:[1,30],83:[2,122],87:[2,122],88:[1,27],91:20,96:87,97:[1,49],98:50,100:[1,21],101:[1,22],102:[1,23],103:[1,24],104:[1,25],105:[1,26]},{2:[2,75],6:[2,75],11:[2,75],13:[2,75],15:[2,75],18:[2,75],37:[2,75],52:[2,75],53:[2,75],58:[2,75],74:[2,75],75:[2,75],76:[2,75],77:[2,75],83:[2,75],84:[2,75],85:[2,75],87:[2,75],88:[2,75],93:[2,75],94:[2,75],100:[2,75],101:[2,75],102:[2,75],103:[2,75],104:[2,75],105:[2,75]},{5:78,13:[1,14],25:18,32:13,39:11,50:4,51:[1,5],54:6,55:[1,7],57:[1,8],60:[1,9],63:10,68:29,69:12,71:15,72:16,73:141,74:[1,19],76:[1,28],77:[1,30],85:[1,17],88:[1,27],91:20,100:[1,21],101:[1,22],102:[1,23],103:[1,24],104:[1,25],105:[1,26]},{15:[1,142],29:36,62:32,78:33,79:34,83:[1,37],84:[1,35],86:38,87:[1,39],93:[1,40],94:[1,41]},{2:[2,116],6:[2,116],11:[2,116],13:[2,116],15:[2,116],18:[2,116],37:[2,116],52:[2,116],53:[2,116],58:[2,116],74:[2,116],75:[2,116],76:[2,116],77:[2,116],83:[2,116],84:[2,116],85:[2,116],87:[2,116],88:[2,116],93:[2,116],94:[2,116],100:[2,116],101:[2,116],102:[2,116],103:[2,116],104:[2,116],105:[2,116]},{2:[2,109],6:[2,109],11:[2,109],13:[2,109],15:[2,109],18:[2,109],30:[2,109],37:[2,109],52:[2,109],53:[2,109],56:[2,109],58:[2,109],74:[2,109],75:[2,109],76:[2,109],77:[2,109],83:[2,109],84:[2,109],85:[2,109],87:[2,109],88:[2,109],93:[2,109],94:[2,109],97:[2,109],100:[2,109],101:[2,109],102:[2,109],103:[2,109],104:[2,109],105:[2,109]},{15:[2,112],37:[2,112]},{2:[2,114],6:[2,114],11:[2,114],13:[2,114],15:[2,114],18:[2,114],30:[2,114],37:[2,114],52:[2,114],53:[2,114],56:[2,114],58:[2,114],74:[2,114],75:[2,114],76:[2,114],77:[2,114],83:[2,114],84:[2,114],85:[2,114],87:[2,114],88:[2,114],93:[2,114],94:[2,114],97:[2,114],100:[2,114],101:[2,114],102:[2,114],103:[2,114],104:[2,114],105:[2,114]},{2:[2,105],6:[2,105],11:[2,105],13:[2,105],15:[2,105],18:[2,105],30:[2,105],37:[2,105],52:[2,105],53:[2,105],56:[2,105],58:[2,105],74:[2,105],75:[2,105],76:[2,105],77:[2,105],83:[2,105],84:[2,105],85:[2,105],87:[2,105],88:[2,105],93:[2,105],94:[2,105],97:[2,105],100:[2,105],101:[2,105],102:[2,105],103:[2,105],104:[2,105],105:[2,105]},{2:[2,103],6:[2,103],11:[2,103],13:[2,103],15:[2,103],18:[2,103],30:[2,103],37:[2,103],52:[2,103],53:[2,103],56:[2,103],58:[2,103],74:[2,103],75:[2,103],76:[2,103],77:[2,103],83:[2,103],84:[2,103],85:[2,103],87:[2,103],88:[2,103],93:[2,103],94:[2,103],97:[2,103],100:[2,103],101:[2,103],102:[2,103],103:[2,103],104:[2,103],105:[2,103]},{2:[2,80],6:[2,80],11:[2,80],13:[2,80],15:[2,80],18:[2,80],37:[2,80],52:[2,80],53:[2,80],58:[2,80],74:[2,80],75:[2,80],76:[2,80],77:[2,80],83:[2,80],84:[2,80],85:[2,80],87:[2,80],88:[2,80],93:[2,80],94:[2,80],100:[2,80],101:[2,80],102:[2,80],103:[2,80],104:[2,80],105:[2,80]},{5:143,13:[1,14],25:18,32:13,39:11,50:4,51:[1,5],54:6,55:[1,7],57:[1,8],60:[1,9],63:10,68:29,69:12,71:15,72:16,74:[1,19],76:[1,28],77:[1,30],85:[1,17],88:[1,27],91:20,100:[1,21],101:[1,22],102:[1,23],103:[1,24],104:[1,25],105:[1,26]},{13:[2,95],51:[2,95],55:[2,95],57:[2,95],60:[2,95],74:[2,95],76:[2,95],77:[2,95],85:[2,95],88:[2,95],100:[2,95],101:[2,95],102:[2,95],103:[2,95],104:[2,95],105:[2,95]},{13:[2,97],51:[2,97],55:[2,97],57:[2,97],60:[2,97],74:[2,97],76:[2,97],77:[2,97],85:[2,97],88:[2,97],100:[2,97],101:[2,97],102:[2,97],103:[2,97],104:[2,97],105:[2,97]},{2:[2,99],6:[2,99],11:[2,99],13:[2,99],15:[2,99],18:[2,99],37:[2,99],51:[2,99],52:[2,99],53:[2,99],55:[2,99],57:[2,99],58:[2,99],60:[2,99],74:[2,99],75:[2,99],76:[2,99],77:[2,99],83:[2,99],84:[2,99],85:[2,99],87:[2,99],88:[2,99],93:[2,99],94:[2,99],97:[2,99],100:[2,99],101:[2,99],102:[2,99],103:[2,99],104:[2,99],105:[2,99]},{29:36,53:[1,144],62:32,78:33,79:34,83:[1,37],84:[1,35],86:38,87:[1,39],93:[1,40],94:[1,41]},{2:[2,55],6:[2,55],11:[2,55],15:[2,55],18:[2,55],29:36,37:[2,55],52:[2,55],53:[2,55],58:[2,55],62:32,75:[2,55],78:33,79:34,83:[1,37],84:[1,35],86:38,87:[1,39],93:[1,40],94:[1,41]},{13:[2,130],15:[2,130],30:[2,130],37:[2,130],56:[2,130],74:[2,130],76:[2,130],77:[2,130],83:[2,130],87:[2,130],88:[2,130],97:[2,130],100:[2,130],101:[2,130],102:[2,130],103:[2,130],104:[2,130],105:[2,130]},{13:[1,51],25:46,28:146,32:48,68:29,69:66,74:[1,52],76:[1,28],77:[1,30],88:[1,27],91:20,95:64,96:65,97:[1,49],98:50,99:145,100:[1,21],101:[1,22],102:[1,23],103:[1,24],104:[1,25],105:[1,26]},{13:[1,51],25:46,28:149,32:48,59:147,65:148,68:29,69:66,74:[1,52],76:[1,28],77:[1,30],88:[1,27],91:20,95:64,96:65,97:[1,49],98:50,100:[1,21],101:[1,22],102:[1,23],103:[1,24],104:[1,25],105:[1,26]},{2:[2,57],6:[2,57],11:[2,57],15:[2,57],18:[2,57],29:36,37:[2,57],52:[2,57],53:[2,57],58:[2,57],62:32,75:[2,57],78:33,79:34,83:[1,37],84:[1,35],86:38,87:[1,39],93:[1,40],94:[1,41]},{2:[2,13],6:[2,13],11:[2,13],15:[2,13],18:[2,13],37:[2,13],52:[2,13],53:[2,13],58:[2,13],61:[2,13],75:[2,13],83:[2,13],84:[2,13],87:[2,13],93:[2,13],94:[2,13]},{6:[1,150]},{13:[1,60],20:151,24:57,25:58,28:59,31:[1,61],32:48,34:[1,62],35:[1,63],68:29,69:66,74:[1,52],76:[1,28],77:[1,30],88:[1,27],91:20,95:64,96:65,97:[1,49],98:50,100:[1,21],101:[1,22],102:[1,23],103:[1,24],104:[1,25],105:[1,26]},{2:[2,14],6:[2,14],11:[2,14],15:[2,14],18:[2,14],37:[2,14],52:[2,14],53:[2,14],58:[2,14],61:[2,14],75:[2,14],83:[2,14],84:[2,14],87:[2,14],93:[2,14],94:[2,14]},{2:[2,20],6:[2,20],11:[2,20],15:[2,20],18:[2,20],37:[2,20],52:[2,20],53:[2,20],58:[2,20],75:[2,20],83:[2,20],84:[2,20],87:[2,20],93:[2,20],94:[2,20]},{2:[2,23],6:[2,23],11:[1,152],15:[2,23],18:[2,23],29:36,37:[2,23],52:[2,23],53:[2,23],58:[2,23],62:32,75:[2,23],78:33,79:34,83:[2,23],84:[2,23],86:38,87:[2,23],93:[1,40],94:[1,41]},{26:153,30:[1,97]},{13:[1,51],25:46,28:154,32:48,68:29,69:66,74:[1,52],76:[1,28],77:[1,30],88:[1,27],91:20,95:64,96:65,97:[1,49],98:50,100:[1,21],101:[1,22],102:[1,23],103:[1,24],104:[1,25],105:[1,26]},{2:[2,25],6:[2,25],11:[2,25],15:[2,25],18:[2,25],37:[1,155],52:[2,25],53:[2,25],58:[2,25],75:[2,25],83:[2,25],84:[2,25],87:[2,25],93:[2,25],94:[2,25]},{2:[2,88],6:[2,88],11:[2,88],15:[2,88],18:[2,88],37:[2,88],52:[2,88],53:[2,88],58:[2,88],75:[2,88],83:[2,88],84:[2,88],87:[2,88],93:[2,88],94:[2,88]},{2:[2,89],6:[2,89],11:[2,89],15:[2,89],18:[2,89],37:[2,89],52:[2,89],53:[2,89],58:[2,89],75:[2,89],83:[2,89],84:[2,89],87:[2,89],93:[2,89],94:[2,89]},{2:[2,90],6:[2,90],11:[2,90],15:[2,90],18:[2,90],37:[2,90],52:[2,90],53:[2,90],58:[2,90],75:[2,90],83:[2,90],84:[2,90],87:[2,90],93:[2,90],94:[2,90]},{77:[1,156],88:[1,84]},{2:[2,91],6:[2,91],11:[2,91],15:[2,91],18:[2,91],37:[2,91],52:[2,91],53:[2,91],58:[2,91],75:[2,91],83:[2,91],84:[2,91],87:[2,91],93:[2,91],94:[2,91]},{2:[2,26],6:[2,26],11:[2,26],15:[2,26],18:[2,26],37:[1,155],52:[2,26],53:[2,26],58:[2,26],75:[2,26],83:[2,26],84:[2,26],87:[2,26],93:[2,26],94:[2,26]},{2:[2,27],6:[2,27],11:[2,27],15:[2,27],18:[2,27],37:[1,155],52:[2,27],53:[2,27],58:[2,27],75:[2,27],83:[2,27],84:[2,27],87:[2,27],93:[2,27],94:[2,27]},{15:[1,157],37:[1,115]},{2:[2,76],6:[2,76],11:[2,76],13:[2,76],15:[2,76],18:[2,76],37:[2,76],52:[2,76],53:[2,76],58:[2,76],74:[2,76],75:[2,76],76:[2,76],77:[2,76],83:[2,76],84:[2,76],85:[2,76],87:[2,76],88:[2,76],93:[2,76],94:[2,76],100:[2,76],101:[2,76],102:[2,76],103:[2,76],104:[2,76],105:[2,76]},{15:[2,81],29:36,37:[2,81],62:32,75:[2,81],78:33,79:34,83:[1,37],84:[1,35],86:38,87:[1,39],93:[1,40],94:[1,41]},{5:158,13:[1,14],25:18,32:13,39:11,50:4,51:[1,5],54:6,55:[1,7],57:[1,8],60:[1,9],63:10,68:29,69:12,71:15,72:16,74:[1,19],76:[1,28],77:[1,30],85:[1,17],88:[1,27],91:20,100:[1,21],101:[1,22],102:[1,23],103:[1,24],104:[1,25],105:[1,26]},{15:[1,159],37:[1,160]},{15:[2,133],37:[2,133]},{6:[1,161],18:[1,162]},{6:[2,65],18:[2,65]},{56:[1,163]},{2:[2,15],6:[2,15],11:[2,15],15:[2,15],18:[2,15],37:[2,15],52:[2,15],53:[2,15],58:[2,15],61:[2,15],75:[2,15],83:[2,15],84:[2,15],87:[2,15],93:[2,15],94:[2,15]},{2:[2,16],6:[2,16],18:[2,16]},{4:[1,56],22:164},{2:[2,21],6:[2,21],11:[2,21],15:[2,21],18:[2,21],37:[2,21],52:[2,21],53:[2,21],58:[2,21],75:[2,21],83:[2,21],84:[2,21],87:[2,21],93:[2,21],94:[2,21]},{15:[1,165]},{29:135,80:166,81:136,82:[1,138],83:[1,137],87:[1,39]},{83:[1,167]},{2:[2,79],6:[2,79],11:[2,79],13:[2,79],15:[2,79],18:[2,79],37:[2,79],52:[2,79],53:[2,79],58:[2,79],74:[2,79],75:[2,79],76:[2,79],77:[2,79],83:[2,79],84:[2,79],85:[2,79],87:[2,79],88:[2,79],93:[2,79],94:[2,79],100:[2,79],101:[2,79],102:[2,79],103:[2,79],104:[2,79],105:[2,79]},{2:[2,53],6:[2,53],11:[2,53],15:[2,53],18:[2,53],29:36,37:[2,53],52:[2,53],53:[2,53],58:[2,53],62:32,75:[2,53],78:33,79:34,83:[1,37],84:[1,35],86:38,87:[1,39],93:[1,40],94:[1,41]},{13:[2,131],15:[2,131],30:[2,131],37:[2,131],56:[2,131],74:[2,131],76:[2,131],77:[2,131],83:[2,131],87:[2,131],88:[2,131],97:[2,131],100:[2,131],101:[2,131],102:[2,131],103:[2,131],104:[2,131],105:[2,131]},{13:[1,51],25:46,28:168,32:48,68:29,69:66,74:[1,52],76:[1,28],77:[1,30],88:[1,27],91:20,95:64,96:65,97:[1,49],98:50,100:[1,21],101:[1,22],102:[1,23],103:[1,24],104:[1,25],105:[1,26]},{2:[2,56],6:[2,56],11:[2,56],15:[2,56],18:[2,56],37:[2,56],52:[2,56],53:[2,56],58:[2,56],75:[2,56],83:[2,56],84:[2,56],87:[2,56],93:[2,56],94:[2,56]},{13:[1,51],25:46,28:149,32:48,65:169,68:29,69:66,74:[1,52],76:[1,28],77:[1,30],88:[1,27],91:20,95:64,96:65,97:[1,49],98:50,100:[1,21],101:[1,22],102:[1,23],103:[1,24],104:[1,25],105:[1,26]},{5:170,13:[1,14],25:18,32:13,39:11,50:4,51:[1,5],54:6,55:[1,7],57:[1,8],60:[1,9],63:10,68:29,69:12,71:15,72:16,74:[1,19],76:[1,28],77:[1,30],85:[1,17],88:[1,27],91:20,100:[1,21],101:[1,22],102:[1,23],103:[1,24],104:[1,25],105:[1,26]},{2:[2,24],6:[2,24],11:[2,24],15:[2,24],18:[2,24],37:[2,24],52:[2,24],53:[2,24],58:[2,24],75:[2,24],83:[2,24],84:[2,24],87:[2,24],93:[2,24],94:[2,24]},{13:[1,51],25:46,27:171,32:48,68:29,69:47,74:[1,52],76:[1,28],77:[1,30],88:[1,27],91:20,96:45,97:[1,49],98:50,100:[1,21],101:[1,22],102:[1,23],103:[1,24],104:[1,25],105:[1,26]},{2:[2,87],6:[2,87],11:[2,87],15:[2,87],18:[2,87],37:[2,87],52:[2,87],53:[2,87],58:[2,87],75:[2,87],83:[2,87],84:[2,87],87:[2,87],93:[2,87],94:[2,87]},{2:[2,92],6:[2,92],11:[2,92],15:[2,92],18:[2,92],37:[2,92],52:[2,92],53:[2,92],58:[2,92],75:[2,92],83:[2,92],84:[2,92],87:[2,92],93:[2,92],94:[2,92]},{15:[2,132],37:[2,132]},{6:[2,64],18:[2,64]},{6:[2,66],18:[2,66],29:36,62:32,78:33,79:34,83:[1,37],84:[1,35],86:38,87:[1,39],93:[1,40],94:[1,41]},{13:[1,51],25:46,26:172,30:[1,97],32:48,68:29,69:47,74:[1,52],76:[1,28],77:[1,30],88:[1,27],91:20,96:87,97:[1,49],98:50,100:[1,21],101:[1,22],102:[1,23],103:[1,24],104:[1,25],105:[1,26]},{2:[2,22],6:[2,22],11:[2,22],15:[2,22],18:[2,22],37:[2,22],52:[2,22],53:[2,22],58:[2,22],75:[2,22],83:[2,22],84:[2,22],87:[2,22],93:[2,22],94:[2,22]}],
defaultActions: {79:[2,1]},
parseError: function parseError(str, hash) {
    if (hash.recoverable) {
        this.trace(str);
    } else {
        throw new Error(str);
    }
},
parse: function parse(input) {
    var self = this,
        stack = [0],
        vstack = [null], // semantic value stack
        lstack = [], // location stack
        table = this.table,
        yytext = '',
        yylineno = 0,
        yyleng = 0,
        recovering = 0,
        TERROR = 2,
        EOF = 1;

    var args = lstack.slice.call(arguments, 1);

    //this.reductionCount = this.shiftCount = 0;

    this.lexer.setInput(input);
    this.lexer.yy = this.yy;
    this.yy.lexer = this.lexer;
    this.yy.parser = this;
    if (typeof this.lexer.yylloc == 'undefined') {
        this.lexer.yylloc = {};
    }
    var yyloc = this.lexer.yylloc;
    lstack.push(yyloc);

    var ranges = this.lexer.options && this.lexer.options.ranges;

    if (typeof this.yy.parseError === 'function') {
        this.parseError = this.yy.parseError;
    } else {
        this.parseError = Object.getPrototypeOf(this).parseError;
    }

    function popStack (n) {
        stack.length = stack.length - 2 * n;
        vstack.length = vstack.length - n;
        lstack.length = lstack.length - n;
    }

    function lex() {
        var token;
        token = self.lexer.lex() || EOF; // $end = 1
        // if token isn't its numeric value, convert
        if (typeof token !== 'number') {
            token = self.symbols_[token] || token;
        }
        return token;
    }

    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;
    while (true) {
        // retreive state number from top of stack
        state = stack[stack.length - 1];

        // use default actions if available
        if (this.defaultActions[state]) {
            action = this.defaultActions[state];
        } else {
            if (symbol === null || typeof symbol == 'undefined') {
                symbol = lex();
            }
            // read action for current state and first input
            action = table[state] && table[state][symbol];
        }

_handle_error:
        // handle parse error
        if (typeof action === 'undefined' || !action.length || !action[0]) {
            var error_rule_depth;
            var errStr = '';

            // Return the rule stack depth where the nearest error rule can be found.
            // Return FALSE when no error recovery rule was found.
            function locateNearestErrorRecoveryRule(state) {
                var stack_probe = stack.length - 1;
                var depth = 0;

                // try to recover from error
                for(;;) {
                    // check for error recovery rule in this state
                    if ((TERROR.toString()) in table[state]) {
                        return depth;
                    }
                    if (state === 0 || stack_probe < 2) {
                        return false; // No suitable error recovery rule available.
                    }
                    stack_probe -= 2; // popStack(1): [symbol, action]
                    state = stack[stack_probe];
                    ++depth;
                }
            }

            if (!recovering) {
                // first see if there's any chance at hitting an error recovery rule:
                error_rule_depth = locateNearestErrorRecoveryRule(state);

                // Report error
                expected = [];
                for (p in table[state]) {
                    if (this.terminals_[p] && p > TERROR) {
                        expected.push("'"+this.terminals_[p]+"'");
                    }
                }
                if (this.lexer.showPosition) {
                    errStr = 'Parse error on line '+(yylineno+1)+":\n"+this.lexer.showPosition()+"\nExpecting "+expected.join(', ') + ", got '" + (this.terminals_[symbol] || symbol)+ "'";
                } else {
                    errStr = 'Parse error on line '+(yylineno+1)+": Unexpected " +
                                  (symbol == EOF ? "end of input" :
                                              ("'"+(this.terminals_[symbol] || symbol)+"'"));
                }
                this.parseError(errStr, {
                    text: this.lexer.match,
                    token: this.terminals_[symbol] || symbol,
                    line: this.lexer.yylineno,
                    loc: yyloc,
                    expected: expected,
                    recoverable: (error_rule_depth !== false)
                });
            } else if (preErrorSymbol !== EOF) {
                error_rule_depth = locateNearestErrorRecoveryRule(state);
            }

            // just recovered from another error
            if (recovering == 3) {
                if (symbol === EOF || preErrorSymbol === EOF) {
                    throw new Error(errStr || 'Parsing halted while starting to recover from another error.');
                }

                // discard current lookahead and grab another
                yyleng = this.lexer.yyleng;
                yytext = this.lexer.yytext;
                yylineno = this.lexer.yylineno;
                yyloc = this.lexer.yylloc;
                symbol = lex();
            }

            // try to recover from error
            if (error_rule_depth === false) {
                throw new Error(errStr || 'Parsing halted. No suitable error recovery rule available.');
            }
            popStack(error_rule_depth);

            preErrorSymbol = (symbol == TERROR ? null : symbol); // save the lookahead token
            symbol = TERROR;         // insert generic error symbol as new lookahead
            state = stack[stack.length-1];
            action = table[state] && table[state][TERROR];
            recovering = 3; // allow 3 real symbols to be shifted before reporting a new error
        }

        // this shouldn't happen, unless resolve defaults are off
        if (action[0] instanceof Array && action.length > 1) {
            throw new Error('Parse Error: multiple actions possible at state: '+state+', token: '+symbol);
        }

        switch (action[0]) {
            case 1: // shift
                //this.shiftCount++;

                stack.push(symbol);
                vstack.push(this.lexer.yytext);
                lstack.push(this.lexer.yylloc);
                stack.push(action[1]); // push state
                symbol = null;
                if (!preErrorSymbol) { // normal execution/no error
                    yyleng = this.lexer.yyleng;
                    yytext = this.lexer.yytext;
                    yylineno = this.lexer.yylineno;
                    yyloc = this.lexer.yylloc;
                    if (recovering > 0) {
                        recovering--;
                    }
                } else {
                    // error just occurred, resume old lookahead f/ before error
                    symbol = preErrorSymbol;
                    preErrorSymbol = null;
                }
                break;

            case 2:
                // reduce
                //this.reductionCount++;

                len = this.productions_[action[1]][1];

                // perform semantic action
                yyval.$ = vstack[vstack.length-len]; // default to $$ = $1
                // default location, uses first token for firsts, last for lasts
                yyval._$ = {
                    first_line: lstack[lstack.length-(len||1)].first_line,
                    last_line: lstack[lstack.length-1].last_line,
                    first_column: lstack[lstack.length-(len||1)].first_column,
                    last_column: lstack[lstack.length-1].last_column
                };
                if (ranges) {
                  yyval._$.range = [lstack[lstack.length-(len||1)].range[0], lstack[lstack.length-1].range[1]];
                }
                r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, this.yy, action[1], vstack, lstack].concat(args));

                if (typeof r !== 'undefined') {
                    return r;
                }

                // pop off stack
                if (len) {
                    stack = stack.slice(0,-1*len*2);
                    vstack = vstack.slice(0, -1*len);
                    lstack = lstack.slice(0, -1*len);
                }

                stack.push(this.productions_[action[1]][0]);    // push nonterminal (reduce)
                vstack.push(yyval.$);
                lstack.push(yyval._$);
                // goto new state = table[STATE][NONTERMINAL]
                newState = table[stack[stack.length-2]][stack[stack.length-1]];
                stack.push(newState);
                break;

            case 3:
                // accept
                return true;
        }

    }

    return true;
}};

function Parser () {
  this.yy = {};
}
Parser.prototype = parser;parser.Parser = Parser;
return new Parser;
})();


if (typeof require !== 'undefined' && typeof exports !== 'undefined') {
exports.parser = LichParser;
exports.Parser = LichParser.Parser;
exports.parse = function () { return LichParser.parse.apply(LichParser, arguments); };
exports.main = function commonjsMain(args) {
    if (!args[1]) {
        console.log('Usage: '+args[0]+' FILE');
        process.exit(1);
    }
    var source = require('fs').readFileSync(require('path').normalize(args[1]), "utf8");
    return exports.parser.parse(source);
};
if (typeof module !== 'undefined' && require.main === module) {
  exports.main(process.argv.slice(1));
}
}