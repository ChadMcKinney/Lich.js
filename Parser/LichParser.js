/* parser generated by jison 0.4.13 */
/*
  Returns a Parser object of the following structure:

  Parser: {
    yy: {}
  }

  Parser.prototype: {
    yy: {},
    trace: function(),
    symbols_: {associative list: name ==> number},
    terminals_: {associative list: number ==> name},
    productions_: [...],
    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),
    table: [...],
    defaultActions: {...},
    parseError: function(str, hash),
    parse: function(input),

    lexer: {
        EOF: 1,
        parseError: function(str, hash),
        setInput: function(input),
        input: function(),
        unput: function(str),
        more: function(),
        less: function(n),
        pastInput: function(),
        upcomingInput: function(),
        showPosition: function(),
        test_match: function(regex_match_array, rule_index),
        next: function(),
        lex: function(),
        begin: function(condition),
        popState: function(),
        _currentRules: function(),
        topState: function(),
        pushState: function(condition),

        options: {
            ranges: boolean           (optional: true ==> token location info will include a .range[] member)
            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)
            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)
        },

        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),
        rules: [...],
        conditions: {associative list: name ==> set},
    }
  }


  token location info (@$, _$, etc.): {
    first_line: n,
    last_line: n,
    first_column: n,
    last_column: n,
    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)
  }


  the parseError function receives a 'hash' object with these members for lexer and parser errors: {
    text:        (matched text)
    token:       (the produced terminal token, if any)
    line:        (yylineno)
  }
  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {
    loc:         (yylloc)
    expected:    (string describing the set of expected tokens)
    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)
  }
*/
var LichParser = (function(){
var parser = {trace: function trace() { },
yy: {},
symbols_: {"error":2,"start_":3,"{":4,"exp":5,"}":6,"EOF":7,"module_":8,"module":9,"modid":10,"where":11,"body":12,"(":13,"exports":14,")":15,"topdecls":16,"topdecls_nonempty":17,";":18,"topdecl":19,"decl":20,"data":21,"simpletype":22,"=":23,"constrs":24,"impdecl":25,"decls":26,"list_decl_comma_1":27,"decl_fixity":28,"var":29,"rhs":30,"apats":31,"pat":32,"varop":33,"::":34,"type":35,",":36,"vars":37,"infixl":38,"literal":39,"op_list_1_comma":40,"infixr":41,"infix":42,"tycon":43,"tyvars":44,"|":45,"constr":46,"con":47,"atypes":48,"atype":49,"exports_inner":50,"export":51,"qvar":52,"qtycon":53,"..":54,"list_cname_0_comma":55,"import":56,"imports":57,"hiding":58,"list_import_1_comma":59,"import_a":60,"infixexp":61,"infixexpLR":62,"lexp":63,"qop":64,"-":65,"if":66,"then":67,"else":68,"fexp":69,"\\":70,"->":71,"case":72,"of":73,"alts":74,"let":75,"in":76,"def":77,"aexp":78,"alt":79,"list_cname_1_comma":80,"cname":81,"gcon":82,"tuple":83,"listexp":84,"list_exp_1_comma":85,"[":86,"]":87,"qconid":88,"conid":89,"qvarop":90,"qconop":91,"op":92,"conop":93,"consym":94,"`":95,"qvarsym":96,"qvarid":97,"gconsym":98,"varsym":99,"varid":100,"tyvar":101,"qcon":102,"list_1_comma":103,":":104,"qconsym":105,"gtycon":106,"apptype":107,"lpat":108,"apat":109,"_":110,"tuple_pat":111,"pat_list_1_comma":112,"integer":113,"string":114,"char":115,"float":116,"$accept":0,"$end":1},
terminals_: {2:"error",4:"{",6:"}",7:"EOF",9:"module",11:"where",13:"(",15:")",18:";",21:"data",23:"=",34:"::",36:",",38:"infixl",41:"infixr",42:"infix",45:"|",54:"..",56:"import",58:"hiding",65:"-",66:"if",67:"then",68:"else",70:"\\",71:"->",72:"case",73:"of",75:"let",76:"in",77:"def",86:"[",87:"]",88:"qconid",89:"conid",94:"consym",95:"`",96:"qvarsym",97:"qvarid",99:"varsym",100:"varid",104:":",105:"qconsym",110:"_",113:"integer",114:"string",115:"char",116:"float"},
productions_: [0,[3,4],[8,4],[8,7],[8,1],[12,3],[12,0],[16,1],[17,3],[17,1],[19,1],[19,2],[19,4],[19,1],[26,2],[26,3],[26,3],[26,4],[27,3],[27,1],[20,1],[20,2],[20,3],[20,4],[20,7],[20,3],[20,5],[30,2],[30,4],[28,3],[28,3],[28,3],[22,1],[22,2],[24,3],[24,1],[46,1],[46,2],[48,2],[48,1],[14,1],[14,2],[50,3],[50,1],[51,1],[51,2],[51,1],[51,4],[51,4],[25,2],[25,5],[25,6],[57,1],[57,2],[57,1],[57,0],[59,3],[59,1],[60,1],[60,1],[60,4],[60,4],[5,3],[5,1],[61,2],[62,3],[62,2],[62,0],[63,6],[63,1],[63,4],[63,6],[63,4],[63,3],[63,4],[69,1],[69,2],[37,3],[37,1],[74,3],[74,1],[79,3],[55,1],[55,0],[80,3],[80,1],[81,1],[78,1],[78,1],[78,1],[78,3],[78,1],[78,1],[83,5],[84,3],[85,3],[85,1],[10,1],[10,1],[64,1],[64,1],[40,3],[40,1],[92,1],[92,1],[93,1],[93,3],[90,1],[90,1],[90,3],[91,1],[91,3],[33,1],[33,3],[44,2],[44,1],[101,1],[43,1],[53,1],[53,1],[47,1],[47,3],[102,1],[102,3],[102,1],[82,2],[82,2],[82,3],[82,1],[103,1],[103,2],[29,1],[29,3],[52,1],[52,3],[52,1],[98,1],[98,1],[49,1],[49,1],[49,3],[35,1],[35,3],[107,2],[107,1],[106,1],[32,1],[108,1],[108,2],[31,1],[31,2],[109,1],[109,1],[109,1],[109,1],[109,1],[109,3],[111,5],[112,3],[112,1],[39,1],[39,1],[39,1],[39,1]],
performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {
/* this == yyval */

var $0 = $$.length - 1;
switch (yystate) {
case 1: return $$[$0-2]; 
break;
case 2:this.$ = {name: "module", modid: $$[$0-2], body: $$[$0], pos: this._$}; 
break;
case 3:this.$ = {name: "module", modid: $$[$0-5], exports: $$[$0-3], body: $$[$0], pos: this._$}; 
break;
case 4:this.$ = {name: "module", modid: new Lich.ModName("Main"), body: $$[$0], pos:this._$}; 
break;
case 5: 
        var imps = [], decs = [], atdecs = false;
        for (var i = 0; i < $$[$0-1].length; i++) {
            if ($$[$0-1][i].name == "impdecl" && !atdecs) {
                imps.push($$[$0-1][i]);
            } else if ($$[$0-1][i].name == "impdecl" && atdecs) {
                throw new Error("Parse error: import declaration in statement block at line " + $$[$0-1][i].pos.first_line);
            } else {
                atdecs = true;
                decs.push($$[$0-1][i]);
            }
        }
        
        // add Prelude as an import if not explicitly imported
        var prelude_imported = false;
        for(i=0 ; i<imps.length ; i++){
      if( imps[i].modid == "Prelude" ){
          prelude_imported = true;
          break;
            }
        }
        if( ! prelude_imported ){
            imps.push({name: "impdecl", modid: new Lich.ModName("Prelude")});
        }

        this.$ = {name: "body", impdecls: imps, topdecls: decs, pos:this._$}; 
break;
case 6:this.$ = {name: "body", impdecls: [], topdecls: [], pos:this._$}; 
break;
case 7: this.$ = $$[$0]; 
break;
case 8: $$[$0-2].push($$[$0]); this.$ = $$[$0-2]; 
break;
case 9: this.$ = [$$[$0]]; 
break;
case 10:this.$ = {name: "topdecl-decl", decl: $$[$0], pos: this._$};
break;
case 11:this.$ = {name: "topdecl-data", typ: $$[$0], constrs: [], pos: this._$};
break;
case 12:this.$ = {name: "topdecl-data", typ: $$[$0-2], constrs: $$[$0], pos: this._$};
break;
case 13:this.$ = $$[$0];
break;
case 14: this.$ = []; 
break;
case 15: this.$ = $$[$0-1]; 
break;
case 16: this.$ = []; 
break;
case 17: this.$ = $$[$0-2]; 
break;
case 18: ($$[$0-2]).push($$[$0]); this.$ = $$[$0-2]; 
break;
case 19: this.$ = [$$[$0]]; 
break;
case 20:this.$ = $$[$0];
break;
case 21:this.$ = {name:"decl-fun", ident: $$[$0-1], args: [], rhs: $$[$0], pos: this._$};
break;
case 22:this.$ = {name:"decl-fun", ident: $$[$0-2], args: $$[$0-1], rhs: $$[$0], pos: this._$};
break;
case 23:this.$ = {name:"decl-fun", ident: $$[$0-2], args: [$$[$0-3],$$[$0-1]], rhs: $$[$0], pos: this._$, orig: "infix"};
break;
case 24:this.$ = {name:"decl-fun", ident: $$[$0-4], args: [$$[$0-5],$$[$0-3]].concat($$[$0-1]), rhs: $$[$0], pos: this._$, orig: "infix"};
break;
case 25:this.$ = {name:"type-signature",vars:[$$[$0-2]],sig:$$[$0],pos:this._$};
break;
case 26:this.$ = {name:"type-signature",vars:[$$[$0-4]].concat($$[$0-2]),sig:$$[$0],pos:this._$};
break;
case 27:this.$ = $$[$0];
break;
case 28:this.$ = {name: "fun-where", exp: $$[$0-2], decls: $$[$0], pos: this._$}; 
break;
case 29: this.$ = {name: "fixity", fix: "leftfix", num: $$[$0-1], ops: $$[$0], pos: this._$}; 
break;
case 30: this.$ = {name: "fixity", fix: "rightfix", num: $$[$0-1], ops: $$[$0], pos: this._$}; 
break;
case 31: this.$ = {name: "fixity",  fix: "nonfix",num: $$[$0-1], ops: $$[$0], pos: this._$}; 
break;
case 32:this.$ = {name: "simpletype", tycon: $$[$0], vars: [], pos: this._$};
break;
case 33:this.$ = {name: "simpletype", tycon: $$[$0-1], vars: $$[$0], pos: this._$};
break;
case 34:$$[$0-2].push($$[$0]); this.$ = $$[$0-2];
break;
case 35:this.$ = [$$[$0]];
break;
case 36:this.$ = {name: "constr", dacon: $$[$0], types: [], pos: this._$};
break;
case 37:this.$ = {name: "constr", dacon: $$[$0-1], types: $$[$0], pos: this._$};
break;
case 38:$$[$0-1].push($$[$0]); this.$ = $$[$0-1];
break;
case 39:this.$ = [$$[$0]];
break;
case 40:this.$ = $$[$0];
break;
case 41:this.$ = $$[$0-1];
break;
case 42:$$[$0-2].push($$[$0]); this.$ = $$[$0-2];
break;
case 43:this.$ = [$$[$0]];
break;
case 44:this.$ = {name: "export-qvar", exp: $$[$0], pos: this._$};
break;
case 45:this.$ = {name: "export-module", exp: $$[$0], pos: this._$};
break;
case 46:this.$ = {name: "export-type-unspec", exp: $$[$0], pos: this._$};
break;
case 47:this.$ = {name: "export-type-all", exp: $$[$0-3], pos: this._$};
break;
case 48:this.$ = {name: "export-type-vars", exp: $$[$0-3], vars: $$[$0-1], pos: this._$};
break;
case 49:this.$ = {name: "impdecl", modid: $$[$0], pos: this._$};
break;
case 50:this.$ = {name: "impdecl", modid: $$[$0-3], hiding: false, imports: $$[$0-1], pos: this._$};
break;
case 51:this.$ = {name: "impdecl", modid: $$[$0-4], hiding: true, imports: $$[$0-1], pos: this._$};
break;
case 52:this.$ = $$[$0];
break;
case 53:this.$ = $$[$0-1];
break;
case 54:this.$ = [];
break;
case 55:this.$ = [];
break;
case 56:$$[$0-2].push($$[$0]); this.$ = $$[$0-2];
break;
case 57:this.$ = [$$[$0]];
break;
case 58:this.$ = {name: "import-var", varname: $$[$0], pos: this._$};
break;
case 59:this.$ = {name: "import-tycon", tycon: $$[$0], all: false, pos: this._$};
break;
case 60:this.$ = {name: "import-tycon", tycon: $$[$0-3], all: true, pos: this._$};
break;
case 61:this.$ = {name: "import-tycon", tycon: $$[$0-3], all: false, list:$$[$0-1], pos: this._$};
break;
case 62:this.$ = {name:"type-signature",exp:$$[$0-2],sig:$$[$0],pos:this._$};
break;
case 63:this.$ = $$[$0];
break;
case 64:
          ($$[$0-1]).push($$[$0]);
          if( ($$[$0-1]).length == 1 && ($$[$0-1])[0].name=="infixexp" ){
                  this.$ = ($$[$0-1])[0];
          } else {
              this.$ = {name:"infixexp",exps:$$[$0-1],pos:this._$};
          }
      
break;
case 65:($$[$0-2]).push($$[$0-1],$$[$0]); this.$ = $$[$0-2];
break;
case 66:($$[$0-1]).push($$[$0]);    this.$ = $$[$0];
break;
case 67:this.$ = [];
break;
case 68:this.$ = {name:"ite",e1:$$[$0-4],e2:$$[$0-2],e3:$$[$0],pos:this._$}; 
break;
case 69: this.$ = ($$[$0].length === 1) ? ($$[$0][0]) : {name:"application", exps:$$[$0],pos:this._$}; 
break;
case 70:this.$ = {name:"lambda", args: $$[$0-2], rhs: $$[$0], pos: this._$}; 
break;
case 71:this.$ = {name:"case", exp: $$[$0-4], alts: $$[$0-1], pos: this._$}; 
break;
case 72:this.$ = {name:"let", decls: $$[$0-2], exp: $$[$0], pos: this._$}; 
break;
case 73:this.$ = {name:"decl-fun", ident: $$[$0-2], args: [], rhs: $$[$0-1], pos: this._$};
break;
case 74:this.$ = {name:"decl-fun", ident: $$[$0-3], args: $$[$0-2], rhs: $$[$0-1], pos: this._$};
break;
case 75:this.$ = [$$[$0]];
break;
case 76:($$[$0-1]).push($$[$0]); this.$ = $$[$0-1];
break;
case 77:$$[$0-2].push($$[$0]); this.$ = $$[$0-2];
break;
case 78:this.$ = [$$[$0]];
break;
case 79:$$[$0-2].push($$[$0]); this.$ = $$[$0-2];
break;
case 80:this.$ = [$$[$0]];
break;
case 81:this.$ = {name:"alt", pat: $$[$0-2], exp: $$[$0]};
break;
case 82:this.$ = $$[$0];
break;
case 83:this.$ = [];
break;
case 84:$$[$0-2].push($$[$0]); this.$ = $$[$0-2];
break;
case 85:this.$ = [$$[$0]];
break;
case 86:this.$ = $$[$0];
break;
case 87:this.$ = $$[$0];
break;
case 88:this.$ = $$[$0];
break;
case 89:this.$ = $$[$0];
break;
case 90:this.$ = $$[$0-1];
break;
case 91:this.$ = $$[$0];
break;
case 92:this.$ = $$[$0];
break;
case 93:$$[$0-1].unshift($$[$0-3]); this.$ = {name: "tuple", members: $$[$0-1], pos: this._$}; 
break;
case 94: this.$ = {name: "listexp", members: $$[$0-1], pos: this._$}; 
break;
case 95:$$[$0-2].push($$[$0]); this.$ = $$[$0-2]; 
break;
case 96:this.$ = [$$[$0]];
break;
case 97:this.$ = new Lich.ModName($$[$0], this._$, yy.lexer.previous.qual);
break;
case 98:this.$ = new Lich.ModName($$[$0], this._$);
break;
case 99:this.$ = {name: "qop", id: $$[$0], pos: this._$};
break;
case 100:this.$ = {name: "qop", id: $$[$0], pos: this._$};
break;
case 101: $$[$0-2].push($$[$0]); this.$ = $$[$0-2]; 
break;
case 102: this.$ = [$$[$0]]; 
break;
case 103: this.$ = $$[$0]; 
break;
case 104: this.$ = $$[$0]; 
break;
case 105: this.$ = new Lich.DaCon($$[$0], this._$, true); 
break;
case 106: this.$ = new Lich.DaCon($$[$0-1], this._$, false); 
break;
case 107:this.$ = new Lich.VarName($$[$0], this._$, true, yy.lexer.previous.qual);
break;
case 108:this.$ = $$[$0];
break;
case 109:this.$ = new Lich.VarName($$[$0-1], this._$, false, yy.lexer.previous.qual);
break;
case 110:this.$ = $$[$0];
break;
case 111:this.$ = new Lich.DaCon($$[$0-1], this._$, false, yy.lexer.previous.qual);
break;
case 112:this.$ = new Lich.VarName($$[$0], this._$, true);
break;
case 113:this.$ = new Lich.VarName($$[$0-1], this._$, false)
break;
case 114:$$[$0-1].push($$[$0]); this.$ = $$[$0-1];
break;
case 115:this.$ = [$$[$0]];
break;
case 116:this.$ = new Lich.TyVar($$[$0], this._$);
break;
case 117:this.$ = new Lich.TyCon($$[$0], this._$);
break;
case 118:this.$ = new Lich.TyCon($$[$0], this._$, yy.lexer.previous.qual);
break;
case 119:this.$ = $$[$0];
break;
case 120:this.$ = new Lich.DaCon($$[$0], this._$, false);
break;
case 121:this.$ = new Lich.DaCon($$[$0-1], this._$, true);
break;
case 122:this.$ = new Lich.DaCon($$[$0], this._$, false, yy.lexer.previous.qual);
break;
case 123:this.$ = $$[$0-1];
break;
case 124:this.$ = $$[$0];
break;
case 125:this.$ = new Lich.UnitDaCon(this._$);
break;
case 126:this.$ = new Lich.NilDaCon(this._$);
break;
case 127:this.$ = new Lich.TupleDaCon($$[$0-1] + 1, this._$);
break;
case 128:this.$ = $$[$0];
break;
case 129:this.$ = 1;
break;
case 130:this.$ = $$[$0-1] + 1;
break;
case 131:this.$ = new Lich.VarName($$[$0], this._$, false);
break;
case 132:this.$ = new Lich.VarName($$[$0-1], this._$, true);
break;
case 133:this.$ = new Lich.VarName($$[$0], this._$, false, yy.lexer.previous.qual);
break;
case 134:this.$ = new Lich.VarName($$[$0-1], this._$, true, yy.lexer.previous.qual);
break;
case 135:this.$ = $$[$0];
break;
case 136:this.$ = new Lich.ConsDaCon(this._$);
break;
case 137:this.$ = new Lich.DaCon($$[$0], this._$, true, yy.lexer.previous.qual);
break;
case 138:this.$ = $$[$0];
break;
case 139:this.$ = $$[$0];
break;
case 140:this.$ = $$[$0-1];
break;
case 141:this.$ = $$[$0];
break;
case 142:this.$ = new Lich.FunType([$$[$0-2],$$[$0]],this._$);
break;
case 143:this.$ = new Lich.AppType($$[$0-1],$$[$0],this._$);
break;
case 144:this.$ = $$[$0];
break;
case 145:this.$ = $$[$0];
break;
case 146:this.$ = $$[$0];
break;
case 147:this.$ = $$[$0];
break;
case 148:this.$ = {name: "conpat", con: $$[$0-1], pats: $$[$0]}; 
break;
case 149:this.$ = [$$[$0]];
break;
case 150:$$[$0-1].push($$[$0]); this.$ = $$[$0-1];
break;
case 151:this.$ = $$[$0]; 
break;
case 152:this.$ = $$[$0]; 
break;
case 153:this.$ = $$[$0]; 
break;
case 154:this.$ = {name:"wildcard", pos: this._$}; 
break;
case 155:this.$ = $$[$0]; 
break;
case 156:this.$ = $$[$0-1]; 
break;
case 157:$$[$0-1].unshift($$[$0-3]); this.$ = {name: "tuple_pat", members: $$[$0-1], pos: this._$}; 
break;
case 158:$$[$0-2].push($$[$0]); this.$ = $$[$0-2]; 
break;
case 159:this.$ = [$$[$0]]; 
break;
case 160:this.$ = {name: "integer-lit", value: Number($$[$0]), pos: this._$};
break;
case 161:this.$ = {name: "string-lit", value: yytext, pos: this._$};
break;
case 162:this.$ = {name: "char-lit", value: yytext, pos: this._$};
break;
case 163:this.$ = {name: "float-lit", value: Number(yytext), pos: this._$};
break;
}
},
table: [{3:1,4:[1,2]},{1:[3]},{5:3,13:[2,67],61:4,62:5,65:[2,67],66:[2,67],70:[2,67],72:[2,67],75:[2,67],77:[2,67],86:[2,67],88:[2,67],89:[2,67],97:[2,67],100:[2,67],113:[2,67],114:[2,67],115:[2,67],116:[2,67]},{6:[1,6]},{2:[2,63],6:[2,63],11:[2,63],15:[2,63],18:[2,63],34:[1,7],36:[2,63],67:[2,63],68:[2,63],73:[2,63],87:[2,63],95:[2,63],96:[2,63],99:[2,63],104:[2,63],105:[2,63]},{13:[1,20],29:24,39:19,47:33,52:17,63:8,65:[1,9],66:[1,10],69:11,70:[1,12],72:[1,13],75:[1,14],77:[1,15],78:16,82:18,83:21,84:22,86:[1,25],88:[1,32],89:[1,34],97:[1,23],100:[1,31],102:26,113:[1,27],114:[1,28],115:[1,29],116:[1,30]},{7:[1,35]},{13:[1,41],35:36,43:45,49:38,53:42,88:[1,44],89:[1,46],100:[1,43],101:40,106:39,107:37},{2:[2,64],6:[2,64],11:[2,64],15:[2,64],18:[2,64],33:51,34:[2,64],36:[2,64],64:47,67:[2,64],68:[2,64],73:[2,64],87:[2,64],90:48,91:49,95:[1,52],96:[1,50],98:53,99:[1,54],104:[1,55],105:[1,56]},{13:[2,66],65:[2,66],66:[2,66],70:[2,66],72:[2,66],75:[2,66],77:[2,66],86:[2,66],88:[2,66],89:[2,66],97:[2,66],100:[2,66],113:[2,66],114:[2,66],115:[2,66],116:[2,66]},{5:57,13:[2,67],61:4,62:5,65:[2,67],66:[2,67],70:[2,67],72:[2,67],75:[2,67],77:[2,67],86:[2,67],88:[2,67],89:[2,67],97:[2,67],100:[2,67],113:[2,67],114:[2,67],115:[2,67],116:[2,67]},{2:[2,69],6:[2,69],11:[2,69],13:[1,20],15:[2,69],18:[2,69],29:24,34:[2,69],36:[2,69],39:19,47:33,52:17,67:[2,69],68:[2,69],73:[2,69],78:58,82:18,83:21,84:22,86:[1,25],87:[2,69],88:[1,32],89:[1,34],95:[2,69],96:[2,69],97:[1,23],99:[2,69],100:[1,31],102:26,104:[2,69],105:[2,69],113:[1,27],114:[1,28],115:[1,29],116:[1,30]},{13:[1,66],29:61,31:59,39:63,47:33,82:62,86:[1,67],88:[1,32],89:[1,34],100:[1,31],102:26,109:60,110:[1,64],111:65,113:[1,27],114:[1,28],115:[1,29],116:[1,30]},{5:68,13:[2,67],61:4,62:5,65:[2,67],66:[2,67],70:[2,67],72:[2,67],75:[2,67],77:[2,67],86:[2,67],88:[2,67],89:[2,67],97:[2,67],100:[2,67],113:[2,67],114:[2,67],115:[2,67],116:[2,67]},{4:[1,70],26:69},{13:[1,72],29:71,100:[1,31]},{2:[2,75],6:[2,75],11:[2,75],13:[2,75],15:[2,75],18:[2,75],34:[2,75],36:[2,75],67:[2,75],68:[2,75],73:[2,75],86:[2,75],87:[2,75],88:[2,75],89:[2,75],95:[2,75],96:[2,75],97:[2,75],99:[2,75],100:[2,75],104:[2,75],105:[2,75],113:[2,75],114:[2,75],115:[2,75],116:[2,75]},{2:[2,87],6:[2,87],11:[2,87],13:[2,87],15:[2,87],18:[2,87],34:[2,87],36:[2,87],67:[2,87],68:[2,87],73:[2,87],86:[2,87],87:[2,87],88:[2,87],89:[2,87],95:[2,87],96:[2,87],97:[2,87],99:[2,87],100:[2,87],104:[2,87],105:[2,87],113:[2,87],114:[2,87],115:[2,87],116:[2,87]},{2:[2,88],6:[2,88],11:[2,88],13:[2,88],15:[2,88],18:[2,88],34:[2,88],36:[2,88],67:[2,88],68:[2,88],73:[2,88],86:[2,88],87:[2,88],88:[2,88],89:[2,88],95:[2,88],96:[2,88],97:[2,88],99:[2,88],100:[2,88],104:[2,88],105:[2,88],113:[2,88],114:[2,88],115:[2,88],116:[2,88]},{2:[2,89],6:[2,89],11:[2,89],13:[2,89],15:[2,89],18:[2,89],34:[2,89],36:[2,89],67:[2,89],68:[2,89],73:[2,89],86:[2,89],87:[2,89],88:[2,89],89:[2,89],95:[2,89],96:[2,89],97:[2,89],99:[2,89],100:[2,89],104:[2,89],105:[2,89],113:[2,89],114:[2,89],115:[2,89],116:[2,89]},{5:73,13:[2,67],15:[1,75],36:[1,80],61:4,62:5,65:[2,67],66:[2,67],70:[2,67],72:[2,67],75:[2,67],77:[2,67],86:[2,67],88:[2,67],89:[2,67],94:[1,79],96:[1,74],97:[2,67],98:78,99:[1,77],100:[2,67],103:76,104:[1,55],105:[1,56],113:[2,67],114:[2,67],115:[2,67],116:[2,67]},{2:[2,91],6:[2,91],11:[2,91],13:[2,91],15:[2,91],18:[2,91],34:[2,91],36:[2,91],67:[2,91],68:[2,91],73:[2,91],86:[2,91],87:[2,91],88:[2,91],89:[2,91],95:[2,91],96:[2,91],97:[2,91],99:[2,91],100:[2,91],104:[2,91],105:[2,91],113:[2,91],114:[2,91],115:[2,91],116:[2,91]},{2:[2,92],6:[2,92],11:[2,92],13:[2,92],15:[2,92],18:[2,92],34:[2,92],36:[2,92],67:[2,92],68:[2,92],73:[2,92],86:[2,92],87:[2,92],88:[2,92],89:[2,92],95:[2,92],96:[2,92],97:[2,92],99:[2,92],100:[2,92],104:[2,92],105:[2,92],113:[2,92],114:[2,92],115:[2,92],116:[2,92]},{2:[2,133],6:[2,133],11:[2,133],13:[2,133],15:[2,133],18:[2,133],34:[2,133],36:[2,133],67:[2,133],68:[2,133],73:[2,133],86:[2,133],87:[2,133],88:[2,133],89:[2,133],95:[2,133],96:[2,133],97:[2,133],99:[2,133],100:[2,133],104:[2,133],105:[2,133],113:[2,133],114:[2,133],115:[2,133],116:[2,133]},{2:[2,135],6:[2,135],11:[2,135],13:[2,135],15:[2,135],18:[2,135],34:[2,135],36:[2,135],67:[2,135],68:[2,135],73:[2,135],86:[2,135],87:[2,135],88:[2,135],89:[2,135],95:[2,135],96:[2,135],97:[2,135],99:[2,135],100:[2,135],104:[2,135],105:[2,135],113:[2,135],114:[2,135],115:[2,135],116:[2,135]},{5:83,13:[2,67],61:4,62:5,65:[2,67],66:[2,67],70:[2,67],72:[2,67],75:[2,67],77:[2,67],85:82,86:[2,67],87:[1,81],88:[2,67],89:[2,67],97:[2,67],100:[2,67],113:[2,67],114:[2,67],115:[2,67],116:[2,67]},{2:[2,128],6:[2,128],11:[2,128],13:[2,128],15:[2,128],18:[2,128],23:[2,128],34:[2,128],36:[2,128],67:[2,128],68:[2,128],71:[2,128],73:[2,128],86:[2,128],87:[2,128],88:[2,128],89:[2,128],95:[2,128],96:[2,128],97:[2,128],99:[2,128],100:[2,128],104:[2,128],105:[2,128],110:[2,128],113:[2,128],114:[2,128],115:[2,128],116:[2,128]},{2:[2,160],6:[2,160],11:[2,160],13:[2,160],15:[2,160],18:[2,160],23:[2,160],34:[2,160],36:[2,160],67:[2,160],68:[2,160],71:[2,160],73:[2,160],86:[2,160],87:[2,160],88:[2,160],89:[2,160],94:[2,160],95:[2,160],96:[2,160],97:[2,160],99:[2,160],100:[2,160],104:[2,160],105:[2,160],110:[2,160],113:[2,160],114:[2,160],115:[2,160],116:[2,160]},{2:[2,161],6:[2,161],11:[2,161],13:[2,161],15:[2,161],18:[2,161],23:[2,161],34:[2,161],36:[2,161],67:[2,161],68:[2,161],71:[2,161],73:[2,161],86:[2,161],87:[2,161],88:[2,161],89:[2,161],94:[2,161],95:[2,161],96:[2,161],97:[2,161],99:[2,161],100:[2,161],104:[2,161],105:[2,161],110:[2,161],113:[2,161],114:[2,161],115:[2,161],116:[2,161]},{2:[2,162],6:[2,162],11:[2,162],13:[2,162],15:[2,162],18:[2,162],23:[2,162],34:[2,162],36:[2,162],67:[2,162],68:[2,162],71:[2,162],73:[2,162],86:[2,162],87:[2,162],88:[2,162],89:[2,162],94:[2,162],95:[2,162],96:[2,162],97:[2,162],99:[2,162],100:[2,162],104:[2,162],105:[2,162],110:[2,162],113:[2,162],114:[2,162],115:[2,162],116:[2,162]},{2:[2,163],6:[2,163],11:[2,163],13:[2,163],15:[2,163],18:[2,163],23:[2,163],34:[2,163],36:[2,163],67:[2,163],68:[2,163],71:[2,163],73:[2,163],86:[2,163],87:[2,163],88:[2,163],89:[2,163],94:[2,163],95:[2,163],96:[2,163],97:[2,163],99:[2,163],100:[2,163],104:[2,163],105:[2,163],110:[2,163],113:[2,163],114:[2,163],115:[2,163],116:[2,163]},{2:[2,131],6:[2,131],11:[2,131],13:[2,131],15:[2,131],18:[2,131],23:[2,131],34:[2,131],36:[2,131],67:[2,131],68:[2,131],71:[2,131],73:[2,131],86:[2,131],87:[2,131],88:[2,131],89:[2,131],95:[2,131],96:[2,131],97:[2,131],99:[2,131],100:[2,131],104:[2,131],105:[2,131],110:[2,131],113:[2,131],114:[2,131],115:[2,131],116:[2,131]},{2:[2,122],6:[2,122],11:[2,122],13:[2,122],15:[2,122],18:[2,122],23:[2,122],34:[2,122],36:[2,122],67:[2,122],68:[2,122],71:[2,122],73:[2,122],86:[2,122],87:[2,122],88:[2,122],89:[2,122],95:[2,122],96:[2,122],97:[2,122],99:[2,122],100:[2,122],104:[2,122],105:[2,122],110:[2,122],113:[2,122],114:[2,122],115:[2,122],116:[2,122]},{2:[2,124],6:[2,124],11:[2,124],13:[2,124],15:[2,124],18:[2,124],23:[2,124],34:[2,124],36:[2,124],67:[2,124],68:[2,124],71:[2,124],73:[2,124],86:[2,124],87:[2,124],88:[2,124],89:[2,124],95:[2,124],96:[2,124],97:[2,124],99:[2,124],100:[2,124],104:[2,124],105:[2,124],110:[2,124],113:[2,124],114:[2,124],115:[2,124],116:[2,124]},{2:[2,120],6:[2,120],11:[2,120],13:[2,120],15:[2,120],18:[2,120],23:[2,120],34:[2,120],36:[2,120],67:[2,120],68:[2,120],71:[2,120],73:[2,120],86:[2,120],87:[2,120],88:[2,120],89:[2,120],95:[2,120],96:[2,120],97:[2,120],99:[2,120],100:[2,120],104:[2,120],105:[2,120],110:[2,120],113:[2,120],114:[2,120],115:[2,120],116:[2,120]},{1:[2,1]},{2:[2,62],6:[2,62],11:[2,62],15:[2,62],18:[2,62],34:[2,62],36:[2,62],67:[2,62],68:[2,62],73:[2,62],87:[2,62],95:[2,62],96:[2,62],99:[2,62],104:[2,62],105:[2,62]},{2:[2,141],6:[2,141],11:[2,141],13:[1,41],15:[2,141],18:[2,141],34:[2,141],36:[2,141],43:45,49:85,53:42,67:[2,141],68:[2,141],71:[1,84],73:[2,141],87:[2,141],88:[1,44],89:[1,46],95:[2,141],96:[2,141],99:[2,141],100:[1,43],101:40,104:[2,141],105:[2,141],106:39},{2:[2,144],6:[2,144],11:[2,144],13:[2,144],15:[2,144],18:[2,144],34:[2,144],36:[2,144],67:[2,144],68:[2,144],71:[2,144],73:[2,144],87:[2,144],88:[2,144],89:[2,144],95:[2,144],96:[2,144],99:[2,144],100:[2,144],104:[2,144],105:[2,144]},{2:[2,138],6:[2,138],11:[2,138],13:[2,138],15:[2,138],18:[2,138],34:[2,138],36:[2,138],67:[2,138],68:[2,138],71:[2,138],73:[2,138],87:[2,138],88:[2,138],89:[2,138],95:[2,138],96:[2,138],99:[2,138],100:[2,138],104:[2,138],105:[2,138]},{2:[2,139],6:[2,139],11:[2,139],13:[2,139],15:[2,139],18:[2,139],34:[2,139],36:[2,139],67:[2,139],68:[2,139],71:[2,139],73:[2,139],87:[2,139],88:[2,139],89:[2,139],95:[2,139],96:[2,139],99:[2,139],100:[2,139],104:[2,139],105:[2,139]},{13:[1,41],35:86,43:45,49:38,53:42,88:[1,44],89:[1,46],100:[1,43],101:40,106:39,107:37},{2:[2,145],6:[2,145],11:[2,145],13:[2,145],15:[2,145],18:[2,145],34:[2,145],36:[2,145],67:[2,145],68:[2,145],71:[2,145],73:[2,145],87:[2,145],88:[2,145],89:[2,145],95:[2,145],96:[2,145],99:[2,145],100:[2,145],104:[2,145],105:[2,145]},{2:[2,116],6:[2,116],11:[2,116],13:[2,116],15:[2,116],18:[2,116],34:[2,116],36:[2,116],67:[2,116],68:[2,116],71:[2,116],73:[2,116],87:[2,116],88:[2,116],89:[2,116],95:[2,116],96:[2,116],99:[2,116],100:[2,116],104:[2,116],105:[2,116]},{2:[2,118],6:[2,118],11:[2,118],13:[2,118],15:[2,118],18:[2,118],34:[2,118],36:[2,118],67:[2,118],68:[2,118],71:[2,118],73:[2,118],87:[2,118],88:[2,118],89:[2,118],95:[2,118],96:[2,118],99:[2,118],100:[2,118],104:[2,118],105:[2,118]},{2:[2,119],6:[2,119],11:[2,119],13:[2,119],15:[2,119],18:[2,119],34:[2,119],36:[2,119],67:[2,119],68:[2,119],71:[2,119],73:[2,119],87:[2,119],88:[2,119],89:[2,119],95:[2,119],96:[2,119],99:[2,119],100:[2,119],104:[2,119],105:[2,119]},{2:[2,117],6:[2,117],11:[2,117],13:[2,117],15:[2,117],18:[2,117],34:[2,117],36:[2,117],67:[2,117],68:[2,117],71:[2,117],73:[2,117],87:[2,117],88:[2,117],89:[2,117],95:[2,117],96:[2,117],99:[2,117],100:[2,117],104:[2,117],105:[2,117]},{13:[2,65],65:[2,65],66:[2,65],70:[2,65],72:[2,65],75:[2,65],77:[2,65],86:[2,65],88:[2,65],89:[2,65],97:[2,65],100:[2,65],113:[2,65],114:[2,65],115:[2,65],116:[2,65]},{13:[2,99],65:[2,99],66:[2,99],70:[2,99],72:[2,99],75:[2,99],77:[2,99],86:[2,99],88:[2,99],89:[2,99],97:[2,99],100:[2,99],113:[2,99],114:[2,99],115:[2,99],116:[2,99]},{13:[2,100],65:[2,100],66:[2,100],70:[2,100],72:[2,100],75:[2,100],77:[2,100],86:[2,100],88:[2,100],89:[2,100],97:[2,100],100:[2,100],113:[2,100],114:[2,100],115:[2,100],116:[2,100]},{13:[2,107],65:[2,107],66:[2,107],70:[2,107],72:[2,107],75:[2,107],77:[2,107],86:[2,107],88:[2,107],89:[2,107],97:[2,107],100:[2,107],113:[2,107],114:[2,107],115:[2,107],116:[2,107]},{13:[2,108],65:[2,108],66:[2,108],70:[2,108],72:[2,108],75:[2,108],77:[2,108],86:[2,108],88:[2,108],89:[2,108],97:[2,108],100:[2,108],113:[2,108],114:[2,108],115:[2,108],116:[2,108]},{88:[1,88],97:[1,87],100:[1,89]},{13:[2,110],65:[2,110],66:[2,110],70:[2,110],72:[2,110],75:[2,110],77:[2,110],86:[2,110],88:[2,110],89:[2,110],97:[2,110],100:[2,110],113:[2,110],114:[2,110],115:[2,110],116:[2,110]},{2:[2,112],6:[2,112],13:[2,112],18:[2,112],36:[2,112],65:[2,112],66:[2,112],70:[2,112],72:[2,112],75:[2,112],77:[2,112],86:[2,112],88:[2,112],89:[2,112],97:[2,112],100:[2,112],110:[2,112],113:[2,112],114:[2,112],115:[2,112],116:[2,112]},{13:[2,136],15:[2,136],65:[2,136],66:[2,136],70:[2,136],72:[2,136],75:[2,136],77:[2,136],86:[2,136],88:[2,136],89:[2,136],97:[2,136],100:[2,136],113:[2,136],114:[2,136],115:[2,136],116:[2,136]},{13:[2,137],15:[2,137],65:[2,137],66:[2,137],70:[2,137],72:[2,137],75:[2,137],77:[2,137],86:[2,137],88:[2,137],89:[2,137],97:[2,137],100:[2,137],113:[2,137],114:[2,137],115:[2,137],116:[2,137]},{67:[1,90]},{2:[2,76],6:[2,76],11:[2,76],13:[2,76],15:[2,76],18:[2,76],34:[2,76],36:[2,76],67:[2,76],68:[2,76],73:[2,76],86:[2,76],87:[2,76],88:[2,76],89:[2,76],95:[2,76],96:[2,76],97:[2,76],99:[2,76],100:[2,76],104:[2,76],105:[2,76],113:[2,76],114:[2,76],115:[2,76],116:[2,76]},{13:[1,66],29:61,39:63,47:33,71:[1,91],82:62,86:[1,67],88:[1,32],89:[1,34],100:[1,31],102:26,109:92,110:[1,64],111:65,113:[1,27],114:[1,28],115:[1,29],116:[1,30]},{13:[2,149],15:[2,149],23:[2,149],36:[2,149],71:[2,149],86:[2,149],88:[2,149],89:[2,149],95:[2,149],99:[2,149],100:[2,149],110:[2,149],113:[2,149],114:[2,149],115:[2,149],116:[2,149]},{13:[2,151],15:[2,151],23:[2,151],36:[2,151],71:[2,151],86:[2,151],88:[2,151],89:[2,151],95:[2,151],99:[2,151],100:[2,151],110:[2,151],113:[2,151],114:[2,151],115:[2,151],116:[2,151]},{13:[2,152],15:[2,152],23:[2,152],36:[2,152],71:[2,152],86:[2,152],88:[2,152],89:[2,152],95:[2,152],99:[2,152],100:[2,152],110:[2,152],113:[2,152],114:[2,152],115:[2,152],116:[2,152]},{13:[2,153],15:[2,153],23:[2,153],36:[2,153],71:[2,153],86:[2,153],88:[2,153],89:[2,153],95:[2,153],99:[2,153],100:[2,153],110:[2,153],113:[2,153],114:[2,153],115:[2,153],116:[2,153]},{13:[2,154],15:[2,154],23:[2,154],36:[2,154],71:[2,154],86:[2,154],88:[2,154],89:[2,154],95:[2,154],99:[2,154],100:[2,154],110:[2,154],113:[2,154],114:[2,154],115:[2,154],116:[2,154]},{13:[2,155],15:[2,155],23:[2,155],36:[2,155],71:[2,155],86:[2,155],88:[2,155],89:[2,155],95:[2,155],99:[2,155],100:[2,155],110:[2,155],113:[2,155],114:[2,155],115:[2,155],116:[2,155]},{13:[1,66],15:[1,75],29:61,32:93,36:[1,80],39:63,47:33,82:96,86:[1,67],88:[1,32],89:[1,34],94:[1,79],98:78,99:[1,77],100:[1,31],102:26,103:76,104:[1,55],105:[1,56],108:94,109:95,110:[1,64],111:65,113:[1,27],114:[1,28],115:[1,29],116:[1,30]},{87:[1,81]},{73:[1,97]},{76:[1,98]},{2:[1,101],6:[1,99],13:[1,106],20:102,27:100,28:103,29:104,32:105,38:[1,107],39:63,41:[1,108],42:[1,109],47:33,82:96,86:[1,67],88:[1,32],89:[1,34],100:[1,31],102:26,108:94,109:95,110:[1,64],111:65,113:[1,27],114:[1,28],115:[1,29],116:[1,30]},{13:[1,66],23:[1,112],29:61,30:110,31:111,39:63,47:33,82:62,86:[1,67],88:[1,32],89:[1,34],100:[1,31],102:26,109:60,110:[1,64],111:65,113:[1,27],114:[1,28],115:[1,29],116:[1,30]},{99:[1,77]},{15:[1,113],36:[1,114]},{15:[1,115]},{2:[2,125],6:[2,125],11:[2,125],13:[2,125],15:[2,125],18:[2,125],23:[2,125],34:[2,125],36:[2,125],67:[2,125],68:[2,125],71:[2,125],73:[2,125],86:[2,125],87:[2,125],88:[2,125],89:[2,125],95:[2,125],96:[2,125],97:[2,125],99:[2,125],100:[2,125],104:[2,125],105:[2,125],110:[2,125],113:[2,125],114:[2,125],115:[2,125],116:[2,125]},{15:[1,116],36:[1,117]},{15:[1,118]},{15:[1,119]},{15:[1,120]},{15:[2,129],36:[2,129]},{2:[2,126],6:[2,126],11:[2,126],13:[2,126],15:[2,126],18:[2,126],23:[2,126],34:[2,126],36:[2,126],67:[2,126],68:[2,126],71:[2,126],73:[2,126],86:[2,126],87:[2,126],88:[2,126],89:[2,126],95:[2,126],96:[2,126],97:[2,126],99:[2,126],100:[2,126],104:[2,126],105:[2,126],110:[2,126],113:[2,126],114:[2,126],115:[2,126],116:[2,126]},{36:[1,122],87:[1,121]},{15:[2,96],36:[2,96],87:[2,96]},{13:[1,41],35:123,43:45,49:38,53:42,88:[1,44],89:[1,46],100:[1,43],101:40,106:39,107:37},{2:[2,143],6:[2,143],11:[2,143],13:[2,143],15:[2,143],18:[2,143],34:[2,143],36:[2,143],67:[2,143],68:[2,143],71:[2,143],73:[2,143],87:[2,143],88:[2,143],89:[2,143],95:[2,143],96:[2,143],99:[2,143],100:[2,143],104:[2,143],105:[2,143]},{15:[1,124]},{95:[1,125]},{95:[1,126]},{95:[1,127]},{5:128,13:[2,67],61:4,62:5,65:[2,67],66:[2,67],70:[2,67],72:[2,67],75:[2,67],77:[2,67],86:[2,67],88:[2,67],89:[2,67],97:[2,67],100:[2,67],113:[2,67],114:[2,67],115:[2,67],116:[2,67]},{5:129,13:[2,67],61:4,62:5,65:[2,67],66:[2,67],70:[2,67],72:[2,67],75:[2,67],77:[2,67],86:[2,67],88:[2,67],89:[2,67],97:[2,67],100:[2,67],113:[2,67],114:[2,67],115:[2,67],116:[2,67]},{13:[2,150],15:[2,150],23:[2,150],36:[2,150],71:[2,150],86:[2,150],88:[2,150],89:[2,150],95:[2,150],99:[2,150],100:[2,150],110:[2,150],113:[2,150],114:[2,150],115:[2,150],116:[2,150]},{15:[1,130],36:[1,131]},{15:[2,146],23:[2,146],36:[2,146],71:[2,146],95:[2,146],99:[2,146]},{15:[2,147],23:[2,147],36:[2,147],71:[2,147],95:[2,147],99:[2,147]},{13:[1,66],15:[2,152],23:[2,152],29:61,31:132,36:[2,152],39:63,47:33,71:[2,152],82:62,86:[1,67],88:[1,32],89:[1,34],95:[2,152],99:[2,152],100:[1,31],102:26,109:60,110:[1,64],111:65,113:[1,27],114:[1,28],115:[1,29],116:[1,30]},{4:[1,133]},{5:134,13:[2,67],61:4,62:5,65:[2,67],66:[2,67],70:[2,67],72:[2,67],75:[2,67],77:[2,67],86:[2,67],88:[2,67],89:[2,67],97:[2,67],100:[2,67],113:[2,67],114:[2,67],115:[2,67],116:[2,67]},{2:[2,14],6:[2,14],11:[2,14],15:[2,14],18:[2,14],34:[2,14],36:[2,14],67:[2,14],68:[2,14],73:[2,14],76:[2,14],87:[2,14],95:[2,14],96:[2,14],99:[2,14],104:[2,14],105:[2,14]},{2:[1,136],6:[1,135],18:[1,137]},{6:[1,138]},{2:[2,19],6:[2,19],18:[2,19]},{2:[2,20],6:[2,20],18:[2,20]},{13:[1,66],23:[1,112],29:61,30:139,31:140,34:[1,141],36:[1,142],39:63,47:33,82:62,86:[1,67],88:[1,32],89:[1,34],95:[2,151],99:[2,151],100:[1,31],102:26,109:60,110:[1,64],111:65,113:[1,27],114:[1,28],115:[1,29],116:[1,30]},{33:143,95:[1,144],99:[1,54]},{13:[1,66],15:[1,75],29:61,32:145,36:[1,80],39:63,47:33,82:96,86:[1,67],88:[1,32],89:[1,34],94:[1,79],98:78,99:[1,77],100:[1,31],102:26,103:76,104:[1,55],105:[1,56],108:94,109:95,110:[1,64],111:65,113:[1,27],114:[1,28],115:[1,29],116:[1,30]},{39:146,113:[1,27],114:[1,28],115:[1,29],116:[1,30]},{39:147,113:[1,27],114:[1,28],115:[1,29],116:[1,30]},{39:148,113:[1,27],114:[1,28],115:[1,29],116:[1,30]},{2:[2,73],6:[2,73],11:[2,73],15:[2,73],18:[2,73],34:[2,73],36:[2,73],67:[2,73],68:[2,73],73:[2,73],87:[2,73],95:[2,73],96:[2,73],99:[2,73],104:[2,73],105:[2,73]},{13:[1,66],23:[1,112],29:61,30:149,39:63,47:33,82:62,86:[1,67],88:[1,32],89:[1,34],100:[1,31],102:26,109:92,110:[1,64],111:65,113:[1,27],114:[1,28],115:[1,29],116:[1,30]},{5:150,13:[2,67],61:4,62:5,65:[2,67],66:[2,67],70:[2,67],72:[2,67],75:[2,67],77:[2,67],86:[2,67],88:[2,67],89:[2,67],97:[2,67],100:[2,67],113:[2,67],114:[2,67],115:[2,67],116:[2,67]},{2:[2,90],6:[2,90],11:[2,90],13:[2,90],15:[2,90],18:[2,90],34:[2,90],36:[2,90],67:[2,90],68:[2,90],73:[2,90],86:[2,90],87:[2,90],88:[2,90],89:[2,90],95:[2,90],96:[2,90],97:[2,90],99:[2,90],100:[2,90],104:[2,90],105:[2,90],113:[2,90],114:[2,90],115:[2,90],116:[2,90]},{5:83,13:[2,67],61:4,62:5,65:[2,67],66:[2,67],70:[2,67],72:[2,67],75:[2,67],77:[2,67],85:151,86:[2,67],88:[2,67],89:[2,67],97:[2,67],100:[2,67],113:[2,67],114:[2,67],115:[2,67],116:[2,67]},{2:[2,134],6:[2,134],11:[2,134],13:[2,134],15:[2,134],18:[2,134],34:[2,134],36:[2,134],67:[2,134],68:[2,134],73:[2,134],86:[2,134],87:[2,134],88:[2,134],89:[2,134],95:[2,134],96:[2,134],97:[2,134],99:[2,134],100:[2,134],104:[2,134],105:[2,134],113:[2,134],114:[2,134],115:[2,134],116:[2,134]},{2:[2,127],6:[2,127],11:[2,127],13:[2,127],15:[2,127],18:[2,127],23:[2,127],34:[2,127],36:[2,127],67:[2,127],68:[2,127],71:[2,127],73:[2,127],86:[2,127],87:[2,127],88:[2,127],89:[2,127],95:[2,127],96:[2,127],97:[2,127],99:[2,127],100:[2,127],104:[2,127],105:[2,127],110:[2,127],113:[2,127],114:[2,127],115:[2,127],116:[2,127]},{15:[2,130],36:[2,130]},{2:[2,132],6:[2,132],11:[2,132],13:[2,132],15:[2,132],18:[2,132],23:[2,132],34:[2,132],36:[2,132],67:[2,132],68:[2,132],71:[2,132],73:[2,132],86:[2,132],87:[2,132],88:[2,132],89:[2,132],95:[2,132],96:[2,132],97:[2,132],99:[2,132],100:[2,132],104:[2,132],105:[2,132],110:[2,132],113:[2,132],114:[2,132],115:[2,132],116:[2,132]},{2:[2,123],6:[2,123],11:[2,123],13:[2,123],15:[2,123],18:[2,123],23:[2,123],34:[2,123],36:[2,123],67:[2,123],68:[2,123],71:[2,123],73:[2,123],86:[2,123],87:[2,123],88:[2,123],89:[2,123],95:[2,123],96:[2,123],97:[2,123],99:[2,123],100:[2,123],104:[2,123],105:[2,123],110:[2,123],113:[2,123],114:[2,123],115:[2,123],116:[2,123]},{2:[2,121],6:[2,121],11:[2,121],13:[2,121],15:[2,121],18:[2,121],23:[2,121],34:[2,121],36:[2,121],67:[2,121],68:[2,121],71:[2,121],73:[2,121],86:[2,121],87:[2,121],88:[2,121],89:[2,121],95:[2,121],96:[2,121],97:[2,121],99:[2,121],100:[2,121],104:[2,121],105:[2,121],110:[2,121],113:[2,121],114:[2,121],115:[2,121],116:[2,121]},{2:[2,94],6:[2,94],11:[2,94],13:[2,94],15:[2,94],18:[2,94],34:[2,94],36:[2,94],67:[2,94],68:[2,94],73:[2,94],86:[2,94],87:[2,94],88:[2,94],89:[2,94],95:[2,94],96:[2,94],97:[2,94],99:[2,94],100:[2,94],104:[2,94],105:[2,94],113:[2,94],114:[2,94],115:[2,94],116:[2,94]},{5:152,13:[2,67],61:4,62:5,65:[2,67],66:[2,67],70:[2,67],72:[2,67],75:[2,67],77:[2,67],86:[2,67],88:[2,67],89:[2,67],97:[2,67],100:[2,67],113:[2,67],114:[2,67],115:[2,67],116:[2,67]},{2:[2,142],6:[2,142],11:[2,142],15:[2,142],18:[2,142],34:[2,142],36:[2,142],67:[2,142],68:[2,142],73:[2,142],87:[2,142],95:[2,142],96:[2,142],99:[2,142],104:[2,142],105:[2,142]},{2:[2,140],6:[2,140],11:[2,140],13:[2,140],15:[2,140],18:[2,140],34:[2,140],36:[2,140],67:[2,140],68:[2,140],71:[2,140],73:[2,140],87:[2,140],88:[2,140],89:[2,140],95:[2,140],96:[2,140],99:[2,140],100:[2,140],104:[2,140],105:[2,140]},{13:[2,109],65:[2,109],66:[2,109],70:[2,109],72:[2,109],75:[2,109],77:[2,109],86:[2,109],88:[2,109],89:[2,109],97:[2,109],100:[2,109],113:[2,109],114:[2,109],115:[2,109],116:[2,109]},{13:[2,111],65:[2,111],66:[2,111],70:[2,111],72:[2,111],75:[2,111],77:[2,111],86:[2,111],88:[2,111],89:[2,111],97:[2,111],100:[2,111],113:[2,111],114:[2,111],115:[2,111],116:[2,111]},{2:[2,113],6:[2,113],13:[2,113],18:[2,113],36:[2,113],65:[2,113],66:[2,113],70:[2,113],72:[2,113],75:[2,113],77:[2,113],86:[2,113],88:[2,113],89:[2,113],97:[2,113],100:[2,113],110:[2,113],113:[2,113],114:[2,113],115:[2,113],116:[2,113]},{68:[1,153]},{2:[2,70],6:[2,70],11:[2,70],15:[2,70],18:[2,70],34:[2,70],36:[2,70],67:[2,70],68:[2,70],73:[2,70],87:[2,70],95:[2,70],96:[2,70],99:[2,70],104:[2,70],105:[2,70]},{13:[2,156],15:[2,156],23:[2,156],36:[2,156],71:[2,156],86:[2,156],88:[2,156],89:[2,156],95:[2,156],99:[2,156],100:[2,156],110:[2,156],113:[2,156],114:[2,156],115:[2,156],116:[2,156]},{13:[1,66],29:61,32:155,39:63,47:33,82:96,86:[1,67],88:[1,32],89:[1,34],100:[1,31],102:26,108:94,109:95,110:[1,64],111:65,112:154,113:[1,27],114:[1,28],115:[1,29],116:[1,30]},{13:[1,66],15:[2,148],23:[2,148],29:61,36:[2,148],39:63,47:33,71:[2,148],82:62,86:[1,67],88:[1,32],89:[1,34],95:[2,148],99:[2,148],100:[1,31],102:26,109:92,110:[1,64],111:65,113:[1,27],114:[1,28],115:[1,29],116:[1,30]},{13:[1,66],29:61,32:158,39:63,47:33,74:156,79:157,82:96,86:[1,67],88:[1,32],89:[1,34],100:[1,31],102:26,108:94,109:95,110:[1,64],111:65,113:[1,27],114:[1,28],115:[1,29],116:[1,30]},{2:[2,72],6:[2,72],11:[2,72],15:[2,72],18:[2,72],34:[2,72],36:[2,72],67:[2,72],68:[2,72],73:[2,72],87:[2,72],95:[2,72],96:[2,72],99:[2,72],104:[2,72],105:[2,72]},{2:[2,15],6:[2,15],11:[2,15],15:[2,15],18:[2,15],34:[2,15],36:[2,15],67:[2,15],68:[2,15],73:[2,15],76:[2,15],87:[2,15],95:[2,15],96:[2,15],99:[2,15],104:[2,15],105:[2,15]},{6:[1,159]},{13:[1,106],20:160,28:103,29:104,32:105,38:[1,107],39:63,41:[1,108],42:[1,109],47:33,82:96,86:[1,67],88:[1,32],89:[1,34],100:[1,31],102:26,108:94,109:95,110:[1,64],111:65,113:[1,27],114:[1,28],115:[1,29],116:[1,30]},{2:[2,16],6:[2,16],11:[2,16],15:[2,16],18:[2,16],34:[2,16],36:[2,16],67:[2,16],68:[2,16],73:[2,16],76:[2,16],87:[2,16],95:[2,16],96:[2,16],99:[2,16],104:[2,16],105:[2,16]},{2:[2,21],6:[2,21],18:[2,21]},{13:[1,66],23:[1,112],29:61,30:161,39:63,47:33,82:62,86:[1,67],88:[1,32],89:[1,34],100:[1,31],102:26,109:92,110:[1,64],111:65,113:[1,27],114:[1,28],115:[1,29],116:[1,30]},{13:[1,41],35:162,43:45,49:38,53:42,88:[1,44],89:[1,46],100:[1,43],101:40,106:39,107:37},{13:[1,72],29:164,37:163,100:[1,31]},{13:[1,66],29:61,32:165,39:63,47:33,82:96,86:[1,67],88:[1,32],89:[1,34],100:[1,31],102:26,108:94,109:95,110:[1,64],111:65,113:[1,27],114:[1,28],115:[1,29],116:[1,30]},{100:[1,89]},{15:[1,130],33:166,36:[1,131],95:[1,144],99:[1,54]},{33:169,40:167,92:168,93:170,94:[1,172],95:[1,171],99:[1,54]},{33:169,40:173,92:168,93:170,94:[1,172],95:[1,171],99:[1,54]},{33:169,40:174,92:168,93:170,94:[1,172],95:[1,171],99:[1,54]},{2:[2,74],6:[2,74],11:[2,74],15:[2,74],18:[2,74],34:[2,74],36:[2,74],67:[2,74],68:[2,74],73:[2,74],87:[2,74],95:[2,74],96:[2,74],99:[2,74],104:[2,74],105:[2,74]},{2:[2,27],6:[2,27],11:[1,175],15:[2,27],18:[2,27],34:[2,27],36:[2,27],67:[2,27],68:[2,27],73:[2,27],87:[2,27],95:[2,27],96:[2,27],99:[2,27],104:[2,27],105:[2,27]},{15:[1,176],36:[1,122]},{15:[2,95],36:[2,95],87:[2,95]},{5:177,13:[2,67],61:4,62:5,65:[2,67],66:[2,67],70:[2,67],72:[2,67],75:[2,67],77:[2,67],86:[2,67],88:[2,67],89:[2,67],97:[2,67],100:[2,67],113:[2,67],114:[2,67],115:[2,67],116:[2,67]},{15:[1,178],36:[1,179]},{15:[2,159],36:[2,159]},{6:[1,180],18:[1,181]},{6:[2,80],18:[2,80]},{71:[1,182]},{2:[2,17],6:[2,17],11:[2,17],15:[2,17],18:[2,17],34:[2,17],36:[2,17],67:[2,17],68:[2,17],73:[2,17],76:[2,17],87:[2,17],95:[2,17],96:[2,17],99:[2,17],104:[2,17],105:[2,17]},{2:[2,18],6:[2,18],18:[2,18]},{2:[2,22],6:[2,22],18:[2,22]},{2:[2,25],6:[2,25],18:[2,25]},{34:[1,183],36:[1,184]},{34:[2,78],36:[2,78]},{23:[1,112],30:185},{13:[1,66],29:61,32:186,39:63,47:33,82:96,86:[1,67],88:[1,32],89:[1,34],100:[1,31],102:26,108:94,109:95,110:[1,64],111:65,113:[1,27],114:[1,28],115:[1,29],116:[1,30]},{2:[2,29],6:[2,29],18:[2,29],36:[1,187]},{2:[2,102],6:[2,102],18:[2,102],36:[2,102]},{2:[2,103],6:[2,103],18:[2,103],36:[2,103]},{2:[2,104],6:[2,104],18:[2,104],36:[2,104]},{89:[1,188],100:[1,89]},{2:[2,105],6:[2,105],18:[2,105],36:[2,105]},{2:[2,30],6:[2,30],18:[2,30],36:[1,187]},{2:[2,31],6:[2,31],18:[2,31],36:[1,187]},{4:[1,70],26:189},{2:[2,93],6:[2,93],11:[2,93],13:[2,93],15:[2,93],18:[2,93],34:[2,93],36:[2,93],67:[2,93],68:[2,93],73:[2,93],86:[2,93],87:[2,93],88:[2,93],89:[2,93],95:[2,93],96:[2,93],97:[2,93],99:[2,93],100:[2,93],104:[2,93],105:[2,93],113:[2,93],114:[2,93],115:[2,93],116:[2,93]},{2:[2,68],6:[2,68],11:[2,68],15:[2,68],18:[2,68],34:[2,68],36:[2,68],67:[2,68],68:[2,68],73:[2,68],87:[2,68],95:[2,68],96:[2,68],99:[2,68],104:[2,68],105:[2,68]},{13:[2,157],15:[2,157],23:[2,157],36:[2,157],71:[2,157],86:[2,157],88:[2,157],89:[2,157],95:[2,157],99:[2,157],100:[2,157],110:[2,157],113:[2,157],114:[2,157],115:[2,157],116:[2,157]},{13:[1,66],29:61,32:190,39:63,47:33,82:96,86:[1,67],88:[1,32],89:[1,34],100:[1,31],102:26,108:94,109:95,110:[1,64],111:65,113:[1,27],114:[1,28],115:[1,29],116:[1,30]},{2:[2,71],6:[2,71],11:[2,71],15:[2,71],18:[2,71],34:[2,71],36:[2,71],67:[2,71],68:[2,71],73:[2,71],87:[2,71],95:[2,71],96:[2,71],99:[2,71],104:[2,71],105:[2,71]},{13:[1,66],29:61,32:158,39:63,47:33,79:191,82:96,86:[1,67],88:[1,32],89:[1,34],100:[1,31],102:26,108:94,109:95,110:[1,64],111:65,113:[1,27],114:[1,28],115:[1,29],116:[1,30]},{5:192,13:[2,67],61:4,62:5,65:[2,67],66:[2,67],70:[2,67],72:[2,67],75:[2,67],77:[2,67],86:[2,67],88:[2,67],89:[2,67],97:[2,67],100:[2,67],113:[2,67],114:[2,67],115:[2,67],116:[2,67]},{13:[1,41],35:193,43:45,49:38,53:42,88:[1,44],89:[1,46],100:[1,43],101:40,106:39,107:37},{13:[1,72],29:194,100:[1,31]},{2:[2,23],6:[2,23],18:[2,23]},{15:[1,195]},{33:169,92:196,93:170,94:[1,172],95:[1,171],99:[1,54]},{95:[1,197]},{2:[2,28],6:[2,28],11:[2,28],15:[2,28],18:[2,28],34:[2,28],36:[2,28],67:[2,28],68:[2,28],73:[2,28],87:[2,28],95:[2,28],96:[2,28],99:[2,28],104:[2,28],105:[2,28]},{15:[2,158],36:[2,158]},{6:[2,79],18:[2,79]},{6:[2,81],18:[2,81]},{2:[2,26],6:[2,26],18:[2,26]},{34:[2,77],36:[2,77]},{13:[1,66],29:61,31:198,39:63,47:33,82:62,86:[1,67],88:[1,32],89:[1,34],100:[1,31],102:26,109:60,110:[1,64],111:65,113:[1,27],114:[1,28],115:[1,29],116:[1,30]},{2:[2,101],6:[2,101],18:[2,101],36:[2,101]},{2:[2,106],6:[2,106],18:[2,106],36:[2,106]},{13:[1,66],23:[1,112],29:61,30:199,39:63,47:33,82:62,86:[1,67],88:[1,32],89:[1,34],100:[1,31],102:26,109:92,110:[1,64],111:65,113:[1,27],114:[1,28],115:[1,29],116:[1,30]},{2:[2,24],6:[2,24],18:[2,24]}],
defaultActions: {35:[2,1]},
parseError: function parseError(str, hash) {
    if (hash.recoverable) {
        this.trace(str);
    } else {
        throw new Error(str);
    }
},
parse: function parse(input) {
    var self = this,
        stack = [0],
        vstack = [null], // semantic value stack
        lstack = [], // location stack
        table = this.table,
        yytext = '',
        yylineno = 0,
        yyleng = 0,
        recovering = 0,
        TERROR = 2,
        EOF = 1;

    var args = lstack.slice.call(arguments, 1);

    //this.reductionCount = this.shiftCount = 0;

    this.lexer.setInput(input);
    this.lexer.yy = this.yy;
    this.yy.lexer = this.lexer;
    this.yy.parser = this;
    if (typeof this.lexer.yylloc == 'undefined') {
        this.lexer.yylloc = {};
    }
    var yyloc = this.lexer.yylloc;
    lstack.push(yyloc);

    var ranges = this.lexer.options && this.lexer.options.ranges;

    if (typeof this.yy.parseError === 'function') {
        this.parseError = this.yy.parseError;
    } else {
        this.parseError = Object.getPrototypeOf(this).parseError;
    }

    function popStack (n) {
        stack.length = stack.length - 2 * n;
        vstack.length = vstack.length - n;
        lstack.length = lstack.length - n;
    }

    function lex() {
        var token;
        token = self.lexer.lex() || EOF; // $end = 1
        // if token isn't its numeric value, convert
        if (typeof token !== 'number') {
            token = self.symbols_[token] || token;
        }
        return token;
    }

    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;
    while (true) {
        // retreive state number from top of stack
        state = stack[stack.length - 1];

        // use default actions if available
        if (this.defaultActions[state]) {
            action = this.defaultActions[state];
        } else {
            if (symbol === null || typeof symbol == 'undefined') {
                symbol = lex();
            }
            // read action for current state and first input
            action = table[state] && table[state][symbol];
        }

_handle_error:
        // handle parse error
        if (typeof action === 'undefined' || !action.length || !action[0]) {
            var error_rule_depth;
            var errStr = '';

            // Return the rule stack depth where the nearest error rule can be found.
            // Return FALSE when no error recovery rule was found.
            function locateNearestErrorRecoveryRule(state) {
                var stack_probe = stack.length - 1;
                var depth = 0;

                // try to recover from error
                for(;;) {
                    // check for error recovery rule in this state
                    if ((TERROR.toString()) in table[state]) {
                        return depth;
                    }
                    if (state === 0 || stack_probe < 2) {
                        return false; // No suitable error recovery rule available.
                    }
                    stack_probe -= 2; // popStack(1): [symbol, action]
                    state = stack[stack_probe];
                    ++depth;
                }
            }

            if (!recovering) {
                // first see if there's any chance at hitting an error recovery rule:
                error_rule_depth = locateNearestErrorRecoveryRule(state);

                // Report error
                expected = [];
                for (p in table[state]) {
                    if (this.terminals_[p] && p > TERROR) {
                        expected.push("'"+this.terminals_[p]+"'");
                    }
                }
                if (this.lexer.showPosition) {
                    errStr = 'Parse error on line '+(yylineno+1)+":\n"+this.lexer.showPosition()+"\nExpecting "+expected.join(', ') + ", got '" + (this.terminals_[symbol] || symbol)+ "'";
                } else {
                    errStr = 'Parse error on line '+(yylineno+1)+": Unexpected " +
                                  (symbol == EOF ? "end of input" :
                                              ("'"+(this.terminals_[symbol] || symbol)+"'"));
                }
                this.parseError(errStr, {
                    text: this.lexer.match,
                    token: this.terminals_[symbol] || symbol,
                    line: this.lexer.yylineno,
                    loc: yyloc,
                    expected: expected,
                    recoverable: (error_rule_depth !== false)
                });
            } else if (preErrorSymbol !== EOF) {
                error_rule_depth = locateNearestErrorRecoveryRule(state);
            }

            // just recovered from another error
            if (recovering == 3) {
                if (symbol === EOF || preErrorSymbol === EOF) {
                    throw new Error(errStr || 'Parsing halted while starting to recover from another error.');
                }

                // discard current lookahead and grab another
                yyleng = this.lexer.yyleng;
                yytext = this.lexer.yytext;
                yylineno = this.lexer.yylineno;
                yyloc = this.lexer.yylloc;
                symbol = lex();
            }

            // try to recover from error
            if (error_rule_depth === false) {
                throw new Error(errStr || 'Parsing halted. No suitable error recovery rule available.');
            }
            popStack(error_rule_depth);

            preErrorSymbol = (symbol == TERROR ? null : symbol); // save the lookahead token
            symbol = TERROR;         // insert generic error symbol as new lookahead
            state = stack[stack.length-1];
            action = table[state] && table[state][TERROR];
            recovering = 3; // allow 3 real symbols to be shifted before reporting a new error
        }

        // this shouldn't happen, unless resolve defaults are off
        if (action[0] instanceof Array && action.length > 1) {
            throw new Error('Parse Error: multiple actions possible at state: '+state+', token: '+symbol);
        }

        switch (action[0]) {
            case 1: // shift
                //this.shiftCount++;

                stack.push(symbol);
                vstack.push(this.lexer.yytext);
                lstack.push(this.lexer.yylloc);
                stack.push(action[1]); // push state
                symbol = null;
                if (!preErrorSymbol) { // normal execution/no error
                    yyleng = this.lexer.yyleng;
                    yytext = this.lexer.yytext;
                    yylineno = this.lexer.yylineno;
                    yyloc = this.lexer.yylloc;
                    if (recovering > 0) {
                        recovering--;
                    }
                } else {
                    // error just occurred, resume old lookahead f/ before error
                    symbol = preErrorSymbol;
                    preErrorSymbol = null;
                }
                break;

            case 2:
                // reduce
                //this.reductionCount++;

                len = this.productions_[action[1]][1];

                // perform semantic action
                yyval.$ = vstack[vstack.length-len]; // default to $$ = $1
                // default location, uses first token for firsts, last for lasts
                yyval._$ = {
                    first_line: lstack[lstack.length-(len||1)].first_line,
                    last_line: lstack[lstack.length-1].last_line,
                    first_column: lstack[lstack.length-(len||1)].first_column,
                    last_column: lstack[lstack.length-1].last_column
                };
                if (ranges) {
                  yyval._$.range = [lstack[lstack.length-(len||1)].range[0], lstack[lstack.length-1].range[1]];
                }
                r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, this.yy, action[1], vstack, lstack].concat(args));

                if (typeof r !== 'undefined') {
                    return r;
                }

                // pop off stack
                if (len) {
                    stack = stack.slice(0,-1*len*2);
                    vstack = vstack.slice(0, -1*len);
                    lstack = lstack.slice(0, -1*len);
                }

                stack.push(this.productions_[action[1]][0]);    // push nonterminal (reduce)
                vstack.push(yyval.$);
                lstack.push(yyval._$);
                // goto new state = table[STATE][NONTERMINAL]
                newState = table[stack[stack.length-2]][stack[stack.length-1]];
                stack.push(newState);
                break;

            case 3:
                // accept
                return true;
        }

    }

    return true;
}};

function Parser () {
  this.yy = {};
}
Parser.prototype = parser;parser.Parser = Parser;
return new Parser;
})();


if (typeof require !== 'undefined' && typeof exports !== 'undefined') {
exports.parser = LichParser;
exports.Parser = LichParser.Parser;
exports.parse = function () { return LichParser.parse.apply(LichParser, arguments); };
exports.main = function commonjsMain(args) {
    if (!args[1]) {
        console.log('Usage: '+args[0]+' FILE');
        process.exit(1);
    }
    var source = require('fs').readFileSync(require('path').normalize(args[1]), "utf8");
    return exports.parser.parse(source);
};
if (typeof module !== 'undefined' && require.main === module) {
  exports.main(process.argv.slice(1));
}
}