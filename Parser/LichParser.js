/* parser generated by jison 0.4.13 */
/*
  Returns a Parser object of the following structure:

  Parser: {
    yy: {}
  }

  Parser.prototype: {
    yy: {},
    trace: function(),
    symbols_: {associative list: name ==> number},
    terminals_: {associative list: number ==> name},
    productions_: [...],
    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),
    table: [...],
    defaultActions: {...},
    parseError: function(str, hash),
    parse: function(input),

    lexer: {
        EOF: 1,
        parseError: function(str, hash),
        setInput: function(input),
        input: function(),
        unput: function(str),
        more: function(),
        less: function(n),
        pastInput: function(),
        upcomingInput: function(),
        showPosition: function(),
        test_match: function(regex_match_array, rule_index),
        next: function(),
        lex: function(),
        begin: function(condition),
        popState: function(),
        _currentRules: function(),
        topState: function(),
        pushState: function(condition),

        options: {
            ranges: boolean           (optional: true ==> token location info will include a .range[] member)
            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)
            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)
        },

        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),
        rules: [...],
        conditions: {associative list: name ==> set},
    }
  }


  token location info (@$, _$, etc.): {
    first_line: n,
    last_line: n,
    first_column: n,
    last_column: n,
    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)
  }


  the parseError function receives a 'hash' object with these members for lexer and parser errors: {
    text:        (matched text)
    token:       (the produced terminal token, if any)
    line:        (yylineno)
  }
  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {
    loc:         (yylloc)
    expected:    (string describing the set of expected tokens)
    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)
  }
*/
var LichParser = (function(){
var parser = {trace: function trace() { },
yy: {},
symbols_: {"error":2,"start_":3,"{":4,"exps":5,"}":6,"EOF":7,"module_":8,"module":9,"modid":10,"where":11,"body":12,"(":13,"exports":14,")":15,"topdecls":16,"topdecls_nonempty":17,";":18,"topdecl":19,"decl":20,"data":21,"simpletype":22,"=":23,"constrs":24,"impdecl":25,"decls":26,"list_decl_comma_1":27,"decl_fixity":28,"var":29,"rhs":30,"apats":31,"pat":32,"varop":33,"::":34,"type":35,",":36,"vars":37,"exp":38,"infixl":39,"literal":40,"op_list_1_comma":41,"infixr":42,"infix":43,"tycon":44,"tyvars":45,"|":46,"constr":47,"con":48,"atypes":49,"atype":50,"exports_inner":51,"export":52,"qvar":53,"qtycon":54,"..":55,"list_cname_0_comma":56,"import":57,"imports":58,"hiding":59,"list_import_1_comma":60,"import_a":61,"infixexp":62,"infixexpLR":63,"lexp":64,"qop":65,"-":66,"if":67,"then":68,"else":69,"fexp":70,"\\":71,"->":72,"case":73,"of":74,"alts":75,"let":76,"in":77,"aexp":78,"alt":79,"list_cname_1_comma":80,"cname":81,"gcon":82,"tuple":83,"listexp":84,"list_exp_1_comma":85,"[":86,"]":87,"qconid":88,"conid":89,"qvarop":90,"qconop":91,"op":92,"conop":93,"consym":94,"`":95,"qvarsym":96,"qvarid":97,"gconsym":98,"varsym":99,"varid":100,"tyvar":101,"qcon":102,"list_1_comma":103,":":104,"qconsym":105,"gtycon":106,"apptype":107,"lpat":108,"apat":109,"_":110,"tuple_pat":111,"pat_list_1_comma":112,"integer":113,"string":114,"char":115,"float":116,"$accept":0,"$end":1},
terminals_: {2:"error",4:"{",6:"}",7:"EOF",9:"module",11:"where",13:"(",15:")",18:";",21:"data",23:"=",34:"::",36:",",39:"infixl",42:"infixr",43:"infix",46:"|",55:"..",57:"import",59:"hiding",66:"-",67:"if",68:"then",69:"else",71:"\\",72:"->",73:"case",74:"of",76:"let",77:"in",86:"[",87:"]",88:"qconid",89:"conid",94:"consym",95:"`",96:"qvarsym",97:"qvarid",99:"varsym",100:"varid",104:":",105:"qconsym",110:"_",113:"integer",114:"string",115:"char",116:"float"},
productions_: [0,[3,4],[8,4],[8,7],[8,1],[12,3],[12,0],[16,1],[17,3],[17,1],[19,1],[19,2],[19,4],[19,1],[26,2],[26,3],[26,3],[26,4],[27,3],[27,1],[20,1],[20,2],[20,3],[20,4],[20,7],[20,3],[20,5],[30,2],[30,4],[28,3],[28,3],[28,3],[22,1],[22,2],[24,3],[24,1],[47,1],[47,2],[49,2],[49,1],[14,1],[14,2],[51,3],[51,1],[52,1],[52,2],[52,1],[52,4],[52,4],[25,2],[25,5],[25,6],[58,1],[58,2],[58,1],[58,0],[60,3],[60,1],[61,1],[61,1],[61,4],[61,4],[5,3],[5,1],[38,3],[38,1],[62,2],[63,3],[63,2],[63,0],[64,6],[64,1],[64,4],[64,6],[64,4],[64,3],[64,4],[64,5],[64,8],[70,1],[70,2],[37,3],[37,1],[75,3],[75,1],[79,3],[56,1],[56,0],[80,3],[80,1],[81,1],[78,1],[78,1],[78,1],[78,3],[78,1],[78,1],[83,5],[84,3],[85,3],[85,1],[10,1],[10,1],[65,1],[65,1],[41,3],[41,1],[92,1],[92,1],[93,1],[93,3],[90,1],[90,1],[90,3],[91,1],[91,3],[33,1],[33,3],[45,2],[45,1],[101,1],[44,1],[54,1],[54,1],[48,1],[48,3],[102,1],[102,3],[102,1],[82,2],[82,2],[82,3],[82,1],[103,1],[103,2],[29,1],[29,3],[53,1],[53,3],[53,1],[98,1],[98,1],[50,1],[50,1],[50,3],[35,1],[35,3],[107,2],[107,1],[106,1],[32,1],[108,1],[108,2],[31,1],[31,2],[109,1],[109,1],[109,1],[109,1],[109,1],[109,3],[111,5],[112,3],[112,1],[40,1],[40,1],[40,1],[40,1]],
performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {
/* this == yyval */

var $0 = $$.length - 1;
switch (yystate) {
case 1: return $$[$0-2]; 
break;
case 2:this.$ = {name: "module", modid: $$[$0-2], body: $$[$0], pos: this._$}; 
break;
case 3:this.$ = {name: "module", modid: $$[$0-5], exports: $$[$0-3], body: $$[$0], pos: this._$}; 
break;
case 4:this.$ = {name: "module", modid: new Lich.ModName("Main"), body: $$[$0], pos:this._$}; 
break;
case 5: 
        var imps = [], decs = [], atdecs = false;
        for (var i = 0; i < $$[$0-1].length; i++) {
            if ($$[$0-1][i].name == "impdecl" && !atdecs) {
                imps.push($$[$0-1][i]);
            } else if ($$[$0-1][i].name == "impdecl" && atdecs) {
                throw new Error("Parse error: import declaration in statement block at line " + $$[$0-1][i].pos.first_line);
            } else {
                atdecs = true;
                decs.push($$[$0-1][i]);
            }
        }
        
        // add Prelude as an import if not explicitly imported
        var prelude_imported = false;
        for(i=0 ; i<imps.length ; i++){
      if( imps[i].modid == "Prelude" ){
          prelude_imported = true;
          break;
            }
        }
        if( ! prelude_imported ){
            imps.push({name: "impdecl", modid: new Lich.ModName("Prelude")});
        }

        this.$ = {name: "body", impdecls: imps, topdecls: decs, pos:this._$}; 
break;
case 6:this.$ = {name: "body", impdecls: [], topdecls: [], pos:this._$}; 
break;
case 7: this.$ = $$[$0]; 
break;
case 8: $$[$0-2].push($$[$0]); this.$ = $$[$0-2]; 
break;
case 9: this.$ = [$$[$0]]; 
break;
case 10:this.$ = {name: "topdecl-decl", decl: $$[$0], pos: this._$};
break;
case 11:this.$ = {name: "topdecl-data", typ: $$[$0], constrs: [], pos: this._$};
break;
case 12:this.$ = {name: "topdecl-data", typ: $$[$0-2], constrs: $$[$0], pos: this._$};
break;
case 13:this.$ = $$[$0];
break;
case 14: this.$ = []; 
break;
case 15: this.$ = $$[$0-1]; 
break;
case 16: this.$ = []; 
break;
case 17: this.$ = $$[$0-2]; 
break;
case 18: ($$[$0-2]).push($$[$0]); this.$ = $$[$0-2]; 
break;
case 19: this.$ = [$$[$0]]; 
break;
case 20:this.$ = $$[$0];
break;
case 21:this.$ = {name:"decl-fun", ident: $$[$0-1], args: [], rhs: $$[$0], pos: this._$};
break;
case 22:this.$ = {name:"decl-fun", ident: $$[$0-2], args: $$[$0-1], rhs: $$[$0], pos: this._$};
break;
case 23:this.$ = {name:"decl-fun", ident: $$[$0-2], args: [$$[$0-3],$$[$0-1]], rhs: $$[$0], pos: this._$, orig: "infix"};
break;
case 24:this.$ = {name:"decl-fun", ident: $$[$0-4], args: [$$[$0-5],$$[$0-3]].concat($$[$0-1]), rhs: $$[$0], pos: this._$, orig: "infix"};
break;
case 25:this.$ = {name:"type-signature",vars:[$$[$0-2]],sig:$$[$0],pos:this._$};
break;
case 26:this.$ = {name:"type-signature",vars:[$$[$0-4]].concat($$[$0-2]),sig:$$[$0],pos:this._$};
break;
case 27:this.$ = $$[$0];
break;
case 28:this.$ = {name: "fun-where", exp: $$[$0-2], decls: $$[$0], pos: this._$}; 
break;
case 29: this.$ = {name: "fixity", fix: "leftfix", num: $$[$0-1], ops: $$[$0], pos: this._$}; 
break;
case 30: this.$ = {name: "fixity", fix: "rightfix", num: $$[$0-1], ops: $$[$0], pos: this._$}; 
break;
case 31: this.$ = {name: "fixity",  fix: "nonfix",num: $$[$0-1], ops: $$[$0], pos: this._$}; 
break;
case 32:this.$ = {name: "simpletype", tycon: $$[$0], vars: [], pos: this._$};
break;
case 33:this.$ = {name: "simpletype", tycon: $$[$0-1], vars: $$[$0], pos: this._$};
break;
case 34:$$[$0-2].push($$[$0]); this.$ = $$[$0-2];
break;
case 35:this.$ = [$$[$0]];
break;
case 36:this.$ = {name: "constr", dacon: $$[$0], types: [], pos: this._$};
break;
case 37:this.$ = {name: "constr", dacon: $$[$0-1], types: $$[$0], pos: this._$};
break;
case 38:$$[$0-1].push($$[$0]); this.$ = $$[$0-1];
break;
case 39:this.$ = [$$[$0]];
break;
case 40:this.$ = $$[$0];
break;
case 41:this.$ = $$[$0-1];
break;
case 42:$$[$0-2].push($$[$0]); this.$ = $$[$0-2];
break;
case 43:this.$ = [$$[$0]];
break;
case 44:this.$ = {name: "export-qvar", exp: $$[$0], pos: this._$};
break;
case 45:this.$ = {name: "export-module", exp: $$[$0], pos: this._$};
break;
case 46:this.$ = {name: "export-type-unspec", exp: $$[$0], pos: this._$};
break;
case 47:this.$ = {name: "export-type-all", exp: $$[$0-3], pos: this._$};
break;
case 48:this.$ = {name: "export-type-vars", exp: $$[$0-3], vars: $$[$0-1], pos: this._$};
break;
case 49:this.$ = {name: "impdecl", modid: $$[$0], pos: this._$};
break;
case 50:this.$ = {name: "impdecl", modid: $$[$0-3], hiding: false, imports: $$[$0-1], pos: this._$};
break;
case 51:this.$ = {name: "impdecl", modid: $$[$0-4], hiding: true, imports: $$[$0-1], pos: this._$};
break;
case 52:this.$ = $$[$0];
break;
case 53:this.$ = $$[$0-1];
break;
case 54:this.$ = [];
break;
case 55:this.$ = [];
break;
case 56:$$[$0-2].push($$[$0]); this.$ = $$[$0-2];
break;
case 57:this.$ = [$$[$0]];
break;
case 58:this.$ = {name: "import-var", varname: $$[$0], pos: this._$};
break;
case 59:this.$ = {name: "import-tycon", tycon: $$[$0], all: false, pos: this._$};
break;
case 60:this.$ = {name: "import-tycon", tycon: $$[$0-3], all: true, pos: this._$};
break;
case 61:this.$ = {name: "import-tycon", tycon: $$[$0-3], all: false, list:$$[$0-1], pos: this._$};
break;
case 62: ($$[$0-2]).push($$[$0]); this.$ = $$[$0-2]; 
break;
case 63: this.$ = [$$[$0]]; 
break;
case 64:this.$ = {name:"type-signature",exp:$$[$0-2],sig:$$[$0],pos:this._$};
break;
case 65:this.$ = $$[$0];
break;
case 66:
          ($$[$0-1]).push($$[$0]);
          if( ($$[$0-1]).length == 1 && ($$[$0-1])[0].name=="infixexp" ){
                  this.$ = ($$[$0-1])[0];
          } else {
              this.$ = {name:"infixexp",exps:$$[$0-1],pos:this._$};
          }
      
break;
case 67:($$[$0-2]).push($$[$0-1],$$[$0]); this.$ = $$[$0-2];
break;
case 68:($$[$0-1]).push($$[$0]);    this.$ = $$[$0];
break;
case 69:this.$ = [];
break;
case 70:this.$ = {name:"ite",e1:$$[$0-4],e2:$$[$0-2],e3:$$[$0],pos:this._$}; 
break;
case 71: this.$ = ($$[$0].length === 1) ? ($$[$0][0]) : {name:"application", exps:$$[$0],pos:this._$}; 
break;
case 72:this.$ = {name:"lambda", args: $$[$0-2], rhs: $$[$0], pos: this._$}; 
break;
case 73:this.$ = {name:"case", exp: $$[$0-4], alts: $$[$0-1], pos: this._$}; 
break;
case 74:this.$ = {name:"let", decls: $$[$0-2], exp: $$[$0], pos: this._$}; 
break;
case 75:this.$ = {name:"decl-fun", ident: $$[$0-2], args: [], rhs: $$[$0-1], pos: this._$};
break;
case 76:this.$ = {name:"decl-fun", ident: $$[$0-3], args: $$[$0-2], rhs: $$[$0-1], pos: this._$};
break;
case 77:this.$ = {name:"decl-fun", ident: $$[$0-3], args: [$$[$0-4],$$[$0-2]], rhs: $$[$0-1], pos: this._$, orig: "infix"};
break;
case 78:this.$ = {name:"decl-fun", ident: $$[$0-5], args: [$$[$0-6],$$[$0-4]].concat($$[$0-2]), rhs: $$[$0-1], pos: this._$, orig: "infix"};
break;
case 79:this.$ = [$$[$0]];
break;
case 80:($$[$0-1]).push($$[$0]); this.$ = $$[$0-1];
break;
case 81:$$[$0-2].push($$[$0]); this.$ = $$[$0-2];
break;
case 82:this.$ = [$$[$0]];
break;
case 83:$$[$0-2].push($$[$0]); this.$ = $$[$0-2];
break;
case 84:this.$ = [$$[$0]];
break;
case 85:this.$ = {name:"alt", pat: $$[$0-2], exp: $$[$0]};
break;
case 86:this.$ = $$[$0];
break;
case 87:this.$ = [];
break;
case 88:$$[$0-2].push($$[$0]); this.$ = $$[$0-2];
break;
case 89:this.$ = [$$[$0]];
break;
case 90:this.$ = $$[$0];
break;
case 91:this.$ = $$[$0];
break;
case 92:this.$ = $$[$0];
break;
case 93:this.$ = $$[$0];
break;
case 94:this.$ = $$[$0-1];
break;
case 95:this.$ = $$[$0];
break;
case 96:this.$ = $$[$0];
break;
case 97:$$[$0-1].unshift($$[$0-3]); this.$ = {name: "tuple", members: $$[$0-1], pos: this._$}; 
break;
case 98: this.$ = {name: "listexp", members: $$[$0-1], pos: this._$}; 
break;
case 99:$$[$0-2].push($$[$0]); this.$ = $$[$0-2]; 
break;
case 100:this.$ = [$$[$0]];
break;
case 101:this.$ = new Lich.ModName($$[$0], this._$, yy.lexer.previous.qual);
break;
case 102:this.$ = new Lich.ModName($$[$0], this._$);
break;
case 103:this.$ = {name: "qop", id: $$[$0], pos: this._$};
break;
case 104:this.$ = {name: "qop", id: $$[$0], pos: this._$};
break;
case 105: $$[$0-2].push($$[$0]); this.$ = $$[$0-2]; 
break;
case 106: this.$ = [$$[$0]]; 
break;
case 107: this.$ = $$[$0]; 
break;
case 108: this.$ = $$[$0]; 
break;
case 109: this.$ = new Lich.DaCon($$[$0], this._$, true); 
break;
case 110: this.$ = new Lich.DaCon($$[$0-1], this._$, false); 
break;
case 111:this.$ = new Lich.VarName($$[$0], this._$, true, yy.lexer.previous.qual);
break;
case 112:this.$ = $$[$0];
break;
case 113:this.$ = new Lich.VarName($$[$0-1], this._$, false, yy.lexer.previous.qual);
break;
case 114:this.$ = $$[$0];
break;
case 115:this.$ = new Lich.DaCon($$[$0-1], this._$, false, yy.lexer.previous.qual);
break;
case 116:this.$ = new Lich.VarName($$[$0], this._$, true);
break;
case 117:this.$ = new Lich.VarName($$[$0-1], this._$, false)
break;
case 118:$$[$0-1].push($$[$0]); this.$ = $$[$0-1];
break;
case 119:this.$ = [$$[$0]];
break;
case 120:this.$ = new Lich.TyVar($$[$0], this._$);
break;
case 121:this.$ = new Lich.TyCon($$[$0], this._$);
break;
case 122:this.$ = new Lich.TyCon($$[$0], this._$, yy.lexer.previous.qual);
break;
case 123:this.$ = $$[$0];
break;
case 124:this.$ = new Lich.DaCon($$[$0], this._$, false);
break;
case 125:this.$ = new Lich.DaCon($$[$0-1], this._$, true);
break;
case 126:this.$ = new Lich.DaCon($$[$0], this._$, false, yy.lexer.previous.qual);
break;
case 127:this.$ = $$[$0-1];
break;
case 128:this.$ = $$[$0];
break;
case 129:this.$ = new Lich.UnitDaCon(this._$);
break;
case 130:this.$ = new Lich.NilDaCon(this._$);
break;
case 131:this.$ = new Lich.TupleDaCon($$[$0-1] + 1, this._$);
break;
case 132:this.$ = $$[$0];
break;
case 133:this.$ = 1;
break;
case 134:this.$ = $$[$0-1] + 1;
break;
case 135:this.$ = new Lich.VarName($$[$0], this._$, false);
break;
case 136:this.$ = new Lich.VarName($$[$0-1], this._$, true);
break;
case 137:this.$ = new Lich.VarName($$[$0], this._$, false, yy.lexer.previous.qual);
break;
case 138:this.$ = new Lich.VarName($$[$0-1], this._$, true, yy.lexer.previous.qual);
break;
case 139:this.$ = $$[$0];
break;
case 140:this.$ = new Lich.ConsDaCon(this._$);
break;
case 141:this.$ = new Lich.DaCon($$[$0], this._$, true, yy.lexer.previous.qual);
break;
case 142:this.$ = $$[$0];
break;
case 143:this.$ = $$[$0];
break;
case 144:this.$ = $$[$0-1];
break;
case 145:this.$ = $$[$0];
break;
case 146:this.$ = new Lich.FunType([$$[$0-2],$$[$0]],this._$);
break;
case 147:this.$ = new Lich.AppType($$[$0-1],$$[$0],this._$);
break;
case 148:this.$ = $$[$0];
break;
case 149:this.$ = $$[$0];
break;
case 150:this.$ = $$[$0];
break;
case 151:this.$ = $$[$0];
break;
case 152:this.$ = {name: "conpat", con: $$[$0-1], pats: $$[$0]}; 
break;
case 153:this.$ = [$$[$0]];
break;
case 154:$$[$0-1].push($$[$0]); this.$ = $$[$0-1];
break;
case 155:this.$ = $$[$0]; 
break;
case 156:this.$ = $$[$0]; 
break;
case 157:this.$ = $$[$0]; 
break;
case 158:this.$ = {name:"wildcard", pos: this._$}; 
break;
case 159:this.$ = $$[$0]; 
break;
case 160:this.$ = $$[$0-1]; 
break;
case 161:$$[$0-1].unshift($$[$0-3]); this.$ = {name: "tuple_pat", members: $$[$0-1], pos: this._$}; 
break;
case 162:$$[$0-2].push($$[$0]); this.$ = $$[$0-2]; 
break;
case 163:this.$ = [$$[$0]]; 
break;
case 164:this.$ = {name: "integer-lit", value: Number($$[$0]), pos: this._$};
break;
case 165:this.$ = {name: "string-lit", value: yytext, pos: this._$};
break;
case 166:this.$ = {name: "char-lit", value: yytext, pos: this._$};
break;
case 167:this.$ = {name: "float-lit", value: Number(yytext), pos: this._$};
break;
}
},
table: [{3:1,4:[1,2]},{1:[3]},{5:3,13:[2,69],38:4,62:5,63:6,66:[2,69],67:[2,69],71:[2,69],73:[2,69],76:[2,69],86:[2,69],88:[2,69],89:[2,69],97:[2,69],100:[2,69],113:[2,69],114:[2,69],115:[2,69],116:[2,69]},{6:[1,7],18:[1,8]},{6:[2,63],18:[2,63]},{2:[2,65],6:[2,65],11:[2,65],15:[2,65],18:[2,65],34:[1,9],36:[2,65],68:[2,65],69:[2,65],74:[2,65],87:[2,65],95:[2,65],96:[2,65],99:[2,65],104:[2,65],105:[2,65]},{13:[1,21],29:25,40:20,48:34,53:18,64:10,66:[1,11],67:[1,12],70:13,71:[1,14],73:[1,15],76:[1,16],78:17,82:19,83:22,84:23,86:[1,26],88:[1,33],89:[1,35],97:[1,24],100:[1,32],102:27,113:[1,28],114:[1,29],115:[1,30],116:[1,31]},{7:[1,36]},{13:[2,69],38:37,62:5,63:6,66:[2,69],67:[2,69],71:[2,69],73:[2,69],76:[2,69],86:[2,69],88:[2,69],89:[2,69],97:[2,69],100:[2,69],113:[2,69],114:[2,69],115:[2,69],116:[2,69]},{13:[1,43],35:38,44:47,50:40,54:44,88:[1,46],89:[1,48],100:[1,45],101:42,106:41,107:39},{2:[2,66],6:[2,66],11:[2,66],15:[2,66],18:[2,66],33:53,34:[2,66],36:[2,66],65:49,68:[2,66],69:[2,66],74:[2,66],87:[2,66],90:50,91:51,95:[1,54],96:[1,52],98:55,99:[1,56],104:[1,57],105:[1,58]},{13:[2,68],66:[2,68],67:[2,68],71:[2,68],73:[2,68],76:[2,68],86:[2,68],88:[2,68],89:[2,68],97:[2,68],100:[2,68],113:[2,68],114:[2,68],115:[2,68],116:[2,68]},{13:[2,69],38:59,62:5,63:6,66:[2,69],67:[2,69],71:[2,69],73:[2,69],76:[2,69],86:[2,69],88:[2,69],89:[2,69],97:[2,69],100:[2,69],113:[2,69],114:[2,69],115:[2,69],116:[2,69]},{2:[2,71],6:[2,71],11:[2,71],13:[1,21],15:[2,71],18:[2,71],29:25,34:[2,71],36:[2,71],40:20,48:34,53:18,68:[2,71],69:[2,71],74:[2,71],78:60,82:19,83:22,84:23,86:[1,26],87:[2,71],88:[1,33],89:[1,35],95:[2,71],96:[2,71],97:[1,24],99:[2,71],100:[1,32],102:27,104:[2,71],105:[2,71],113:[1,28],114:[1,29],115:[1,30],116:[1,31]},{13:[1,68],29:63,31:61,40:65,48:34,82:64,86:[1,69],88:[1,33],89:[1,35],100:[1,32],102:27,109:62,110:[1,66],111:67,113:[1,28],114:[1,29],115:[1,30],116:[1,31]},{13:[2,69],38:70,62:5,63:6,66:[2,69],67:[2,69],71:[2,69],73:[2,69],76:[2,69],86:[2,69],88:[2,69],89:[2,69],97:[2,69],100:[2,69],113:[2,69],114:[2,69],115:[2,69],116:[2,69]},{4:[1,75],13:[1,74],26:71,29:72,32:73,40:65,48:34,82:78,86:[1,69],88:[1,33],89:[1,35],100:[1,32],102:27,108:76,109:77,110:[1,66],111:67,113:[1,28],114:[1,29],115:[1,30],116:[1,31]},{2:[2,79],6:[2,79],11:[2,79],13:[2,79],15:[2,79],18:[2,79],34:[2,79],36:[2,79],68:[2,79],69:[2,79],74:[2,79],86:[2,79],87:[2,79],88:[2,79],89:[2,79],95:[2,79],96:[2,79],97:[2,79],99:[2,79],100:[2,79],104:[2,79],105:[2,79],113:[2,79],114:[2,79],115:[2,79],116:[2,79]},{2:[2,91],6:[2,91],11:[2,91],13:[2,91],15:[2,91],18:[2,91],34:[2,91],36:[2,91],68:[2,91],69:[2,91],74:[2,91],86:[2,91],87:[2,91],88:[2,91],89:[2,91],95:[2,91],96:[2,91],97:[2,91],99:[2,91],100:[2,91],104:[2,91],105:[2,91],113:[2,91],114:[2,91],115:[2,91],116:[2,91]},{2:[2,92],6:[2,92],11:[2,92],13:[2,92],15:[2,92],18:[2,92],34:[2,92],36:[2,92],68:[2,92],69:[2,92],74:[2,92],86:[2,92],87:[2,92],88:[2,92],89:[2,92],95:[2,92],96:[2,92],97:[2,92],99:[2,92],100:[2,92],104:[2,92],105:[2,92],113:[2,92],114:[2,92],115:[2,92],116:[2,92]},{2:[2,93],6:[2,93],11:[2,93],13:[2,93],15:[2,93],18:[2,93],34:[2,93],36:[2,93],68:[2,93],69:[2,93],74:[2,93],86:[2,93],87:[2,93],88:[2,93],89:[2,93],95:[2,93],96:[2,93],97:[2,93],99:[2,93],100:[2,93],104:[2,93],105:[2,93],113:[2,93],114:[2,93],115:[2,93],116:[2,93]},{13:[2,69],15:[1,81],36:[1,86],38:79,62:5,63:6,66:[2,69],67:[2,69],71:[2,69],73:[2,69],76:[2,69],86:[2,69],88:[2,69],89:[2,69],94:[1,85],96:[1,80],97:[2,69],98:84,99:[1,83],100:[2,69],103:82,104:[1,57],105:[1,58],113:[2,69],114:[2,69],115:[2,69],116:[2,69]},{2:[2,95],6:[2,95],11:[2,95],13:[2,95],15:[2,95],18:[2,95],34:[2,95],36:[2,95],68:[2,95],69:[2,95],74:[2,95],86:[2,95],87:[2,95],88:[2,95],89:[2,95],95:[2,95],96:[2,95],97:[2,95],99:[2,95],100:[2,95],104:[2,95],105:[2,95],113:[2,95],114:[2,95],115:[2,95],116:[2,95]},{2:[2,96],6:[2,96],11:[2,96],13:[2,96],15:[2,96],18:[2,96],34:[2,96],36:[2,96],68:[2,96],69:[2,96],74:[2,96],86:[2,96],87:[2,96],88:[2,96],89:[2,96],95:[2,96],96:[2,96],97:[2,96],99:[2,96],100:[2,96],104:[2,96],105:[2,96],113:[2,96],114:[2,96],115:[2,96],116:[2,96]},{2:[2,137],6:[2,137],11:[2,137],13:[2,137],15:[2,137],18:[2,137],34:[2,137],36:[2,137],68:[2,137],69:[2,137],74:[2,137],86:[2,137],87:[2,137],88:[2,137],89:[2,137],95:[2,137],96:[2,137],97:[2,137],99:[2,137],100:[2,137],104:[2,137],105:[2,137],113:[2,137],114:[2,137],115:[2,137],116:[2,137]},{2:[2,139],6:[2,139],11:[2,139],13:[2,139],15:[2,139],18:[2,139],34:[2,139],36:[2,139],68:[2,139],69:[2,139],74:[2,139],86:[2,139],87:[2,139],88:[2,139],89:[2,139],95:[2,139],96:[2,139],97:[2,139],99:[2,139],100:[2,139],104:[2,139],105:[2,139],113:[2,139],114:[2,139],115:[2,139],116:[2,139]},{13:[2,69],38:89,62:5,63:6,66:[2,69],67:[2,69],71:[2,69],73:[2,69],76:[2,69],85:88,86:[2,69],87:[1,87],88:[2,69],89:[2,69],97:[2,69],100:[2,69],113:[2,69],114:[2,69],115:[2,69],116:[2,69]},{2:[2,132],6:[2,132],11:[2,132],13:[2,132],15:[2,132],18:[2,132],23:[2,132],34:[2,132],36:[2,132],68:[2,132],69:[2,132],72:[2,132],74:[2,132],86:[2,132],87:[2,132],88:[2,132],89:[2,132],95:[2,132],96:[2,132],97:[2,132],99:[2,132],100:[2,132],104:[2,132],105:[2,132],110:[2,132],113:[2,132],114:[2,132],115:[2,132],116:[2,132]},{2:[2,164],6:[2,164],11:[2,164],13:[2,164],15:[2,164],18:[2,164],23:[2,164],34:[2,164],36:[2,164],68:[2,164],69:[2,164],72:[2,164],74:[2,164],86:[2,164],87:[2,164],88:[2,164],89:[2,164],94:[2,164],95:[2,164],96:[2,164],97:[2,164],99:[2,164],100:[2,164],104:[2,164],105:[2,164],110:[2,164],113:[2,164],114:[2,164],115:[2,164],116:[2,164]},{2:[2,165],6:[2,165],11:[2,165],13:[2,165],15:[2,165],18:[2,165],23:[2,165],34:[2,165],36:[2,165],68:[2,165],69:[2,165],72:[2,165],74:[2,165],86:[2,165],87:[2,165],88:[2,165],89:[2,165],94:[2,165],95:[2,165],96:[2,165],97:[2,165],99:[2,165],100:[2,165],104:[2,165],105:[2,165],110:[2,165],113:[2,165],114:[2,165],115:[2,165],116:[2,165]},{2:[2,166],6:[2,166],11:[2,166],13:[2,166],15:[2,166],18:[2,166],23:[2,166],34:[2,166],36:[2,166],68:[2,166],69:[2,166],72:[2,166],74:[2,166],86:[2,166],87:[2,166],88:[2,166],89:[2,166],94:[2,166],95:[2,166],96:[2,166],97:[2,166],99:[2,166],100:[2,166],104:[2,166],105:[2,166],110:[2,166],113:[2,166],114:[2,166],115:[2,166],116:[2,166]},{2:[2,167],6:[2,167],11:[2,167],13:[2,167],15:[2,167],18:[2,167],23:[2,167],34:[2,167],36:[2,167],68:[2,167],69:[2,167],72:[2,167],74:[2,167],86:[2,167],87:[2,167],88:[2,167],89:[2,167],94:[2,167],95:[2,167],96:[2,167],97:[2,167],99:[2,167],100:[2,167],104:[2,167],105:[2,167],110:[2,167],113:[2,167],114:[2,167],115:[2,167],116:[2,167]},{2:[2,135],6:[2,135],11:[2,135],13:[2,135],15:[2,135],18:[2,135],23:[2,135],34:[2,135],36:[2,135],68:[2,135],69:[2,135],72:[2,135],74:[2,135],86:[2,135],87:[2,135],88:[2,135],89:[2,135],95:[2,135],96:[2,135],97:[2,135],99:[2,135],100:[2,135],104:[2,135],105:[2,135],110:[2,135],113:[2,135],114:[2,135],115:[2,135],116:[2,135]},{2:[2,126],6:[2,126],11:[2,126],13:[2,126],15:[2,126],18:[2,126],23:[2,126],34:[2,126],36:[2,126],68:[2,126],69:[2,126],72:[2,126],74:[2,126],86:[2,126],87:[2,126],88:[2,126],89:[2,126],95:[2,126],96:[2,126],97:[2,126],99:[2,126],100:[2,126],104:[2,126],105:[2,126],110:[2,126],113:[2,126],114:[2,126],115:[2,126],116:[2,126]},{2:[2,128],6:[2,128],11:[2,128],13:[2,128],15:[2,128],18:[2,128],23:[2,128],34:[2,128],36:[2,128],68:[2,128],69:[2,128],72:[2,128],74:[2,128],86:[2,128],87:[2,128],88:[2,128],89:[2,128],95:[2,128],96:[2,128],97:[2,128],99:[2,128],100:[2,128],104:[2,128],105:[2,128],110:[2,128],113:[2,128],114:[2,128],115:[2,128],116:[2,128]},{2:[2,124],6:[2,124],11:[2,124],13:[2,124],15:[2,124],18:[2,124],23:[2,124],34:[2,124],36:[2,124],68:[2,124],69:[2,124],72:[2,124],74:[2,124],86:[2,124],87:[2,124],88:[2,124],89:[2,124],95:[2,124],96:[2,124],97:[2,124],99:[2,124],100:[2,124],104:[2,124],105:[2,124],110:[2,124],113:[2,124],114:[2,124],115:[2,124],116:[2,124]},{1:[2,1]},{6:[2,62],18:[2,62]},{2:[2,64],6:[2,64],11:[2,64],15:[2,64],18:[2,64],34:[2,64],36:[2,64],68:[2,64],69:[2,64],74:[2,64],87:[2,64],95:[2,64],96:[2,64],99:[2,64],104:[2,64],105:[2,64]},{2:[2,145],6:[2,145],11:[2,145],13:[1,43],15:[2,145],18:[2,145],34:[2,145],36:[2,145],44:47,50:91,54:44,68:[2,145],69:[2,145],72:[1,90],74:[2,145],87:[2,145],88:[1,46],89:[1,48],95:[2,145],96:[2,145],99:[2,145],100:[1,45],101:42,104:[2,145],105:[2,145],106:41},{2:[2,148],6:[2,148],11:[2,148],13:[2,148],15:[2,148],18:[2,148],34:[2,148],36:[2,148],68:[2,148],69:[2,148],72:[2,148],74:[2,148],87:[2,148],88:[2,148],89:[2,148],95:[2,148],96:[2,148],99:[2,148],100:[2,148],104:[2,148],105:[2,148]},{2:[2,142],6:[2,142],11:[2,142],13:[2,142],15:[2,142],18:[2,142],34:[2,142],36:[2,142],68:[2,142],69:[2,142],72:[2,142],74:[2,142],87:[2,142],88:[2,142],89:[2,142],95:[2,142],96:[2,142],99:[2,142],100:[2,142],104:[2,142],105:[2,142]},{2:[2,143],6:[2,143],11:[2,143],13:[2,143],15:[2,143],18:[2,143],34:[2,143],36:[2,143],68:[2,143],69:[2,143],72:[2,143],74:[2,143],87:[2,143],88:[2,143],89:[2,143],95:[2,143],96:[2,143],99:[2,143],100:[2,143],104:[2,143],105:[2,143]},{13:[1,43],35:92,44:47,50:40,54:44,88:[1,46],89:[1,48],100:[1,45],101:42,106:41,107:39},{2:[2,149],6:[2,149],11:[2,149],13:[2,149],15:[2,149],18:[2,149],34:[2,149],36:[2,149],68:[2,149],69:[2,149],72:[2,149],74:[2,149],87:[2,149],88:[2,149],89:[2,149],95:[2,149],96:[2,149],99:[2,149],100:[2,149],104:[2,149],105:[2,149]},{2:[2,120],6:[2,120],11:[2,120],13:[2,120],15:[2,120],18:[2,120],34:[2,120],36:[2,120],68:[2,120],69:[2,120],72:[2,120],74:[2,120],87:[2,120],88:[2,120],89:[2,120],95:[2,120],96:[2,120],99:[2,120],100:[2,120],104:[2,120],105:[2,120]},{2:[2,122],6:[2,122],11:[2,122],13:[2,122],15:[2,122],18:[2,122],34:[2,122],36:[2,122],68:[2,122],69:[2,122],72:[2,122],74:[2,122],87:[2,122],88:[2,122],89:[2,122],95:[2,122],96:[2,122],99:[2,122],100:[2,122],104:[2,122],105:[2,122]},{2:[2,123],6:[2,123],11:[2,123],13:[2,123],15:[2,123],18:[2,123],34:[2,123],36:[2,123],68:[2,123],69:[2,123],72:[2,123],74:[2,123],87:[2,123],88:[2,123],89:[2,123],95:[2,123],96:[2,123],99:[2,123],100:[2,123],104:[2,123],105:[2,123]},{2:[2,121],6:[2,121],11:[2,121],13:[2,121],15:[2,121],18:[2,121],34:[2,121],36:[2,121],68:[2,121],69:[2,121],72:[2,121],74:[2,121],87:[2,121],88:[2,121],89:[2,121],95:[2,121],96:[2,121],99:[2,121],100:[2,121],104:[2,121],105:[2,121]},{13:[2,67],66:[2,67],67:[2,67],71:[2,67],73:[2,67],76:[2,67],86:[2,67],88:[2,67],89:[2,67],97:[2,67],100:[2,67],113:[2,67],114:[2,67],115:[2,67],116:[2,67]},{13:[2,103],66:[2,103],67:[2,103],71:[2,103],73:[2,103],76:[2,103],86:[2,103],88:[2,103],89:[2,103],97:[2,103],100:[2,103],113:[2,103],114:[2,103],115:[2,103],116:[2,103]},{13:[2,104],66:[2,104],67:[2,104],71:[2,104],73:[2,104],76:[2,104],86:[2,104],88:[2,104],89:[2,104],97:[2,104],100:[2,104],113:[2,104],114:[2,104],115:[2,104],116:[2,104]},{13:[2,111],66:[2,111],67:[2,111],71:[2,111],73:[2,111],76:[2,111],86:[2,111],88:[2,111],89:[2,111],97:[2,111],100:[2,111],113:[2,111],114:[2,111],115:[2,111],116:[2,111]},{13:[2,112],66:[2,112],67:[2,112],71:[2,112],73:[2,112],76:[2,112],86:[2,112],88:[2,112],89:[2,112],97:[2,112],100:[2,112],113:[2,112],114:[2,112],115:[2,112],116:[2,112]},{88:[1,94],97:[1,93],100:[1,95]},{13:[2,114],66:[2,114],67:[2,114],71:[2,114],73:[2,114],76:[2,114],86:[2,114],88:[2,114],89:[2,114],97:[2,114],100:[2,114],113:[2,114],114:[2,114],115:[2,114],116:[2,114]},{2:[2,116],6:[2,116],13:[2,116],18:[2,116],36:[2,116],66:[2,116],67:[2,116],71:[2,116],73:[2,116],76:[2,116],86:[2,116],88:[2,116],89:[2,116],97:[2,116],100:[2,116],110:[2,116],113:[2,116],114:[2,116],115:[2,116],116:[2,116]},{13:[2,140],15:[2,140],66:[2,140],67:[2,140],71:[2,140],73:[2,140],76:[2,140],86:[2,140],88:[2,140],89:[2,140],97:[2,140],100:[2,140],113:[2,140],114:[2,140],115:[2,140],116:[2,140]},{13:[2,141],15:[2,141],66:[2,141],67:[2,141],71:[2,141],73:[2,141],76:[2,141],86:[2,141],88:[2,141],89:[2,141],97:[2,141],100:[2,141],113:[2,141],114:[2,141],115:[2,141],116:[2,141]},{68:[1,96]},{2:[2,80],6:[2,80],11:[2,80],13:[2,80],15:[2,80],18:[2,80],34:[2,80],36:[2,80],68:[2,80],69:[2,80],74:[2,80],86:[2,80],87:[2,80],88:[2,80],89:[2,80],95:[2,80],96:[2,80],97:[2,80],99:[2,80],100:[2,80],104:[2,80],105:[2,80],113:[2,80],114:[2,80],115:[2,80],116:[2,80]},{13:[1,68],29:63,40:65,48:34,72:[1,97],82:64,86:[1,69],88:[1,33],89:[1,35],100:[1,32],102:27,109:98,110:[1,66],111:67,113:[1,28],114:[1,29],115:[1,30],116:[1,31]},{13:[2,153],15:[2,153],23:[2,153],36:[2,153],72:[2,153],86:[2,153],88:[2,153],89:[2,153],95:[2,153],99:[2,153],100:[2,153],110:[2,153],113:[2,153],114:[2,153],115:[2,153],116:[2,153]},{13:[2,155],15:[2,155],23:[2,155],36:[2,155],72:[2,155],86:[2,155],88:[2,155],89:[2,155],95:[2,155],99:[2,155],100:[2,155],110:[2,155],113:[2,155],114:[2,155],115:[2,155],116:[2,155]},{13:[2,156],15:[2,156],23:[2,156],36:[2,156],72:[2,156],86:[2,156],88:[2,156],89:[2,156],95:[2,156],99:[2,156],100:[2,156],110:[2,156],113:[2,156],114:[2,156],115:[2,156],116:[2,156]},{13:[2,157],15:[2,157],23:[2,157],36:[2,157],72:[2,157],86:[2,157],88:[2,157],89:[2,157],95:[2,157],99:[2,157],100:[2,157],110:[2,157],113:[2,157],114:[2,157],115:[2,157],116:[2,157]},{13:[2,158],15:[2,158],23:[2,158],36:[2,158],72:[2,158],86:[2,158],88:[2,158],89:[2,158],95:[2,158],99:[2,158],100:[2,158],110:[2,158],113:[2,158],114:[2,158],115:[2,158],116:[2,158]},{13:[2,159],15:[2,159],23:[2,159],36:[2,159],72:[2,159],86:[2,159],88:[2,159],89:[2,159],95:[2,159],99:[2,159],100:[2,159],110:[2,159],113:[2,159],114:[2,159],115:[2,159],116:[2,159]},{13:[1,68],15:[1,81],29:63,32:99,36:[1,86],40:65,48:34,82:78,86:[1,69],88:[1,33],89:[1,35],94:[1,85],98:84,99:[1,83],100:[1,32],102:27,103:82,104:[1,57],105:[1,58],108:76,109:77,110:[1,66],111:67,113:[1,28],114:[1,29],115:[1,30],116:[1,31]},{87:[1,87]},{74:[1,100]},{77:[1,101]},{13:[1,68],23:[1,104],29:63,30:102,31:103,40:65,48:34,82:64,86:[1,69],88:[1,33],89:[1,35],95:[2,155],99:[2,155],100:[1,32],102:27,109:62,110:[1,66],111:67,113:[1,28],114:[1,29],115:[1,30],116:[1,31]},{33:105,95:[1,106],99:[1,56]},{13:[1,68],15:[1,81],29:63,32:107,36:[1,86],40:65,48:34,82:78,86:[1,69],88:[1,33],89:[1,35],94:[1,85],98:84,99:[1,83],100:[1,32],102:27,103:82,104:[1,57],105:[1,58],108:76,109:77,110:[1,66],111:67,113:[1,28],114:[1,29],115:[1,30],116:[1,31]},{2:[1,110],6:[1,108],13:[1,115],20:111,27:109,28:112,29:113,32:114,39:[1,116],40:65,42:[1,117],43:[1,118],48:34,82:78,86:[1,69],88:[1,33],89:[1,35],100:[1,32],102:27,108:76,109:77,110:[1,66],111:67,113:[1,28],114:[1,29],115:[1,30],116:[1,31]},{15:[2,150],23:[2,150],36:[2,150],72:[2,150],95:[2,150],99:[2,150]},{15:[2,151],23:[2,151],36:[2,151],72:[2,151],95:[2,151],99:[2,151]},{13:[1,68],15:[2,156],23:[2,156],29:63,31:119,36:[2,156],40:65,48:34,72:[2,156],82:64,86:[1,69],88:[1,33],89:[1,35],95:[2,156],99:[2,156],100:[1,32],102:27,109:62,110:[1,66],111:67,113:[1,28],114:[1,29],115:[1,30],116:[1,31]},{15:[1,120],36:[1,121]},{15:[1,122]},{2:[2,129],6:[2,129],11:[2,129],13:[2,129],15:[2,129],18:[2,129],23:[2,129],34:[2,129],36:[2,129],68:[2,129],69:[2,129],72:[2,129],74:[2,129],86:[2,129],87:[2,129],88:[2,129],89:[2,129],95:[2,129],96:[2,129],97:[2,129],99:[2,129],100:[2,129],104:[2,129],105:[2,129],110:[2,129],113:[2,129],114:[2,129],115:[2,129],116:[2,129]},{15:[1,123],36:[1,124]},{15:[1,125]},{15:[1,126]},{15:[1,127]},{15:[2,133],36:[2,133]},{2:[2,130],6:[2,130],11:[2,130],13:[2,130],15:[2,130],18:[2,130],23:[2,130],34:[2,130],36:[2,130],68:[2,130],69:[2,130],72:[2,130],74:[2,130],86:[2,130],87:[2,130],88:[2,130],89:[2,130],95:[2,130],96:[2,130],97:[2,130],99:[2,130],100:[2,130],104:[2,130],105:[2,130],110:[2,130],113:[2,130],114:[2,130],115:[2,130],116:[2,130]},{36:[1,129],87:[1,128]},{15:[2,100],36:[2,100],87:[2,100]},{13:[1,43],35:130,44:47,50:40,54:44,88:[1,46],89:[1,48],100:[1,45],101:42,106:41,107:39},{2:[2,147],6:[2,147],11:[2,147],13:[2,147],15:[2,147],18:[2,147],34:[2,147],36:[2,147],68:[2,147],69:[2,147],72:[2,147],74:[2,147],87:[2,147],88:[2,147],89:[2,147],95:[2,147],96:[2,147],99:[2,147],100:[2,147],104:[2,147],105:[2,147]},{15:[1,131]},{95:[1,132]},{95:[1,133]},{95:[1,134]},{13:[2,69],38:135,62:5,63:6,66:[2,69],67:[2,69],71:[2,69],73:[2,69],76:[2,69],86:[2,69],88:[2,69],89:[2,69],97:[2,69],100:[2,69],113:[2,69],114:[2,69],115:[2,69],116:[2,69]},{13:[2,69],38:136,62:5,63:6,66:[2,69],67:[2,69],71:[2,69],73:[2,69],76:[2,69],86:[2,69],88:[2,69],89:[2,69],97:[2,69],100:[2,69],113:[2,69],114:[2,69],115:[2,69],116:[2,69]},{13:[2,154],15:[2,154],23:[2,154],36:[2,154],72:[2,154],86:[2,154],88:[2,154],89:[2,154],95:[2,154],99:[2,154],100:[2,154],110:[2,154],113:[2,154],114:[2,154],115:[2,154],116:[2,154]},{15:[1,137],36:[1,138]},{4:[1,139]},{13:[2,69],38:140,62:5,63:6,66:[2,69],67:[2,69],71:[2,69],73:[2,69],76:[2,69],86:[2,69],88:[2,69],89:[2,69],97:[2,69],100:[2,69],113:[2,69],114:[2,69],115:[2,69],116:[2,69]},{2:[2,75],6:[2,75],11:[2,75],15:[2,75],18:[2,75],34:[2,75],36:[2,75],68:[2,75],69:[2,75],74:[2,75],87:[2,75],95:[2,75],96:[2,75],99:[2,75],104:[2,75],105:[2,75]},{13:[1,68],23:[1,104],29:63,30:141,40:65,48:34,82:64,86:[1,69],88:[1,33],89:[1,35],100:[1,32],102:27,109:98,110:[1,66],111:67,113:[1,28],114:[1,29],115:[1,30],116:[1,31]},{13:[2,69],38:142,62:5,63:6,66:[2,69],67:[2,69],71:[2,69],73:[2,69],76:[2,69],86:[2,69],88:[2,69],89:[2,69],97:[2,69],100:[2,69],113:[2,69],114:[2,69],115:[2,69],116:[2,69]},{13:[1,68],29:63,32:143,40:65,48:34,82:78,86:[1,69],88:[1,33],89:[1,35],100:[1,32],102:27,108:76,109:77,110:[1,66],111:67,113:[1,28],114:[1,29],115:[1,30],116:[1,31]},{100:[1,95]},{15:[1,137],33:144,36:[1,138],95:[1,106],99:[1,56]},{2:[2,14],6:[2,14],11:[2,14],15:[2,14],18:[2,14],34:[2,14],36:[2,14],68:[2,14],69:[2,14],74:[2,14],77:[2,14],87:[2,14],95:[2,14],96:[2,14],99:[2,14],104:[2,14],105:[2,14]},{2:[1,146],6:[1,145],18:[1,147]},{6:[1,148]},{2:[2,19],6:[2,19],18:[2,19]},{2:[2,20],6:[2,20],18:[2,20]},{13:[1,68],23:[1,104],29:63,30:149,31:150,34:[1,151],36:[1,152],40:65,48:34,82:64,86:[1,69],88:[1,33],89:[1,35],95:[2,155],99:[2,155],100:[1,32],102:27,109:62,110:[1,66],111:67,113:[1,28],114:[1,29],115:[1,30],116:[1,31]},{33:153,95:[1,106],99:[1,56]},{13:[1,68],15:[1,81],29:63,32:154,36:[1,86],40:65,48:34,82:78,86:[1,69],88:[1,33],89:[1,35],94:[1,85],98:84,99:[1,83],100:[1,32],102:27,103:82,104:[1,57],105:[1,58],108:76,109:77,110:[1,66],111:67,113:[1,28],114:[1,29],115:[1,30],116:[1,31]},{40:155,113:[1,28],114:[1,29],115:[1,30],116:[1,31]},{40:156,113:[1,28],114:[1,29],115:[1,30],116:[1,31]},{40:157,113:[1,28],114:[1,29],115:[1,30],116:[1,31]},{13:[1,68],15:[2,152],23:[2,152],29:63,36:[2,152],40:65,48:34,72:[2,152],82:64,86:[1,69],88:[1,33],89:[1,35],95:[2,152],99:[2,152],100:[1,32],102:27,109:98,110:[1,66],111:67,113:[1,28],114:[1,29],115:[1,30],116:[1,31]},{2:[2,94],6:[2,94],11:[2,94],13:[2,94],15:[2,94],18:[2,94],34:[2,94],36:[2,94],68:[2,94],69:[2,94],74:[2,94],86:[2,94],87:[2,94],88:[2,94],89:[2,94],95:[2,94],96:[2,94],97:[2,94],99:[2,94],100:[2,94],104:[2,94],105:[2,94],113:[2,94],114:[2,94],115:[2,94],116:[2,94]},{13:[2,69],38:89,62:5,63:6,66:[2,69],67:[2,69],71:[2,69],73:[2,69],76:[2,69],85:158,86:[2,69],88:[2,69],89:[2,69],97:[2,69],100:[2,69],113:[2,69],114:[2,69],115:[2,69],116:[2,69]},{2:[2,138],6:[2,138],11:[2,138],13:[2,138],15:[2,138],18:[2,138],34:[2,138],36:[2,138],68:[2,138],69:[2,138],74:[2,138],86:[2,138],87:[2,138],88:[2,138],89:[2,138],95:[2,138],96:[2,138],97:[2,138],99:[2,138],100:[2,138],104:[2,138],105:[2,138],113:[2,138],114:[2,138],115:[2,138],116:[2,138]},{2:[2,131],6:[2,131],11:[2,131],13:[2,131],15:[2,131],18:[2,131],23:[2,131],34:[2,131],36:[2,131],68:[2,131],69:[2,131],72:[2,131],74:[2,131],86:[2,131],87:[2,131],88:[2,131],89:[2,131],95:[2,131],96:[2,131],97:[2,131],99:[2,131],100:[2,131],104:[2,131],105:[2,131],110:[2,131],113:[2,131],114:[2,131],115:[2,131],116:[2,131]},{15:[2,134],36:[2,134]},{2:[2,136],6:[2,136],11:[2,136],13:[2,136],15:[2,136],18:[2,136],23:[2,136],34:[2,136],36:[2,136],68:[2,136],69:[2,136],72:[2,136],74:[2,136],86:[2,136],87:[2,136],88:[2,136],89:[2,136],95:[2,136],96:[2,136],97:[2,136],99:[2,136],100:[2,136],104:[2,136],105:[2,136],110:[2,136],113:[2,136],114:[2,136],115:[2,136],116:[2,136]},{2:[2,127],6:[2,127],11:[2,127],13:[2,127],15:[2,127],18:[2,127],23:[2,127],34:[2,127],36:[2,127],68:[2,127],69:[2,127],72:[2,127],74:[2,127],86:[2,127],87:[2,127],88:[2,127],89:[2,127],95:[2,127],96:[2,127],97:[2,127],99:[2,127],100:[2,127],104:[2,127],105:[2,127],110:[2,127],113:[2,127],114:[2,127],115:[2,127],116:[2,127]},{2:[2,125],6:[2,125],11:[2,125],13:[2,125],15:[2,125],18:[2,125],23:[2,125],34:[2,125],36:[2,125],68:[2,125],69:[2,125],72:[2,125],74:[2,125],86:[2,125],87:[2,125],88:[2,125],89:[2,125],95:[2,125],96:[2,125],97:[2,125],99:[2,125],100:[2,125],104:[2,125],105:[2,125],110:[2,125],113:[2,125],114:[2,125],115:[2,125],116:[2,125]},{2:[2,98],6:[2,98],11:[2,98],13:[2,98],15:[2,98],18:[2,98],34:[2,98],36:[2,98],68:[2,98],69:[2,98],74:[2,98],86:[2,98],87:[2,98],88:[2,98],89:[2,98],95:[2,98],96:[2,98],97:[2,98],99:[2,98],100:[2,98],104:[2,98],105:[2,98],113:[2,98],114:[2,98],115:[2,98],116:[2,98]},{13:[2,69],38:159,62:5,63:6,66:[2,69],67:[2,69],71:[2,69],73:[2,69],76:[2,69],86:[2,69],88:[2,69],89:[2,69],97:[2,69],100:[2,69],113:[2,69],114:[2,69],115:[2,69],116:[2,69]},{2:[2,146],6:[2,146],11:[2,146],15:[2,146],18:[2,146],34:[2,146],36:[2,146],68:[2,146],69:[2,146],74:[2,146],87:[2,146],95:[2,146],96:[2,146],99:[2,146],104:[2,146],105:[2,146]},{2:[2,144],6:[2,144],11:[2,144],13:[2,144],15:[2,144],18:[2,144],34:[2,144],36:[2,144],68:[2,144],69:[2,144],72:[2,144],74:[2,144],87:[2,144],88:[2,144],89:[2,144],95:[2,144],96:[2,144],99:[2,144],100:[2,144],104:[2,144],105:[2,144]},{13:[2,113],66:[2,113],67:[2,113],71:[2,113],73:[2,113],76:[2,113],86:[2,113],88:[2,113],89:[2,113],97:[2,113],100:[2,113],113:[2,113],114:[2,113],115:[2,113],116:[2,113]},{13:[2,115],66:[2,115],67:[2,115],71:[2,115],73:[2,115],76:[2,115],86:[2,115],88:[2,115],89:[2,115],97:[2,115],100:[2,115],113:[2,115],114:[2,115],115:[2,115],116:[2,115]},{2:[2,117],6:[2,117],13:[2,117],18:[2,117],36:[2,117],66:[2,117],67:[2,117],71:[2,117],73:[2,117],76:[2,117],86:[2,117],88:[2,117],89:[2,117],97:[2,117],100:[2,117],110:[2,117],113:[2,117],114:[2,117],115:[2,117],116:[2,117]},{69:[1,160]},{2:[2,72],6:[2,72],11:[2,72],15:[2,72],18:[2,72],34:[2,72],36:[2,72],68:[2,72],69:[2,72],74:[2,72],87:[2,72],95:[2,72],96:[2,72],99:[2,72],104:[2,72],105:[2,72]},{13:[2,160],15:[2,160],23:[2,160],36:[2,160],72:[2,160],86:[2,160],88:[2,160],89:[2,160],95:[2,160],99:[2,160],100:[2,160],110:[2,160],113:[2,160],114:[2,160],115:[2,160],116:[2,160]},{13:[1,68],29:63,32:162,40:65,48:34,82:78,86:[1,69],88:[1,33],89:[1,35],100:[1,32],102:27,108:76,109:77,110:[1,66],111:67,112:161,113:[1,28],114:[1,29],115:[1,30],116:[1,31]},{13:[1,68],29:63,32:165,40:65,48:34,75:163,79:164,82:78,86:[1,69],88:[1,33],89:[1,35],100:[1,32],102:27,108:76,109:77,110:[1,66],111:67,113:[1,28],114:[1,29],115:[1,30],116:[1,31]},{2:[2,74],6:[2,74],11:[2,74],15:[2,74],18:[2,74],34:[2,74],36:[2,74],68:[2,74],69:[2,74],74:[2,74],87:[2,74],95:[2,74],96:[2,74],99:[2,74],104:[2,74],105:[2,74]},{2:[2,76],6:[2,76],11:[2,76],15:[2,76],18:[2,76],34:[2,76],36:[2,76],68:[2,76],69:[2,76],74:[2,76],87:[2,76],95:[2,76],96:[2,76],99:[2,76],104:[2,76],105:[2,76]},{2:[2,27],6:[2,27],11:[1,166],15:[2,27],18:[2,27],34:[2,27],36:[2,27],68:[2,27],69:[2,27],74:[2,27],87:[2,27],95:[2,27],96:[2,27],99:[2,27],104:[2,27],105:[2,27]},{23:[1,104],30:167},{13:[1,68],29:63,32:168,40:65,48:34,82:78,86:[1,69],88:[1,33],89:[1,35],100:[1,32],102:27,108:76,109:77,110:[1,66],111:67,113:[1,28],114:[1,29],115:[1,30],116:[1,31]},{2:[2,15],6:[2,15],11:[2,15],15:[2,15],18:[2,15],34:[2,15],36:[2,15],68:[2,15],69:[2,15],74:[2,15],77:[2,15],87:[2,15],95:[2,15],96:[2,15],99:[2,15],104:[2,15],105:[2,15]},{6:[1,169]},{13:[1,115],20:170,28:112,29:113,32:114,39:[1,116],40:65,42:[1,117],43:[1,118],48:34,82:78,86:[1,69],88:[1,33],89:[1,35],100:[1,32],102:27,108:76,109:77,110:[1,66],111:67,113:[1,28],114:[1,29],115:[1,30],116:[1,31]},{2:[2,16],6:[2,16],11:[2,16],15:[2,16],18:[2,16],34:[2,16],36:[2,16],68:[2,16],69:[2,16],74:[2,16],77:[2,16],87:[2,16],95:[2,16],96:[2,16],99:[2,16],104:[2,16],105:[2,16]},{2:[2,21],6:[2,21],18:[2,21]},{13:[1,68],23:[1,104],29:63,30:171,40:65,48:34,82:64,86:[1,69],88:[1,33],89:[1,35],100:[1,32],102:27,109:98,110:[1,66],111:67,113:[1,28],114:[1,29],115:[1,30],116:[1,31]},{13:[1,43],35:172,44:47,50:40,54:44,88:[1,46],89:[1,48],100:[1,45],101:42,106:41,107:39},{13:[1,175],29:174,37:173,100:[1,32]},{13:[1,68],29:63,32:176,40:65,48:34,82:78,86:[1,69],88:[1,33],89:[1,35],100:[1,32],102:27,108:76,109:77,110:[1,66],111:67,113:[1,28],114:[1,29],115:[1,30],116:[1,31]},{15:[1,137],33:177,36:[1,138],95:[1,106],99:[1,56]},{33:180,41:178,92:179,93:181,94:[1,183],95:[1,182],99:[1,56]},{33:180,41:184,92:179,93:181,94:[1,183],95:[1,182],99:[1,56]},{33:180,41:185,92:179,93:181,94:[1,183],95:[1,182],99:[1,56]},{15:[1,186],36:[1,129]},{15:[2,99],36:[2,99],87:[2,99]},{13:[2,69],38:187,62:5,63:6,66:[2,69],67:[2,69],71:[2,69],73:[2,69],76:[2,69],86:[2,69],88:[2,69],89:[2,69],97:[2,69],100:[2,69],113:[2,69],114:[2,69],115:[2,69],116:[2,69]},{15:[1,188],36:[1,189]},{15:[2,163],36:[2,163]},{6:[1,190],18:[1,191]},{6:[2,84],18:[2,84]},{72:[1,192]},{4:[1,75],26:193},{2:[2,77],6:[2,77],11:[2,77],15:[2,77],18:[2,77],34:[2,77],36:[2,77],68:[2,77],69:[2,77],74:[2,77],87:[2,77],95:[2,77],96:[2,77],99:[2,77],104:[2,77],105:[2,77]},{15:[1,194]},{2:[2,17],6:[2,17],11:[2,17],15:[2,17],18:[2,17],34:[2,17],36:[2,17],68:[2,17],69:[2,17],74:[2,17],77:[2,17],87:[2,17],95:[2,17],96:[2,17],99:[2,17],104:[2,17],105:[2,17]},{2:[2,18],6:[2,18],18:[2,18]},{2:[2,22],6:[2,22],18:[2,22]},{2:[2,25],6:[2,25],18:[2,25]},{34:[1,195],36:[1,196]},{34:[2,82],36:[2,82]},{99:[1,83]},{23:[1,104],30:197},{13:[1,68],29:63,32:198,40:65,48:34,82:78,86:[1,69],88:[1,33],89:[1,35],100:[1,32],102:27,108:76,109:77,110:[1,66],111:67,113:[1,28],114:[1,29],115:[1,30],116:[1,31]},{2:[2,29],6:[2,29],18:[2,29],36:[1,199]},{2:[2,106],6:[2,106],18:[2,106],36:[2,106]},{2:[2,107],6:[2,107],18:[2,107],36:[2,107]},{2:[2,108],6:[2,108],18:[2,108],36:[2,108]},{89:[1,200],100:[1,95]},{2:[2,109],6:[2,109],18:[2,109],36:[2,109]},{2:[2,30],6:[2,30],18:[2,30],36:[1,199]},{2:[2,31],6:[2,31],18:[2,31],36:[1,199]},{2:[2,97],6:[2,97],11:[2,97],13:[2,97],15:[2,97],18:[2,97],34:[2,97],36:[2,97],68:[2,97],69:[2,97],74:[2,97],86:[2,97],87:[2,97],88:[2,97],89:[2,97],95:[2,97],96:[2,97],97:[2,97],99:[2,97],100:[2,97],104:[2,97],105:[2,97],113:[2,97],114:[2,97],115:[2,97],116:[2,97]},{2:[2,70],6:[2,70],11:[2,70],15:[2,70],18:[2,70],34:[2,70],36:[2,70],68:[2,70],69:[2,70],74:[2,70],87:[2,70],95:[2,70],96:[2,70],99:[2,70],104:[2,70],105:[2,70]},{13:[2,161],15:[2,161],23:[2,161],36:[2,161],72:[2,161],86:[2,161],88:[2,161],89:[2,161],95:[2,161],99:[2,161],100:[2,161],110:[2,161],113:[2,161],114:[2,161],115:[2,161],116:[2,161]},{13:[1,68],29:63,32:201,40:65,48:34,82:78,86:[1,69],88:[1,33],89:[1,35],100:[1,32],102:27,108:76,109:77,110:[1,66],111:67,113:[1,28],114:[1,29],115:[1,30],116:[1,31]},{2:[2,73],6:[2,73],11:[2,73],15:[2,73],18:[2,73],34:[2,73],36:[2,73],68:[2,73],69:[2,73],74:[2,73],87:[2,73],95:[2,73],96:[2,73],99:[2,73],104:[2,73],105:[2,73]},{13:[1,68],29:63,32:165,40:65,48:34,79:202,82:78,86:[1,69],88:[1,33],89:[1,35],100:[1,32],102:27,108:76,109:77,110:[1,66],111:67,113:[1,28],114:[1,29],115:[1,30],116:[1,31]},{13:[2,69],38:203,62:5,63:6,66:[2,69],67:[2,69],71:[2,69],73:[2,69],76:[2,69],86:[2,69],88:[2,69],89:[2,69],97:[2,69],100:[2,69],113:[2,69],114:[2,69],115:[2,69],116:[2,69]},{2:[2,28],6:[2,28],11:[2,28],15:[2,28],18:[2,28],34:[2,28],36:[2,28],68:[2,28],69:[2,28],74:[2,28],87:[2,28],95:[2,28],96:[2,28],99:[2,28],104:[2,28],105:[2,28]},{13:[1,68],29:63,31:204,40:65,48:34,82:64,86:[1,69],88:[1,33],89:[1,35],100:[1,32],102:27,109:62,110:[1,66],111:67,113:[1,28],114:[1,29],115:[1,30],116:[1,31]},{13:[1,43],35:205,44:47,50:40,54:44,88:[1,46],89:[1,48],100:[1,45],101:42,106:41,107:39},{13:[1,175],29:206,100:[1,32]},{2:[2,23],6:[2,23],18:[2,23]},{15:[1,207]},{33:180,92:208,93:181,94:[1,183],95:[1,182],99:[1,56]},{95:[1,209]},{15:[2,162],36:[2,162]},{6:[2,83],18:[2,83]},{6:[2,85],18:[2,85]},{13:[1,68],23:[1,104],29:63,30:210,40:65,48:34,82:64,86:[1,69],88:[1,33],89:[1,35],100:[1,32],102:27,109:98,110:[1,66],111:67,113:[1,28],114:[1,29],115:[1,30],116:[1,31]},{2:[2,26],6:[2,26],18:[2,26]},{34:[2,81],36:[2,81]},{13:[1,68],29:63,31:211,40:65,48:34,82:64,86:[1,69],88:[1,33],89:[1,35],100:[1,32],102:27,109:62,110:[1,66],111:67,113:[1,28],114:[1,29],115:[1,30],116:[1,31]},{2:[2,105],6:[2,105],18:[2,105],36:[2,105]},{2:[2,110],6:[2,110],18:[2,110],36:[2,110]},{2:[2,78],6:[2,78],11:[2,78],15:[2,78],18:[2,78],34:[2,78],36:[2,78],68:[2,78],69:[2,78],74:[2,78],87:[2,78],95:[2,78],96:[2,78],99:[2,78],104:[2,78],105:[2,78]},{13:[1,68],23:[1,104],29:63,30:212,40:65,48:34,82:64,86:[1,69],88:[1,33],89:[1,35],100:[1,32],102:27,109:98,110:[1,66],111:67,113:[1,28],114:[1,29],115:[1,30],116:[1,31]},{2:[2,24],6:[2,24],18:[2,24]}],
defaultActions: {36:[2,1]},
parseError: function parseError(str, hash) {
    if (hash.recoverable) {
        this.trace(str);
    } else {
        throw new Error(str);
    }
},
parse: function parse(input) {
    var self = this,
        stack = [0],
        vstack = [null], // semantic value stack
        lstack = [], // location stack
        table = this.table,
        yytext = '',
        yylineno = 0,
        yyleng = 0,
        recovering = 0,
        TERROR = 2,
        EOF = 1;

    var args = lstack.slice.call(arguments, 1);

    //this.reductionCount = this.shiftCount = 0;

    this.lexer.setInput(input);
    this.lexer.yy = this.yy;
    this.yy.lexer = this.lexer;
    this.yy.parser = this;
    if (typeof this.lexer.yylloc == 'undefined') {
        this.lexer.yylloc = {};
    }
    var yyloc = this.lexer.yylloc;
    lstack.push(yyloc);

    var ranges = this.lexer.options && this.lexer.options.ranges;

    if (typeof this.yy.parseError === 'function') {
        this.parseError = this.yy.parseError;
    } else {
        this.parseError = Object.getPrototypeOf(this).parseError;
    }

    function popStack (n) {
        stack.length = stack.length - 2 * n;
        vstack.length = vstack.length - n;
        lstack.length = lstack.length - n;
    }

    function lex() {
        var token;
        token = self.lexer.lex() || EOF; // $end = 1
        // if token isn't its numeric value, convert
        if (typeof token !== 'number') {
            token = self.symbols_[token] || token;
        }
        return token;
    }

    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;
    while (true) {
        // retreive state number from top of stack
        state = stack[stack.length - 1];

        // use default actions if available
        if (this.defaultActions[state]) {
            action = this.defaultActions[state];
        } else {
            if (symbol === null || typeof symbol == 'undefined') {
                symbol = lex();
            }
            // read action for current state and first input
            action = table[state] && table[state][symbol];
        }

_handle_error:
        // handle parse error
        if (typeof action === 'undefined' || !action.length || !action[0]) {
            var error_rule_depth;
            var errStr = '';

            // Return the rule stack depth where the nearest error rule can be found.
            // Return FALSE when no error recovery rule was found.
            function locateNearestErrorRecoveryRule(state) {
                var stack_probe = stack.length - 1;
                var depth = 0;

                // try to recover from error
                for(;;) {
                    // check for error recovery rule in this state
                    if ((TERROR.toString()) in table[state]) {
                        return depth;
                    }
                    if (state === 0 || stack_probe < 2) {
                        return false; // No suitable error recovery rule available.
                    }
                    stack_probe -= 2; // popStack(1): [symbol, action]
                    state = stack[stack_probe];
                    ++depth;
                }
            }

            if (!recovering) {
                // first see if there's any chance at hitting an error recovery rule:
                error_rule_depth = locateNearestErrorRecoveryRule(state);

                // Report error
                expected = [];
                for (p in table[state]) {
                    if (this.terminals_[p] && p > TERROR) {
                        expected.push("'"+this.terminals_[p]+"'");
                    }
                }
                if (this.lexer.showPosition) {
                    errStr = 'Parse error on line '+(yylineno+1)+":\n"+this.lexer.showPosition()+"\nExpecting "+expected.join(', ') + ", got '" + (this.terminals_[symbol] || symbol)+ "'";
                } else {
                    errStr = 'Parse error on line '+(yylineno+1)+": Unexpected " +
                                  (symbol == EOF ? "end of input" :
                                              ("'"+(this.terminals_[symbol] || symbol)+"'"));
                }
                this.parseError(errStr, {
                    text: this.lexer.match,
                    token: this.terminals_[symbol] || symbol,
                    line: this.lexer.yylineno,
                    loc: yyloc,
                    expected: expected,
                    recoverable: (error_rule_depth !== false)
                });
            } else if (preErrorSymbol !== EOF) {
                error_rule_depth = locateNearestErrorRecoveryRule(state);
            }

            // just recovered from another error
            if (recovering == 3) {
                if (symbol === EOF || preErrorSymbol === EOF) {
                    throw new Error(errStr || 'Parsing halted while starting to recover from another error.');
                }

                // discard current lookahead and grab another
                yyleng = this.lexer.yyleng;
                yytext = this.lexer.yytext;
                yylineno = this.lexer.yylineno;
                yyloc = this.lexer.yylloc;
                symbol = lex();
            }

            // try to recover from error
            if (error_rule_depth === false) {
                throw new Error(errStr || 'Parsing halted. No suitable error recovery rule available.');
            }
            popStack(error_rule_depth);

            preErrorSymbol = (symbol == TERROR ? null : symbol); // save the lookahead token
            symbol = TERROR;         // insert generic error symbol as new lookahead
            state = stack[stack.length-1];
            action = table[state] && table[state][TERROR];
            recovering = 3; // allow 3 real symbols to be shifted before reporting a new error
        }

        // this shouldn't happen, unless resolve defaults are off
        if (action[0] instanceof Array && action.length > 1) {
            throw new Error('Parse Error: multiple actions possible at state: '+state+', token: '+symbol);
        }

        switch (action[0]) {
            case 1: // shift
                //this.shiftCount++;

                stack.push(symbol);
                vstack.push(this.lexer.yytext);
                lstack.push(this.lexer.yylloc);
                stack.push(action[1]); // push state
                symbol = null;
                if (!preErrorSymbol) { // normal execution/no error
                    yyleng = this.lexer.yyleng;
                    yytext = this.lexer.yytext;
                    yylineno = this.lexer.yylineno;
                    yyloc = this.lexer.yylloc;
                    if (recovering > 0) {
                        recovering--;
                    }
                } else {
                    // error just occurred, resume old lookahead f/ before error
                    symbol = preErrorSymbol;
                    preErrorSymbol = null;
                }
                break;

            case 2:
                // reduce
                //this.reductionCount++;

                len = this.productions_[action[1]][1];

                // perform semantic action
                yyval.$ = vstack[vstack.length-len]; // default to $$ = $1
                // default location, uses first token for firsts, last for lasts
                yyval._$ = {
                    first_line: lstack[lstack.length-(len||1)].first_line,
                    last_line: lstack[lstack.length-1].last_line,
                    first_column: lstack[lstack.length-(len||1)].first_column,
                    last_column: lstack[lstack.length-1].last_column
                };
                if (ranges) {
                  yyval._$.range = [lstack[lstack.length-(len||1)].range[0], lstack[lstack.length-1].range[1]];
                }
                r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, this.yy, action[1], vstack, lstack].concat(args));

                if (typeof r !== 'undefined') {
                    return r;
                }

                // pop off stack
                if (len) {
                    stack = stack.slice(0,-1*len*2);
                    vstack = vstack.slice(0, -1*len);
                    lstack = lstack.slice(0, -1*len);
                }

                stack.push(this.productions_[action[1]][0]);    // push nonterminal (reduce)
                vstack.push(yyval.$);
                lstack.push(yyval._$);
                // goto new state = table[STATE][NONTERMINAL]
                newState = table[stack[stack.length-2]][stack[stack.length-1]];
                stack.push(newState);
                break;

            case 3:
                // accept
                return true;
        }

    }

    return true;
}};

function Parser () {
  this.yy = {};
}
Parser.prototype = parser;parser.Parser = Parser;
return new Parser;
})();


if (typeof require !== 'undefined' && typeof exports !== 'undefined') {
exports.parser = LichParser;
exports.Parser = LichParser.Parser;
exports.parse = function () { return LichParser.parse.apply(LichParser, arguments); };
exports.main = function commonjsMain(args) {
    if (!args[1]) {
        console.log('Usage: '+args[0]+' FILE');
        process.exit(1);
    }
    var source = require('fs').readFileSync(require('path').normalize(args[1]), "utf8");
    return exports.parser.parse(source);
};
if (typeof module !== 'undefined' && require.main === module) {
  exports.main(process.argv.slice(1));
}
}