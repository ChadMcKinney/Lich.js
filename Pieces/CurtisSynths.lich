--Prometheus
--Scriabin
--coleJI

let growl freqq => osc >> fold 0.125 >> filt >> gain 128 >> pan 0.15 >> myenv
    where
        freq	= freqq * 0.25
        myenv	= env [0,1,0.5,0] [0.01,0.1,0.5] 0
        osc	    = (square (freq*1.05)) + (sin (freq*1)) + (square (freq*0.49) )+ (tri (freq * 2))
        filt	= lowpass (freq * 0.25 * (pow 2 $ randomI 2 3)) 1

growlTime ~> growl
    0 _ _ _ 2 _ 0 _ 5 _ 4 _
    0 _ _ _ 2 _ 0 _ 5 _ 4 _
    0 _ _ _ 2 _ 0 _ 5 _ 4 _
    0 _ _ _ 6 _ 5 _ 6 _ 7 _
    | (d2f prometheus)

growlTime ~> growl 
    0 _ _ _ 2 _ 0 _ 0 _ 7 7 
    0 _ _ _ 2 _ 0 _ 0 _ 6 6
    0 _ _ _ 2 _ 0 _ 0 _ 5 5
    0 _ _ _ 2 _ 0 _ 0 _ 4 4
    | (d2f prometheus)


let spinning freqq => osc >> filt >> gain 0.25 >> myenv >> panner >> del >> env2
    where
        freq	= freqq * 1
        myenv   = perc2 0.6 0.6 0.01
        osc	= (tri (freq*1.00)) + (saw (freq*1)) + (tri (freq*0.5) )+ (tri (freq * 2))
        filt	= lowpass (freq * 2 * (pow 2 $ randomI 2 3)) 10
        del	= delay ((randomI 1 4) * (0.25)) 0.5
        env2	= env [1,1,0] [3,1] "linear"
        panner	= pan $ random (-1) 1

spinTime ~> spinning
    0 _ _ _ 2 _ 0 _ 5 _ 4 _ _ _ 
    0 _ _ _ 2 _ 0 _ 5 _ 4 _ _ _
    0 _ _ _ 2 _ 0 _ 5 _ 4 _ _ _
    0 _ _ _ 2 _ 0 _ 5 _ 6 _ 7 _
    | (d2f prometheus)

let spinning2 freqq => osc >> filt >> gain 0.25 >> myenv >> panner >> del >> env2
    where
        freq	= freqq * 0.5
        myenv	= perc2 0.6 0.6 0.01
        osc	= (tri (freq*1.00)) + (saw (freq*1)) + (tri (freq*0.5) )+ (tri (freq * 2))
        filt 	= lowpass (freq * 2 * (pow 2 $ randomI 2 3)) 10
        del  	= delay ((randomI 1 4) * (0.25)) 0.5
        env2 	= env [1,1,0] [3,1] "linear"
        panner 	= pan $ random (-1) 1

spinTime2 ~> spinning2 
    0 _ _ _ 2 _ 0 _ 5 _ 4 _ 6 _ _ _ 
    0 _ _ _ 2 _ 0 _ 5 _ 4 _ 6 _ _ _
    0 _ _ _ 2 _ 0 _ 5 _ 4 _ 6 _ 7 _
    | (degree2Freq prometheus)

spinTime ~> spinning
    0 _ _ _ (-2) _ ((random 1 4) * 4) _ (-5) _ (-4) _ (-6) _ _ _ _ _
    | (degree2Freq prometheus)
spinTime2 ~> spinning2
    12 _ _ _ (12 - 2) _ ((random 1 4) * 4) _ (12 - 5) _ (12 - 4) _ (12 - 6) _ _ _ _ _
    | (degree2Freq prometheus)

spinTime ~> spinning
    0 _ _ _ (-2) _ ((random 1 4) * 4) _ (-5) _ (-4) _ (-6) _ _ _ _ _
    | ((*2) . (degree2Freq prometheus) )
spinTime2 ~> spinning2
    12 _ _ _ (12 - 2) _ ((random 1 4) * 4) _ (12 - 5) _ (12 - 4) _ (12 - 6) _ _ _ _ _
    | ((*2) . (degree2Freq prometheus) )

let ice9 freqq => osc >> dec >> filt >> panner >> delay 0.25 0.5 >> gain 0.25 >> myenv
    where
        freq	= freqq * 2
        myenv	= perc 1 0.6 4
        dec	= decimate (freq * (randomI 1 2))
        osc	= (tri freq) + (square (freq * 0.5)) + (saw (freq * 0.25)) + (sin (freq * 2))
        filt	= lowpass (freq * 2 * (pow 2 $ randomI 2 5)) 20
        panner	= pan $ random (-0.5) 0.5
		
iceChords ~> ice9 
    0 1 _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
    0 4 _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
    0 5 _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
    0 4 _ _ _ _ _ _ _ _ _ _ _ _ _ _
    | (d2f prometheus)
	
let ice10 freqq => osc >> dec >> filt >> panner >> delay 0.25 0.5 >> gain 0.1 >> myenv
    where
        freq	= freqq * 2
        myenv	= perc 1 0.6 4
        dec	= decimate (freq * (randomI 1 3))
        osc	= (tri freq) + (square (freq * 0.5)) + (saw (freq * 0.25)) + (sin (freq * 2))
        filt	= lowpass (myenv $ freq * 4 * (pow 2 $ randomI 2 5)) 40
        panner	= pan $ random (-0.5) 0.5

iceChords2 ~> ice10
    0 1 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
    0 4 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
    0 5 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
    | (d2f prometheus)
	
	
iceChords3 ~> ice10
    12 13 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
    12 16 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
    12 17 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
    | (d2f prometheus)
    

let ice10 freqq => osc >> dec >> filt >> panner >> delay 0.25 0.5 >> gain 0.1 >> myenv
    where
        freq	= freqq * 2
        myenv	= perc 1 0.6 4
        dec	= decimate (freq * (randomI 1 3))
        osc	= (tri freq) + (square (freq * 0.5)) + (saw (freq * 0.25)) + (sin (freq * 2))
        filt	= lowpass (myenv $ freq * 4 * (pow 2 $ randomI 2 5)) 40
        panner	= pan $ random (-0.5) 0.5

spinTime2 ~> spinning2 
    0 _ _ _ 2 _ 0 _ 5 _ 4 _ 6 _ _ _ 
    0 _ _ _ 2 _ 0 _ 5 _ 4 _ 6 _ _ _
    0 _ _ _ 2 _ 0 _ 5 _ 4 _ 6 _ 7 _
    | (d2f prometheus)    

stop iceChords2
stop iceChords
stop spinTime
stop growlTime
stop iceChords3
stop spinTime2


let us => osc freq >> filt >> gain 0.5 >> panner  >> myEnv
    where
        osc f = (saw (f/2)) + (saw (f*0.99)) + (saw (f*1.01))
        peak = rand 0.15 0.3
        dur = rand 0.1 0.5
        myEnv = env [0,peak,(peak*0.5),0] [0.01,0.05,dur] 0
        freq = d2f prometheus $ tseq [
            1,1,1,1,2,2,2,2,3,3,3,
            13,1,13,13,21,14,2,14,13,13,13,
            7,7,7,7,7,7,7,7,(-12),(-12),(-12),
            1,1,1,1,2,2,2,2,3,3,3,
            25,13,13,13,21,14,21,14,25,25,25,
            7,14,28,7,7,7,7,7,(12),(12),(24),
            
            1,1,1,1,2,2,2,2,7,7,6,
            13,1,13,13,21,14,2,14,13,13,13,
            7,6,6,6,6,6,6,6,(-12),(-12),(-12),
            1,1,1,1,2,2,2,2,8,8,8,
            25,13,13,13,21,22,21,14,25,25,25,
            7,14,28,27,27,27,27,27,(14),(7),(7)
            ]
        filt = lowpass (myEnv (freq * (rand 3 6))) 15
        panner	= pan $ random (-0.5) 0.5

let us2 => osc freq >> filt >> gain 0.5 >> panner >> myEnv
    where
        osc f = (tri f) + (tri (f*0.99)) + (tri (f*1.01))
        dur = rand 0.1 0.3
        peak = 0.3
        myEnv = env [0,peak,(peak*0.5),0] [0.01,0.05,dur] 0
        freq = d2f prometheus $ tseq [3,3,3,1,1,1,1,0,0,0,0]
        filt = lowpass (myEnv (freq * 2)) 10
        panner	= pan $ random (-0.5) 0.5

let us3 => (square (freq/2)) + (square (freq*0.25)) >> filt >> panner >> myEnv
    where
        dur = rand 0.1 0.3
        peak = 0.3
        myEnv = env [0,peak,(peak*0.5),0] [0.01,0.05,dur] 0
        freq = d2f prometheus $ tseq [
            0,4,5,0,4,5,0,4,5,
            0,4,5,0,4,5,0,4,5,
            0,4,5,0,4,5,0,4,5,
            6,6,6,6,7,6,6,7,8,
            
            0,4,5,0,4,5,0,4,5,
            0,4,5,0,4,5,0,4,5,
            0,4,5,0,4,5,0,4,5,
            9,9,8,6,7,10,10,10,12
            ]
        filt = lowpass (myEnv (freq * 3)) 10
        panner	= pan $ random (-0.5) 0.5


slicer +> (pseq [us3,us3,us2,us,us,us,us,us]) (pwarp (pseq [(1/3),(1/4)]) $ pseq [us,us3,us2]) | (/2)
stop slicer

let interference f1 => osc freq >> fold 2000 >> filt >> amp >> panner >> myEnv
    where
        m f = (saw . (*0.126) . d2f coleJI $ tseq [f,0,f,4,f,5,f,0,f,5,f,6,f,0,f,7,f,1]) >> gain 2000
        osc f = (saw ((f *0.499)+ (m f))) + (saw ((f * 1.001)+ (m f))) + (white 0.5)
        myEnv = perc 3 0.3 6
        freq = d2f coleJI $ tseq [
            0,4,5,0,4,5,0,4,5,0,4,5,
            0,4,5,0,4,5,0,4,5,0,4,5,
            6,7,9,6,7,9,6,7,9,6,7,12
            ]
        filt = lowpass (myEnv (f1 * (rand 1 6))) 10
        panner	= pan $ random (-0.75) 0.75
        amp = gain $ sin 2 >> range 0 0.5

interferenceP ~> interference
    0 _ _ _ _ _ _ _ _ _ _
    1 _ _ _ _ _ _ _ _ _ _
    3 _ _ _ _ _ _ _ _ _ _
    0 _ _ _ _ _ _ _ _ _ _
    4 _ _ _ _ _ _ _ _ _ _
    6 _ _ _ _ _ _ _ _ _ _
    | (d2f coleJI) | (/2)
    
stop interferenceP




let aNewDistortion freq => osc >> perc2 0.0 0.3 dur >> lowpass (freq * (randI 2 4)) 20 >> fold 0.25 >> d >> gain 1 >> p >> en
    where
        --dur = 2
        dur = 0.25
        osc = (tri (freq* 1)) + (tri (freq*1.001)) + (tri (freq * 0.999)) + (square (freq * 0.5))
        d = delay (tempoSeconds * 4) 0.5
        en = env [0.5,0.15,0] [0.025,(random 0.5 3)] 0
        p = pan (random (-1.0) (1.0))

distMelodies ~> aNewDistortion (pseq [0,1,2,3,10,7,8,10,5,6,14,13,0,1,2,16,16,16,16,17]) | ((/2) . (d2f prometheus)) | (pseq [(*2), (*4),(*4), (/1)] >> pwarp (psin 1))

distMelodies ~> aNewDistortion (pseq [17,17,17,17,16,0,0,0,0,0,0,0,0]) | ((/2) . (d2f prometheus)) | (pseq [(*2), (*4),(*4), (/1)] >> pwarp (psin 1))

distMelodies ~> aNewDistortion (pseq [17,18,19,20,24,0,0,0,0,0,0,0,0]) | ((/2) . (d2f prometheus)) | (pseq [(*2), (*4),(*4), (/1)] >> pwarp (psin 1))

distMelodies ~> aNewDistortion (pseq [17,18,19,20,24,0,24,0,26,0,28,0,30]) | ((/2) . (d2f prometheus)) | (pseq [(*2), (*4),(*4), (/1)] >> pwarp (psin 1))

distMelodies ~> aNewDistortion (pseq [0,1,2,3,10,7,8,10,5,6,14,13,0,1,2,16,16,16,16,17]) | ((/1) . (d2f prometheus)) | (pseq [(*2), (*4),(*4), (/1)] >> pwarp (psin 1))

distMelodies2 ~> aNewDistortion (pseq [0,1,2,3,10,7,8,10,5,6,14,13,0,1,2,16,16,16,16,17]) | ((/4) . (d2f prometheus)) | (pseq [(*2), (*4),(*4), (/1)] >> pwarp (psin 1))

let uSnr => (noise + osc) >> filt >> dist >> pan (random (-1) 1) >> e >> gain 2 >> auxOut 9
    where
        dur = tempoSeconds
        e   = env [0,1,0.125,0] [exprandom 0.025 0.1,0.05,random 0.025 0.5] 0
        n = brown 0.5 >> perc2 0 1 0.1
        noise = n >> highpass (random 2500 2800) 15 >> lowpass 6000 10
        f = tseq [230,240]
        m = ((sin f) * (random 50 60)) + (env2 [700,150] [(dur*0.5)] 1 1)
        osc = (white 0.05) >> highpass (random 500 2000) 10
        filt = highpass (tseq [800,1000]) 1
        dist = distortion2 0.01

uSnrer +>
    _ _ [_ uSnr] uSnr
    uSnr _ uSnr _
    [_ uSnr] uSnr uSnr _
    _ uSnr uSnr _
stop oSnrer
